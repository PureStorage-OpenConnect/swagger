swagger: "2.0"
info:
  description: "Pure1 Public REST API, developed by [Pure Storage, Inc.](https://www.purestorage.com)\n\
    \ \nThe Pure1 REST API 2.0 offers one single form of authentication: OAuth 2.0\
    \ via the [Token Exchange protocol](https://datatracker.ietf.org/doc/draft-ietf-oauth-token-exchange).\n\
    \nOAuth 2.0 is an open protocol to allow secure authorization in a simple and\
    \ standard method from web, mobile, desktop and background applications.\n\nNote\
    \ that the [Authentication](#section/Authentication) section below mentions 'API\
    \ Key' as the security scheme type. This is solely for the purpose of allowing\
    \ testing this API with [Swagger UI](https://static.pure1.purestorage.com/api-swagger/index.html).\n\
    \n[Knowledge base reference documentation](https://support.purestorage.com/Pure1/Pure1_Manage/Pure1_Manage_-_REST_API/Pure1_Manage_-_REST_API__Reference)"
  version: "1.0"
  title: "Pure1 Public REST API"
  x-logo:
    url:
      $ref: "../redoc/PS-LogoBase64-P1.txt"
    backgroundColor: "#fff"
    altText: "Pure Storage logo"
host: "api-staging.pure1.purestorage.com"
tags:
- name: "Authorization"
  description: "Handles authorization access to other API endpoints through OAuth\
    \ 2.0 Token Exchange.\n"
- name: "Alerts"
  description: "Provides access to capacity, health, and hardware related array alerts.\n"
- name: "Arrays"
  description: "Provides information about FlashArray and FlashBlade appliances.\n"
- name: "Audits"
  description: "Provides access to CLI audit logs from FlashArray and FlashBlade appliances.\n"
- name: "Blades"
  description: "Provides information about FlashBlade blades.\n"
- name: "Buckets"
  description: "Provides information about FlashBlade buckets.\n"
- name: "Bucket Replica Links"
  description: "Provides information about replica links between buckets.\n"
- name: "Controllers"
  description: "Provides information about FlashArray controllers.\n"
- name: "Drives"
  description: "Provides information about FlashArray drives.\n"
- name: "Directories"
  description: "Provides information about FlashArray directories.\n"
- name: "File Systems"
  description: "Provides information about FlashArray and FlashBlade file systems.\n"
- name: "File System Replica Links"
  description: "Provides information about replica links between FlashBlade file systems.\n"
- name: "File System Snapshots"
  description: "Provides information about FlashBlade file system snapshots.\n"
- name: "Hardware"
  description: "Provides information about hardware components.\n"
- name: "Hardware Connectors"
  description: "Provides information about FlashBlade hardware connectors.\n"
- name: "Metrics"
  description: "Provides information about historical metrics for arrays, buckets,\
    \ directories,\nfile systems, pods, subscription licenses, and volumes.\n"
- name: "Network Interfaces"
  description: "Provides information about network interfaces available on arrays.\n"
- name: "Object Store Accounts"
  description: "Provides information about object store accounts.\n"
- name: "Pods"
  description: "Provides information about FlashArray pods. A pod is the pairing\n\
    of two arrays that replicate some volumes with each other.\n"
- name: "Pod Replica Links"
  description: "Provides information about replica links between FlashArray pods.\n"
- name: "Policies"
  description: "Provides information about FlashBlade policies and the members\nthey\
    \ apply to.\n"
- name: "Ports"
  description: "Provides information about FlashArray ports.\n"
- name: "Targets"
  description: "Provides information about FlashBlade external replication targets.\n"
- name: "Subscriptions"
  description: "Provides information about Pure1 subscription offerings.\n"
- name: "Volumes"
  description: "Provides information about block storage volumes on FlashArray arrays.\n"
- name: "Volume Snapshots"
  description: "Provides information about snapshots of block storage volumes\non\
    \ FlashArray arrays.\n\n"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
security:
- AuthorizationHeader: []
paths:
  /api/1.0/arrays:
    get:
      tags:
      - "Arrays"
      summary: "Get arrays"
      description: "Retrieves information about FlashArray and FlashBlade storage\
        \ appliances.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/ArrayGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/file-system-replica-links/policies:
    get:
      tags:
      - "File System Replica Links"
      summary: "Get FlashBlade file system replica link / policy pairs"
      description: "Retrieves pairs of FlashBlade file system replica link members\
        \ and their policies.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Member_ids"
      - $ref: "#/parameters/Member_names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Policy_ids"
      - $ref: "#/parameters/Policy_names"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/PolicyMembersGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/file-systems/policies:
    get:
      tags:
      - "File Systems"
      summary: "Get FlashBlade file system / policy pairs"
      description: "Retrieves pairs of FlashBlade file system members and their policies.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Member_ids"
      - $ref: "#/parameters/Member_names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Policy_ids"
      - $ref: "#/parameters/Policy_names"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/PolicyMembersGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/metrics/history:
    get:
      tags:
      - "Metrics"
      summary: "Get metrics history"
      description: "Retrieves historical metric data for resources.\nThis endpoint\
        \ supports batching: Up to 32 time series can be retrieved in one call.\n\
        It can be multiple metrics for one resource,\n(e.g., load and bandwidth for\
        \ one array - 2 time series),\none metric for multiple resource (e.g., load\
        \ for arrayA and arrayB - 2 time series),\nor a combination of both, multiple\
        \ metrics for multiple resources,\n(e.g., load and bandwidth for arrayA and\
        \ arrayB - 4 time series).\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/AggregationRequired"
      - $ref: "#/parameters/End_timeRequired"
      - $ref: "#/parameters/IdsRequired"
      - $ref: "#/parameters/NamesRequired"
      - $ref: "#/parameters/ResolutionRequired"
      - $ref: "#/parameters/Resource_idsRequired"
      - $ref: "#/parameters/Resource_namesRequired"
      - $ref: "#/parameters/Start_timeRequired"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/MetricHistoryGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/buckets:
    get:
      tags:
      - "Buckets"
      summary: "Get buckets"
      description: "Retrieves buckets.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/BucketGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/metrics:
    get:
      tags:
      - "Metrics"
      summary: "Get metrics"
      description: "Retrieves information about metrics that can be queried for.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Resource_types"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/MetricGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/alerts:
    get:
      tags:
      - "Alerts"
      summary: "Get alerts"
      description: "Retrieves information about alerts generated by Pure1-monitored\
        \ appliances.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/AlertsGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/blades:
    get:
      tags:
      - "Blades"
      summary: "Get blades"
      description: "Retrieves information about FlashBlade blades.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/BladeGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/subscription-licenses:
    get:
      tags:
      - "Subscriptions"
      summary: "Get subscription licenses"
      description: "Retrieves information about Pure1 subscription licenses.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Marketplace_partner_reference_ids"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/Subscription_ids"
      - $ref: "#/parameters/Subscription_names"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/SubscriptionLicenseGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/policies/file-systems:
    get:
      tags:
      - "Policies"
      summary: "Get policy / FlashBlade file system pairs"
      description: "Retrieves pairs of policy references and their FlashBlade file\
        \ system members.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Member_ids"
      - $ref: "#/parameters/Member_names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Policy_ids"
      - $ref: "#/parameters/Policy_names"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/PolicyMembersGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/directories:
    get:
      tags:
      - "Directories"
      summary: "Get managed directories"
      description: "Retrieves information about FlashArray managed directory objects.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/File_system_ids"
      - $ref: "#/parameters/File_system_names"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/DirectoryGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/hardware-connectors:
    get:
      tags:
      - "Hardware Connectors"
      summary: "Get hardware connectors"
      description: "Retrieves information about FlashBlade hardware connectors.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/HardwareConnectorGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/bucket-replica-links:
    get:
      tags:
      - "Bucket Replica Links"
      summary: "Get bucket replica links"
      description: "Retrieves information about bucket replica links.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Member_ids_plus"
      - $ref: "#/parameters/Member_names_plus"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/Source_ids_plus"
      - $ref: "#/parameters/Source_names_plus"
      - $ref: "#/parameters/Target_ids_plus"
      - $ref: "#/parameters/Target_names_plus"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/BucketReplicaLinkGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/policies/file-system-replica-links:
    get:
      tags:
      - "Policies"
      summary: "Get policy / FlashBlade file system replica link pairs"
      description: "Retrieves pairs of policy references and their FlashBlade file\
        \ system replica link members.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Member_ids"
      - $ref: "#/parameters/Member_names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Policy_ids"
      - $ref: "#/parameters/Policy_names"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/PolicyMembersGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/subscriptions:
    get:
      tags:
      - "Subscriptions"
      summary: "Get subscriptions"
      description: "Retrieves information about Pure1 subscriptions.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/SubscriptionGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/pod-replica-links:
    get:
      tags:
      - "Pod Replica Links"
      summary: "Get pod replica links"
      description: "Retrieves information about pod replica links.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Member_ids_plus"
      - $ref: "#/parameters/Member_names_plus"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/Source_ids_plus"
      - $ref: "#/parameters/Source_names_plus"
      - $ref: "#/parameters/Target_ids_plus"
      - $ref: "#/parameters/Target_names_plus"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/PodReplicaLinkGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/controllers:
    get:
      tags:
      - "Controllers"
      summary: "Get controllers"
      description: "Retrieves information about controllers.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/ControllerGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/hardware:
    get:
      tags:
      - "Hardware"
      summary: "Get hardware"
      description: "Retrieves information about hardware components.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/HardwareGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/ports:
    get:
      tags:
      - "Ports"
      summary: "Get ports"
      description: "Retrieves information about FlashArray ports.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/PortGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /oauth2/1.0/token:
    post:
      tags:
      - "Authorization"
      summary: "Get access token"
      description: "Exchanges an ID Token for an OAuth 2.0 access token.\n"
      consumes:
      - "application/x-www-form-urlencoded"
      parameters:
      - $ref: "#/parameters/OauthSubjectTokenType"
      - $ref: "#/parameters/OauthGrantType"
      - $ref: "#/parameters/OauthSubjectToken"
      - $ref: "#/parameters/XRequestId"
      responses:
        "200":
          $ref: "#/responses/OauthToken200"
        "400":
          $ref: "#/responses/OauthToken400"
        "401":
          $ref: "#/responses/OauthToken401"
  /api/1.0/volumes:
    get:
      tags:
      - "Volumes"
      summary: "Get volumes"
      description: "Retrieves information about volume objects.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/VolumeGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/targets:
    get:
      tags:
      - "Targets"
      summary: "Get targets"
      description: "Retrieves information about targets.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/TargetGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/arrays/support-contracts:
    get:
      tags:
      - "Arrays"
      summary: "Get array support contracts"
      description: "Retrieves the support contracts associated with arrays.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Resource_ids"
      - $ref: "#/parameters/Resource_names"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/SupportContractGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/policies/members:
    get:
      tags:
      - "Policies"
      summary: "Get policy / member pairs"
      description: "Retrieves pairs of policy references and their members.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Member_ids"
      - $ref: "#/parameters/Member_names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Policy_ids"
      - $ref: "#/parameters/Policy_names"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/PolicyMembersGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/audits:
    get:
      tags:
      - "Audits"
      summary: "Get audits"
      description: "Retrieves audit objects.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/AuditsGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/policies/file-system-snapshots:
    get:
      tags:
      - "Policies"
      summary: "Get policy / FlashBlade file system snapshot pairs"
      description: "Retrieves pairs of policy references and their FlashBlade file\
        \ system snapshot members.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Member_ids"
      - $ref: "#/parameters/Member_names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Policy_ids"
      - $ref: "#/parameters/Policy_names"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/PolicyMembersGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/file-system-replica-links:
    get:
      tags:
      - "File System Replica Links"
      summary: "Get FlashBlade file system replica links"
      description: "Retrieves information about FlashBlade file system replica links.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Member_ids_plus"
      - $ref: "#/parameters/Member_names_plus"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/Source_ids_plus"
      - $ref: "#/parameters/Source_names_plus"
      - $ref: "#/parameters/Target_ids_plus"
      - $ref: "#/parameters/Target_names_plus"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/FileSystemReplicaLinkGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/pods:
    get:
      tags:
      - "Pods"
      summary: "Get pods"
      description: "Retrieves information about pod objects.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/PodGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/object-store-accounts:
    get:
      tags:
      - "Object Store Accounts"
      summary: "Get object store accounts"
      description: "Retrieves object store accounts.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/ObjectStoreAccountGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/volume-snapshots:
    get:
      tags:
      - "Volume Snapshots"
      summary: "Get volume snapshots"
      description: "Retrieves information about snapshots of volumes.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/Source_ids"
      - $ref: "#/parameters/Source_names"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/VolumeSnapshotGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/file-system-snapshots:
    get:
      tags:
      - "File System Snapshots"
      summary: "Get FlashBlade file system snapshots"
      description: "Retrieves snapshots of FlashBlade file systems.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/Source_ids"
      - $ref: "#/parameters/Source_names"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/FileSystemSnapshotGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/network-interfaces:
    get:
      tags:
      - "Network Interfaces"
      summary: "Get network interfaces"
      description: "Retrieves information about physical and virtual network interface\
        \ objects.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/NetworkInterfaceGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/policies:
    get:
      tags:
      - "Policies"
      summary: "Get policies"
      description: "Retrieves policies and their rules.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/PolicyGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/file-system-snapshots/policies:
    get:
      tags:
      - "File System Snapshots"
      summary: "Get FlashBlade file system snapshot / policy pairs"
      description: "Retrieves pairs of FlashBlade file system snapshot members and\
        \ their policies.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Member_ids"
      - $ref: "#/parameters/Member_names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Policy_ids"
      - $ref: "#/parameters/Policy_names"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/PolicyMembersGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/file-systems:
    get:
      tags:
      - "File Systems"
      summary: "Get FlashArray and FlashBlade file systems"
      description: "Retrieves information about FlashArray and FlashBlade file system\
        \ objects.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/FileSystemGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/arrays/tags:
    get:
      tags:
      - "Arrays"
      summary: "Get array tags"
      description: "Retrieves the tags associated with specified arrays.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Keys"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Namespaces"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Resource_ids"
      - $ref: "#/parameters/Resource_names"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/TagGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
    delete:
      tags:
      - "Arrays"
      summary: "Delete array tags"
      description: "Deletes array tags from Pure1.\n"
      produces: []
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Keys"
      - $ref: "#/parameters/Namespaces"
      - $ref: "#/parameters/Resource_idsRequired"
      - $ref: "#/parameters/Resource_namesRequired"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/drives:
    get:
      tags:
      - "Drives"
      summary: "Get drives"
      description: "Retrieves information about FlashArray drives.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Continuation_token"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/DriveGetResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
  /api/1.0/arrays/tags/batch:
    put:
      tags:
      - "Arrays"
      summary: "Create or update array tags\n"
      description: "Creates or updates array tags contextual to Pure1 only.\n"
      parameters:
      - in: "body"
        required: true
        schema:
          $ref: "#/definitions/TagBatchRequired"
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Namespaces"
      - $ref: "#/parameters/Resource_idsRequired"
      - $ref: "#/parameters/Resource_namesRequired"
      responses:
        "200":
          description: "OK"
          headers:
            X-Request-ID:
              type: "string"
            X-RateLimit-Remaining-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Remaining-minute:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-second:
              type: "integer"
              format: "int32"
            X-RateLimit-Limit-minute:
              type: "integer"
              format: "int32"
          schema:
            $ref: "#/definitions/TagResponse"
        "400":
          $ref: "#/responses/Error400"
        "500":
          $ref: "#/responses/Error500"
        "403":
          $ref: "#/responses/Error403"
        "404":
          $ref: "#/responses/Error404"
        "429":
          $ref: "#/responses/Error429"
securityDefinitions:
  AuthorizationHeader:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  AlertsResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Alert"
  VolumeResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Volume"
  VolumeGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/VolumeResponse"
  ControllerGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/ControllerResponse"
  TargetResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Target"
  _arraysResource:
    allOf:
    - $ref: "#/definitions/_resource"
    - $ref: "#/definitions/_arrays"
    description: "An ordinary (as opposed to built-in) resource that exists on one\
      \ or\nmultiple arrays and can be created, named, renamed or deleted by the\n\
      user. This might be a virtual resource (e.g., a volume), or correspond\nto something\
      \ in the environment, like a host or a server.\n"
  _http:
    type: "object"
    properties:
      enabled:
        type: "boolean"
        example: false
        description: "Is the protocol enabled?"
  TagBatchRequired:
    type: "array"
    description: "A list of tags to be upserted.\n"
    items:
      $ref: "#/definitions/TagPut"
    x-codegen-request-body-name: "tag"
  HardwareConnectorResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/HardwareConnector"
  DirectoryGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/DirectoryResponse"
  DriveGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/DriveResponse"
  PolicyMembersResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/PolicyMember"
  HardwareConnectorGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/HardwareConnectorResponse"
  PodResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Pod"
  Subscription:
    allOf:
    - $ref: "#/definitions/_builtInAsOf"
    - type: "object"
      properties:
        service:
          type: "string"
          example: "PaaS (Block Storage Service)"
          description: "The service type of the subscription. Values include\n`Evergreen//One`,\n\
            `Evergreen//Flex`,\n`FlashStack as a Service`,\n`Storage as a Service`,\n\
            `PaaS (Block Storage Service)`,\n`PaaS (File and Object Storage Service)`,\n\
            `PaaS (Data Protection Service)`,\nand\n`Pure1 Subscription`.\n"
        expiration_date:
          type: "integer"
          format: "int64"
          example: 1636238104000
          description: "Date when the subscription expires.\nRepresented as a timestamp\
            \ of 00:00 on that date in UTC, in\nmilliseconds since UNIX epoch.\n"
        start_date:
          type: "integer"
          format: "int64"
          example: 1604702243000
          description: "Date when the subscription starts.\nRepresented as a timestamp\
            \ of 00:00 on that date in UTC, in\nmilliseconds since UNIX epoch.\n"
        status:
          type: "string"
          example: "active"
          description: "Current status of the subscription. Values include `active`,\n\
            `terminated`, `poc-expired`, and `signed`.\n"
    description: "A Pure1 subscription.\n"
  TagResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
  ErrorNoContext:
    type: "object"
    properties:
      message:
        type: "string"
        example: "Something was wrong"
  Pod:
    allOf:
    - $ref: "#/definitions/_resource"
    - type: "object"
      properties:
        arrays:
          type: "array"
          description: "A list of arrays that share this pod. If two or more arrays\
            \ are\nspecified, all data in the pod is synchronously mirrored between\n\
            them.\n"
          items:
            $ref: "#/definitions/_podArrayStatus"
          minItems: 1
        source:
          type: "object"
          description: "A reference to the source pod of a pod clone."
          title: "FixedReference"
          allOf:
          - $ref: "#/definitions/_fixedReference"
        mediator:
          type: "string"
          example: "purestorage"
          description: "The URL of the mediator for this pod."
    description: "An administrative domain, a data container, and a namespace for\n\
      volumes and protection groups.\n"
  _arrays:
    type: "object"
    properties:
      arrays:
        type: "array"
        description: "The list of arrays where this resource exists. Many resources\
          \ are on a single array, but\nsome resources, such as pods, can be shared\
          \ across multiple arrays.\n"
        readOnly: true
        items:
          $ref: "#/definitions/_fixedReference"
  _policy_rule:
    type: "object"
    properties:
      at:
        type: "integer"
        format: "int64"
        example: 32400000
        description: "Time of day to take the snapshot, in milliseconds since 00:00\
          \ in the\nspecified `time_zone`. Only valid if `every` is set as whole days.\n"
      keep_for:
        type: "integer"
        format: "int64"
        example: 86400000
        description: "How long to keep snapshots, in milliseconds."
      time_zone:
        type: "string"
        example: "America/Los_Angeles"
        description: "The time zone in which the `at` rule is applied."
      every:
        type: "integer"
        format: "int64"
        example: 86400000
        description: "How often to take snapshots, in milliseconds."
    description: "A rule that can be added to a policy."
  Blade:
    allOf:
    - $ref: "#/definitions/_builtInAsOf"
    - type: "object"
      properties:
        raw_capacity:
          type: "number"
          format: "int64"
          description: "The raw storage capacity of the blade.\n"
          readOnly: true
        details:
          type: "string"
          description: "Extra details about the blade. Will be `null` if none exist.\n"
          readOnly: true
        arrays:
          type: "array"
          description: "A list of arrays that contain this blade.\nEach blade should\
            \ only exist on one array.\n"
          items:
            $ref: "#/definitions/_bladeArrayStatus"
          minItems: 1
        status:
          type: "string"
          example: "healthy"
          description: "Valid values are `critical`, `evacuated`, `evacuating`, `healthy`,\n\
            `identifying`, `unclaimed`, `unhealthy`, `unknown`, `unrecognized`.\n"
          readOnly: true
    description: "A FlashBlade blade.\n"
  PodGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/PodResponse"
  FileSystemSnapshot:
    allOf:
    - $ref: "#/definitions/_arraysBuiltIn"
    - type: "object"
      properties:
        destroyed:
          type: "boolean"
          example: false
          description: "Indicates if this snapshot has been destroyed and is pending\n\
            eradication.\n"
        created:
          type: "integer"
          format: "int64"
          example: 1502729489760
          description: "Creation time in milliseconds since UNIX epoch."
        source:
          type: "object"
          description: "A reference to the file system that the snapshot was taken\
            \ from.\n"
          title: "FixedReference"
          allOf:
          - $ref: "#/definitions/_fixedReference"
        suffix:
          type: "string"
          example: "checkpoint_2018_01_01"
          description: "Indicates the suffix of the snapshot."
        "on":
          type: "object"
          description: "A reference to the array where the snapshot is stored.\n"
          title: "FixedReference"
          allOf:
          - $ref: "#/definitions/_fixedReference"
    description: "A point-in-time image of the contents of a FlashBlade file system.\n"
  PodReplicaLinkResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/PodReplicaLink"
  Bucket:
    allOf:
    - $ref: "#/definitions/_arraysResource"
    - type: "object"
      properties:
        destroyed:
          type: "boolean"
          description: "Returns a value of `true` if the bucket is destroyed, but\
            \ not yet eradicated.\n"
        versioning:
          type: "string"
          description: "The versioning state for objects within the bucket.\nValid\
            \ values are `none`, `enabled`, and `suspended`.\n"
        created:
          type: "integer"
          format: "int64"
          example: 1502729489760
          description: "Creation time of the bucket, in milliseconds since Unix epoch."
          readOnly: true
        object_count:
          type: "integer"
          format: "int64"
          example: 15
          description: "The number of objects contained within the bucket."
          readOnly: true
        account:
          $ref: "#/definitions/_fixedReference"
  Volume:
    allOf:
    - $ref: "#/definitions/_arraysResource"
    - type: "object"
      properties:
        destroyed:
          type: "boolean"
          example: false
          description: "Whether this volume has been destroyed or not."
          readOnly: true
        pod:
          type: "object"
          description: "A reference to the pod this volume belongs to, if applicable.\n"
          title: "FixedReference"
          allOf:
          - $ref: "#/definitions/_fixedReference"
        provisioned:
          type: "integer"
          format: "int64"
          example: 2048576
          description: "Provisioned size of the volume in bytes."
          minimum: 1048576
          maximum: 4503599627370496
        serial:
          type: "string"
          example: "C68B5DCF2C1A4C9400012F92"
          description: "Serial number generated by Purity when the volume was created.\n"
          readOnly: true
        created:
          type: "integer"
          format: "int64"
          example: 1502729489760
          description: "Creation time in milliseconds since UNIX epoch."
          readOnly: true
        source:
          type: "object"
          description: "A reference to the volume this volume was cloned from, if\
            \ applicable.\n"
          title: "FixedReference"
          allOf:
          - $ref: "#/definitions/_fixedReference"
        eradicated:
          type: "boolean"
          example: false
          description: "Whether this volume has been eradicated or not."
          readOnly: true
    description: "A disk-like random access virtual storage device that a FlashArray\n\
      system exports to hosts via a logical unit number (LUN). For a host,\na volume\
      \ contains a number of 512-byte sectors in which data can be\nwritten and from\
      \ which it can be read.\n"
  PolicyMembersGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/PolicyMembersResponse"
  SupportContractResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/SupportContract"
  _marketplace_partner:
    type: "object"
    properties:
      reference_id:
        type: "string"
        description: "External ID the marketplace partner knows to refer to this license.\n"
      name:
        type: "string"
        example: "pure1"
        description: "Name or identifier of the marketplace parter who owns the\n\
          reference ID.\n"
  SupportContractGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/SupportContractResponse"
  TagGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/TagResponse"
  NetworkInterfaceGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/NetworkInterfaceResponse"
  VolumeSnapshotGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/VolumeSnapshotResponse"
  PolicyMember:
    allOf:
    - $ref: "#/definitions/_timeAware"
    - type: "object"
      properties:
        member:
          $ref: "#/definitions/_fixedReference"
        policy:
          $ref: "#/definitions/_fixedReference"
    description: "An association between a policy and a member."
  _fixedReference:
    type: "object"
    properties:
      name:
        type: "string"
        example: "example_name"
        description: "The name of this resource."
        readOnly: true
      resource_type:
        type: "string"
        example: "example_resource_type"
        description: "The type of this resource represented by the name of its REST\
          \ endpoint.\nFor example, \"arrays\", \"network-interfaces\", and \"metrics\"\
          .\nThe value may be `null` if the resource is not represented.\n"
        readOnly: true
      id:
        type: "string"
        example: "2a989a09-c851-4d52-9ec6-ab728b1c04db"
        description: "The opaque and unique id of this resource."
        readOnly: true
  Target:
    allOf:
    - $ref: "#/definitions/_arraysBuiltIn"
    - type: "object"
      properties:
        address:
          type: "string"
          example: "example_name.dc1.example.com"
          description: "IP address or FQDN of the target system."
        status_details:
          type: "string"
          description: "Additional information describing any issues encountered when\n\
            connecting, or `null` if the `status` is `connected`.\n"
          readOnly: true
        status:
          type: "string"
          example: "connected"
          description: "Status of the connection. Values include `connected` and `connecting`.\n"
          readOnly: true
    description: "An external target system.\n"
  TargetGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/TargetResponse"
  BucketReplicaLinkResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/BucketReplicaLink"
  BucketReplicaLink:
    allOf:
    - $ref: "#/definitions/_replicaLink"
    - type: "object"
      properties:
        sources:
          type: "array"
          description: "The source buckets in the replica link."
          items:
            $ref: "#/definitions/_resourceWithLocation"
        members:
          type: "array"
          description: "The union of source and target buckets in the replica link."
          items:
            $ref: "#/definitions/_resourceWithLocation"
        recovery_point:
          type: "integer"
          format: "int64"
          example: 1565034592494
          description: "Time when the last piece of data was replicated, in milliseconds\
            \ since\nthe UNIX epoch, and the recovery point of the bucket.\n"
          readOnly: true
        status_details:
          type: "string"
          description: "Detailed information about the status of the replica link\
            \ when it is\n`unhealthy`.\n"
        targets:
          type: "array"
          description: "The target buckets in the replica link."
          items:
            $ref: "#/definitions/_resourceWithLocation"
    description: "A replica link between two buckets."
  Directory:
    allOf:
    - $ref: "#/definitions/_arraysBuiltIn"
    - type: "object"
      properties:
        path:
          type: "string"
          description: "Absolute path of the managed directory in the file system.\n"
          readOnly: true
        destroyed:
          type: "boolean"
          example: false
          description: "Is the managed directory destroyed?\n"
        file_system:
          type: "object"
          description: "The file system that this managed directory is in.\n"
          title: "FixedReference"
          allOf:
          - $ref: "#/definitions/_fixedReference"
        created:
          type: "integer"
          format: "int64"
          example: 1502729489760
          description: "Creation time in milliseconds since UNIX epoch."
          readOnly: true
        directory_name:
          type: "string"
          description: "The managed directory name without the file system name prefix.\n\
            A managed directory full name is constructed in the form of `FILE_SYSTEM:DIR`\
            \ where\n`FILE_SYSTEM` is the file system name and `DIR` is the value\
            \ of this field.\nOn FlashArray versions below `6.0.2`, the value is always\
            \ `null`.\n"
          readOnly: true
    description: "A managed directory on an array.\n"
  _metricAvailability:
    type: "object"
    properties:
      aggregations:
        type: "array"
        description: "Available aggregations for this metric at the given resolution,\
          \ e.g. 'avg', 'max'."
        readOnly: true
        items:
          type: "string"
          example: "avg"
          description: "Valid values are `avg` and `max`.\n"
      resolution:
        type: "integer"
        format: "int64"
        example: 30000
        description: "An available resolution of this metric in milliseconds."
        readOnly: true
      retention:
        type: "integer"
        format: "int64"
        example: 2592000000
        description: "The retention at this given resolution in milliseconds."
        readOnly: true
  BucketGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/BucketResponse"
  _errorErrors:
    type: "object"
    properties:
      context:
        type: "string"
        example: "Error with ..."
      message:
        type: "string"
        example: "Something was wrong"
  SubscriptionLicenseGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/SubscriptionLicenseResponse"
  Controller:
    allOf:
    - $ref: "#/definitions/_arraysBuiltIn"
    - type: "object"
      properties:
        mode:
          type: "string"
          example: "primary"
          description: "Mode of the controller.\nValues include `not present`, `offline`,\
            \ `primary`, and `secondary`.\n"
        model:
          type: "string"
          example: "FA-m50"
          description: "Model of the controller."
        type:
          type: "string"
          example: "array_controller"
          description: "Type of the controller. Values include `array_controller`\
            \ and `shelf_controller`.\n"
        version:
          type: "string"
          example: "5.0.0"
          description: "Version of the controller."
        status:
          type: "string"
          example: "ready"
          description: "Status of the controller. Values include `not ready`, `ready`,\
            \ `unknown`, and `updating`.\n"
    description: "A platform that runs the Purity//FA Operating Environment.\n"
  MetricHistoryGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/MetricHistoryResponse"
  ArrayResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Array"
  Audit:
    allOf:
    - $ref: "#/definitions/_arraysResource"
    - type: "object"
      properties:
        subcommand:
          type: "string"
          example: "snap"
          description: "The subcommand that was executed."
        origin:
          type: "string"
          example: "array"
          description: "Origin of the action. Valid values are `array` and `Pure1`."
        arguments:
          type: "string"
          example: "--args"
          description: "Arguments provided to the command."
        time:
          type: "integer"
          format: "int64"
          example: 1502729489760
          description: "Time at which the command was run in milliseconds since UNIX\
            \ epoch.\n"
        user:
          type: "string"
          example: "pureuser"
          description: "The user who ran the command."
        command:
          type: "string"
          example: "purevol"
          description: "The command that was executed."
    description: "An audit of an action executed on an array or in Pure1.\n"
  FileSystemSnapshotGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/FileSystemSnapshotResponse"
  SubscriptionGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/SubscriptionResponse"
  Tag:
    type: "object"
    properties:
      resource:
        $ref: "#/definitions/_fixedReference"
      tag_organization_id:
        type: "integer"
        format: "int64"
        example: 101
        description: "Org id of the tag."
      namespace:
        type: "string"
        example: "pure1"
        description: "Namespace of the tag.\nNamespace identifies the category of\
          \ the tag.\n"
      value:
        type: "string"
        example: "value123"
        description: "Value of the tag."
      key:
        type: "string"
        example: "example_key"
        description: "Key of the tag."
  PodReplicaLinkGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/PodReplicaLinkResponse"
  _podArrayStatus:
    allOf:
    - $ref: "#/definitions/_fixedReference"
    - type: "object"
      properties:
        mediator_status:
          type: "string"
          example: "online"
          description: "The status of the mediator as assessed by this array.\nValid\
            \ values are `flummoxed`, `online`, `unknown`, and `unreachable`.\n`flummoxed`\
            \ - The array has the wrong UUID for the mediator. This means\nthat the\
            \ array can reach a mediator, but is talking to the wrong one.\nTypically,\
            \ this would be due to a misconfiguration in the customer\nenvironment\
            \ (e.g. DNS misconfiguration).\nUUIDs also have a TTL. If a pod goes offline\
            \ on one array, and stays\nlike that for weeks (such that the TTL expires),\
            \ it may also show this\nstatus until the peer array is reachable again.\n\
            `online` - The array is successfully communicating with the mediator.\n\
            `unreachable` - The array cannot reach the mediator. This could be due\n\
            to a network issue or the mediator is down.\n"
        frozen_at:
          type: "integer"
          format: "int64"
          example: 1502729489760
          description: "The Unix timestamp of when the array was last in sync with\
            \ the pod (or\nnull if the array is currently in sync).\n"
        status:
          type: "string"
          example: "resyncing"
          description: "Status of an array in the pod.\nValid values are `offline`,\
            \ `online`, `resyncing`, and `unknown`.\n`offline` - There is a problem.\n\
            This array cannot confirm it has the latest data for this pod.\nThis array\
            \ can not handle IO to the pod nor could it take over during an\nHA event.\n\
            `online` - Everything is fine.\nThis array has the latest data for this\
            \ pod.\nThis array can handle IO to the pod and can take over during an\
            \ HA\nevent.\n`resyncing` - There was a problem.\nThis array is actively\
            \ catching up to get the latest data for this\npod. This array can handle\
            \ IO to this pod's volumes, however it could\nnot take over during an\
            \ HA event.\n`unknown` - The state of the pod on this array cannot be\
            \ determined.\nThis state is only seen on disconnected arrays.\nThe disconnected\
            \ array cannot determine if the pod on another array is\nonline or offline.\n"
          readOnly: true
  HardwareConnector:
    allOf:
    - $ref: "#/definitions/_arraysBuiltIn"
    - type: "object"
      properties:
        lane_speed:
          type: "number"
          format: "int64"
          example: 10000000000
          description: "Configured speed of each lane in the connector in bits per\
            \ second."
        transceiver_type:
          type: "string"
          example: "40GBASE-LR4"
          description: "Type of transceiver plugged into the connector port.\nIf the\
            \ type cannot be auto-detected and the internal user has not\nspecified\
            \ a type, the value will be `Unknown`.\nIf nothing is plugged into the\
            \ QSFP port, the value will be `Unused`.\nTransceiver type is not applicable\
            \ for RJ-45 connectors.\n"
        connector_type:
          type: "string"
          example: "QSFP"
          description: "Form-factor of the interface. Values include `QSFP` and `RJ-45`."
        port_count:
          type: "number"
          format: "int64"
          example: 1.0
          description: "Configured number of ports in the connector."
    description: "Details about the array's connection ports.\n"
  _resource:
    allOf:
    - $ref: "#/definitions/_timeAware"
    - type: "object"
      properties:
        name:
          type: "string"
          example: "example_name"
          description: "A modifiable, locally unique name chosen by the user."
        id:
          type: "string"
          example: "2a989a09-c851-4d52-9ec6-ab728b1c04db"
          description: "A non-modifiable, globally unique ID chosen by the system."
          readOnly: true
    description: "An ordinary (as opposed to built-in) resource that can be created,\
      \ named,\nrenamed, or deleted by the user. This might be a virtual resource\
      \ (e.g.,\na volume), or correspond to something in the physical environment,\
      \ like a\nhost or a server.\n"
  PolicyGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/PolicyResponse"
  Policy:
    allOf:
    - $ref: "#/definitions/_arraysBuiltIn"
    - type: "object"
      properties:
        rules:
          type: "array"
          items:
            $ref: "#/definitions/_policy_rule"
        enabled:
          type: "boolean"
          example: true
          description: "Returns `true` if this policy is enabled."
    description: "A set of rules that can be applied to resources.\n"
  AuditsResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Audit"
  SubscriptionLicenseResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/SubscriptionLicense"
  Port:
    allOf:
    - $ref: "#/definitions/_arraysBuiltIn"
    - type: "object"
      properties:
        failover:
          type: "string"
          example: "CT0.ETH2"
          description: "If the array port has failed over, returns the\nname of the\
            \ port to which this port has failed over.\n"
        iqn:
          type: "string"
          example: "iqn.2010-06.com.purestorage:flasharray.393d930077be2977"
          description: "The iSCSI Qualified Name if the port is iSCSI, `null` otherwise."
        nqn:
          type: "string"
          example: "nqn.2010-06.com.purestorage:flasharray.512f7bb185978505"
          description: "The NVMe Qualified Name if the port is NVMe-oF, `null` otherwise."
        portal:
          type: "string"
          example: "10.16.200.27:3260"
          description: "The IP and port number if the port is iSCSI or NVMe-oF, `null`\
            \ otherwise."
        wwn:
          type: "string"
          example: "52:4A:93:70:4E:E5:68:00"
          description: "The Fibre Channel World Wide Name if the port is Fibre Channel,\
            \ `null` otherwise."
    description: "A Purity//FA port."
  _bladeArrayStatus:
    allOf:
    - $ref: "#/definitions/_fixedReference"
    - type: "object"
      properties:
        total_blades:
          type: "integer"
          format: "int64"
          example: 15
          description: "Count of total blade slots in the array.\n"
        used_blades:
          type: "integer"
          format: "int64"
          example: 10
          description: "Count of used blade slots in the array.\n"
  BucketResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Bucket"
  _resourceWithLocations:
    allOf:
    - $ref: "#/definitions/_fixedReference"
    - type: "object"
      properties:
        locations:
          type: "array"
          items:
            $ref: "#/definitions/_fixedReference"
    description: "A resource that may relate to multiple locations.\n"
  _replicaLink:
    allOf:
    - $ref: "#/definitions/_resourceNoName"
    - type: "object"
      properties:
        paused:
          type: "boolean"
          example: false
          description: "Returns `true` if the replica link is paused.\n"
        lag:
          type: "integer"
          format: "int64"
          example: 1560
          description: "Duration, in milliseconds, which represents how far behind\
            \ the\nreplication `target` is from the `source`.\n"
          readOnly: true
        recovery_point:
          type: "integer"
          format: "int64"
          example: 1565034592494
          description: "Time when the last piece of data was replicated, measured\
            \ in\nmilliseconds since the UNIX epoch, and the recovery point of the\n\
            resource.\n"
          readOnly: true
        status:
          type: "string"
          example: "replicating"
          description: "Status of the replica link. Values include `replicating`,\
            \ `idle`,\nand `unhealthy`.\n"
  FileSystem:
    allOf:
    - $ref: "#/definitions/_arraysBuiltIn"
    - type: "object"
      properties:
        destroyed:
          type: "boolean"
          example: false
          description: "Is the file system destroyed?\n"
        hard_limit_enabled:
          type: "boolean"
          example: false
          description: "On a FlashBlade file system, returns the value of `true` if\
            \ the file system's size\nis a hard limit quota and `false` if it is not.\n\
            On a FlashArray file system, the value is always `null`.\n"
        provisioned:
          type: "integer"
          format: "int64"
          example: 1099511627776
          description: "The provisioned size of the file system in bytes. A value\
            \ of 0 means\nunlimited. On a FlashArray file system, the value is always\
            \ `null`.\n"
        created:
          type: "integer"
          format: "int64"
          example: 1502729489760
          description: "Creation time in milliseconds since UNIX epoch."
          readOnly: true
        http:
          type: "object"
          description: "HTTP configuration. On a FlashArray file system, the value\
            \ is always `null`."
          title: "Http"
          allOf:
          - $ref: "#/definitions/_http"
        smb:
          type: "object"
          description: "SMB configuration. On a FlashArray file system, the value\
            \ is always `null`."
          title: "Smb"
          allOf:
          - $ref: "#/definitions/_smb"
        nfs:
          type: "object"
          description: "NFS configuration. On a FlashArray file system, the value\
            \ is always `null`."
          title: "Nfs"
          allOf:
          - $ref: "#/definitions/_nfs"
        snapshot_directory_enabled:
          type: "boolean"
          example: false
          description: "On a FlashBlade file system, returns the value of `true` if\
            \ snapshot directory is enabled\nand `false` if it is not.\nOn a FlashArray\
            \ file system, the value is always `null`.\n"
        fast_remove_directory_enabled:
          type: "boolean"
          example: false
          description: "On a FlashBlade file system, returns the value of `true` if\
            \ fast remove directory\nis enabled and `false` if it is not.\nOn a FlashArray\
            \ file system, the value is always `null`.\n"
    description: "A file system on an array, including both FlashArray and FlashBlade\
      \ file systems.\n"
  Drive:
    allOf:
    - $ref: "#/definitions/_builtInAsOf"
    - type: "object"
      properties:
        protocol:
          type: "string"
          example: "SAS"
          description: "Storage protocol of the module. Values include `NVMe` and\
            \ `SAS`.\n"
          readOnly: true
        details:
          type: "string"
          example: "Slow link speed."
          description: "Details about the status of the module if status is not `healthy`.\n"
          readOnly: true
        arrays:
          type: "array"
          description: "A list of arrays that contain this drive.\nEach drive should\
            \ only exist on one array.\n"
          items:
            $ref: "#/definitions/_driveArrayStatus"
          minItems: 1
        type:
          type: "string"
          example: "SSD"
          description: "The type of the module. Values include `cache`, `NVRAM`, `SSD`,\n\
            and `virtual`.\n"
          readOnly: true
        capacity:
          type: "number"
          format: "int64"
          example: 494927872
          description: "Physical storage capacity of the module (in bytes).\n"
          readOnly: true
        status:
          type: "string"
          example: "healthy"
          description: "Current status of the module. Values include `empty`, `failed`,\n\
            `healthy`, `identifying`, `missing`, `recovering`, `unadmitted`,\n`unhealthy`,\
            \ `unrecognized`, and `updating`.\n"
          readOnly: true
    description: "Information about a flash, NVRAM, or cache module.\n"
  SupportContract:
    type: "object"
    properties:
      end_date:
        type: "integer"
        format: "int64"
        example: 1582502400000
        description: "Date when the support contract ended.\nRepresented as a timestamp\
          \ of 00:00 on that date in UTC, in milliseconds since UNIX epoch.\n"
      resource:
        $ref: "#/definitions/_fixedReference"
      start_date:
        type: "integer"
        format: "int64"
        example: 1550966400000
        description: "Date when the support contract started.\nRepresented as a timestamp\
          \ of 00:00 on that date in UTC, in milliseconds since UNIX epoch.\n"
  SubscriptionResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Subscription"
  _arraysBuiltIn:
    allOf:
    - $ref: "#/definitions/_builtInAsOf"
    - $ref: "#/definitions/_arrays"
    description: "A built-in resource that exists on one or multiple arrays.\n"
  PolicyResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Policy"
  _resourceNoName:
    allOf:
    - $ref: "#/definitions/_timeAware"
    - type: "object"
      properties:
        id:
          type: "string"
          example: "2a989a09-c851-4d52-9ec6-ab728b1c04db"
          description: "A non-modifiable, globally unique ID chosen by the system."
          readOnly: true
    description: "An ordinary (as opposed to built-in) resource that can be created\
      \ or deleted\nby the user. This might be a virtual resource (e.g., a volume),\
      \ or correspond\nto something in the physical environment, like a host or a\
      \ server.\n"
  ObjectStoreAccount:
    allOf:
    - $ref: "#/definitions/_arraysResource"
    - type: "object"
      properties:
        created:
          type: "integer"
          format: "int64"
          example: 1502729489760
          description: "Creation timestamp of the object, in milliseconds since Unix\
            \ epoch."
          readOnly: true
        object_count:
          type: "integer"
          format: "int64"
          example: 15
          description: "The number of objects within the account."
          readOnly: true
  BucketReplicaLinkGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/BucketReplicaLinkResponse"
  NetworkInterfaceResponse:
    type: "object"
    properties:
      items:
        type: "array"
        description: "A list of network interface objects."
        items:
          $ref: "#/definitions/NetworkInterface"
  ArrayGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/ArrayResponse"
  _smb:
    type: "object"
    properties:
      enabled:
        type: "boolean"
        description: "Is the protocol enabled?\n"
  SubscriptionLicense:
    allOf:
    - $ref: "#/definitions/_builtInAsOf"
    - type: "object"
      properties:
        average_on_demand:
          type: "object"
          description: "Estimated daily on-demand usage of the license from the current\
            \ calendar\nquarter to date.\n"
          title: "CurrentMetric"
          allOf:
          - $ref: "#/definitions/_current_metric"
        usage:
          type: "object"
          description: "Usage of the license, averaged over the last day.\n"
          title: "CurrentMetric"
          allOf:
          - $ref: "#/definitions/_current_metric"
        reservation:
          type: "object"
          description: "Current reservation amount of the license.\n"
          title: "CurrentMetric"
          allOf:
          - $ref: "#/definitions/_current_metric"
        resources:
          type: "array"
          description: "References to the resources that operate under this license.\n"
          items:
            $ref: "#/definitions/_license_resource_reference"
        marketplace_partner:
          type: "object"
          description: "Reference information about the marketplace partner of this\
            \ license.\n"
          title: "MarketplacePartner"
          allOf:
          - $ref: "#/definitions/_marketplace_partner"
        service_tier:
          type: "string"
          example: "//Block - Ultra"
          description: "The tier of the service for the license.\n"
        subscription:
          type: "object"
          description: "A reference to which subscription this license belongs.\n"
          title: "FixedReference"
          allOf:
          - $ref: "#/definitions/_fixedReference"
        expiration_date:
          type: "integer"
          format: "int64"
          example: 1636238104000
          description: "Date when the license expires.\nRepresented as a timestamp\
            \ of 00:00 on that date in UTC, in\nmilliseconds since UNIX epoch.\n"
        start_date:
          type: "integer"
          format: "int64"
          example: 1604702243000
          description: "Date when the license starts.\nRepresented as a timestamp\
            \ of 00:00 on that date in UTC, in\nmilliseconds since UNIX epoch.\n"
    description: "A license belonging to a Pure1 subscription.\n"
  AlertsGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/AlertsResponse"
  NetworkInterface:
    allOf:
    - $ref: "#/definitions/_arraysBuiltIn"
    - type: "object"
      properties:
        hwaddr:
          type: "string"
          example: "90:ef:ba:80:70:dc"
          description: "Hardware address."
        address:
          type: "string"
          example: "10.11.12.13"
          description: "IP address of this network interface."
        netmask:
          type: "string"
          example: "255.255.255.0"
        services:
          type: "array"
          description: "Services and protocols that are enabled on the interface."
          items:
            type: "string"
            example: "iscsi"
            description: "Valid values are `iscsi`, `management`, `nvme/fc`, `nvme/roce`,\n\
              \  and `replication`.\n"
        subinterfaces:
          type: "array"
          items:
            type: "string"
            example: "ct0.eth0"
        enabled:
          type: "boolean"
          example: true
        gateway:
          type: "string"
          example: "10.20.30.40"
        speed:
          type: "integer"
          format: "int64"
          example: 10000000000
          description: "Speed in bytes per second."
        mtu:
          type: "integer"
          format: "int32"
          example: 9000
          description: "Maximum transmission unit."
    description: "A point of interconnection between the appliance and a private or\
      \ public\nnetwork. May be associated with a physical device or a representation\
      \ of\na virtual interface.\n"
  DirectoryResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Directory"
  ObjectStoreAccountGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/ObjectStoreAccountResponse"
  FileSystemGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/FileSystemResponse"
  FileSystemSnapshotResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/FileSystemSnapshot"
  HardwareGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/HardwareResponse"
  _nfs:
    type: "object"
    properties:
      rules:
        type: "string"
        example: "10.0.0.1(ro)"
        description: "NFS rules."
      enabled:
        type: "boolean"
        example: false
        description: "Is the protocol enabled?"
  FileSystemResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/FileSystem"
  _license_resource_reference:
    allOf:
    - $ref: "#/definitions/_fixedReference"
    - type: "object"
      properties:
        usage:
          type: "object"
          description: "Current usage of the resource under the license.\n"
          title: "CurrentMetric"
          allOf:
          - $ref: "#/definitions/_current_metric"
        activation_time:
          type: "integer"
          format: "int64"
          example: 1604702243000
          description: "Time when the resource is activated under the license, in\n\
            milliseconds since UNIX epoch.\n"
  ObjectStoreAccountResponse:
    type: "object"
    properties:
      items:
        type: "array"
        description: "A list of object store accounts."
        items:
          $ref: "#/definitions/ObjectStoreAccount"
  MetricResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Metric"
  MetricHistory:
    allOf:
    - $ref: "#/definitions/_builtInAsOf"
    - type: "object"
      properties:
        unit:
          type: "string"
          example: "B/s"
          description: "The unit of the metric data."
          readOnly: true
        data:
          type: "array"
          description: "The data points of the metric corresponding to the time window,\n\
            resolution and aggregation. The points are returned in a nested array\n\
            of 2-element arrays. For each of the 2-element array, the 1st element\n\
            is the UTC millisecond epoch, and the 2nd element is the value,\ne.g.\
            \ [[1519362000000, 11], [1519362030000, 21], ...].\n"
          readOnly: true
          items:
            type: "array"
            items:
              type: "number"
        resources:
          type: "array"
          description: "The references to the resources that the metric data is for.\n\
            For example, write-iops metric for an array will have one element in\n\
            this list referencing the array entity. the write-iops from an array to\n\
            a pod will contain two elements in this list - first element pointing\n\
            to the array, and second element pointing to the pod.\n"
          readOnly: true
          items:
            $ref: "#/definitions/_fixedReference"
        aggregation:
          type: "string"
          example: "avg"
          description: "The aggregation of the metric data."
          readOnly: true
        resolution:
          type: "integer"
          format: "int64"
          example: 30000
          description: "The resolution of the metric data in milliseconds."
          readOnly: true
    description: "Historical time-series data of a given metric on a resource.\n"
  _resourceWithLocation:
    allOf:
    - $ref: "#/definitions/_fixedReference"
    - type: "object"
      properties:
        location:
          $ref: "#/definitions/_fixedReference"
    description: "An ordinary resource that exists in one location.\n"
  PortGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/PortResponse"
  _timeAware:
    type: "object"
    properties:
      _as_of:
        type: "integer"
        format: "int64"
        example: 1502729489760
        description: "The freshness of the data (timestamp in millis since epoch)."
        readOnly: true
  Hardware:
    allOf:
    - $ref: "#/definitions/_arraysBuiltIn"
    - type: "object"
      properties:
        identify_enabled:
          type: "boolean"
          example: true
          description: "If true, the ID light is lit to visually identify the component."
        serial:
          type: "string"
          example: "PSMFL1717009B"
          description: "Serial number of the hardware component.\n"
        temperature:
          type: "integer"
          format: "int32"
          example: 25
          description: "Temperature (in degrees Celsius) reported by the component.\n"
        details:
          type: "string"
          example: "Temperature too high"
          description: "Details about the component if `status` is not `healthy`.\n"
        model:
          type: "string"
          example: "DFSC1"
          description: "Model number of the hardware component.\n"
        slot:
          type: "integer"
          format: "int32"
          example: 16
          description: "Slot number occupied by the PCI Express card that hosts the\
            \ component.\n"
        type:
          type: "string"
          example: "controller"
          description: "Type of the hardware component. Values include `am`, `chassis`,\
            \ `controller`, `cooling`,\n`drive_bay`, `eth_port`, `fan`, `fc_port`,\
            \ `flash_blade`, `ib_port`, `mgmt_port`,\n`nvram_bay`, `power_supply`,\
            \ `sas_module`, `sas_port`, `storage_shelf`, and `temp_sensor`.\n"
        speed:
          type: "integer"
          format: "int64"
          example: 24000000000
          description: "Speed (in bytes per second) at which the component is operating.\n"
        status:
          type: "string"
          example: "critical"
          description: "Component status. Values include `critical`, `healthy`, `identifying`,\n\
            `unhealthy`, `unclaimed`, `unknown`, `unrecognized`, and `unused`.\n"
        voltage:
          type: "integer"
          format: "int32"
          example: 206
          description: "Voltage (in Volts) reported by the component.\n"
    description: "A hardware component.\n"
  AuditsGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/AuditsResponse"
  _driveArrayStatus:
    allOf:
    - $ref: "#/definitions/_fixedReference"
    - type: "object"
      properties:
        drive_count:
          type: "integer"
          format: "int64"
          example: 24
          description: "Count of drives in the array.\n"
        total_capacity:
          type: "integer"
          format: "int64"
          example: 7625244672
          description: "The total capacity of all drives in the array.\n"
  _builtInAsOf:
    allOf:
    - $ref: "#/definitions/_timeAware"
    - type: "object"
      properties:
        name:
          type: "string"
          example: "example_name"
          description: "A non-modifiable, locally unique name chosen by the system."
          readOnly: true
        id:
          type: "string"
          example: "01c2889a-4124-49ff-8cbd-c33405ede123"
          description: "A non-modifiable, globally unique ID chosen by the system."
          readOnly: true
    description: "A built-in resource. Many are singletons predefined by Purity (e.g.,\
      \ support\nsettings). Some correspond to a piece of software, like an app, or\
      \ hardware,\nlike a controller. Others are created by the system in response\
      \ to some event\n(e.g., alerts, audit records).\n\nTypically, a user can't create,\
      \ delete or rename a built-in resource. A few\ncan be created or deleted, but\
      \ not renamed because the names are meaningful\nto Purity (e.g., VIFs).\n\n"
  Error:
    type: "object"
    properties:
      errors:
        type: "array"
        description: "The list of errors encountered."
        items:
          $ref: "#/definitions/_errorErrors"
  ControllerResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Controller"
  DriveResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Drive"
  VolumeSnapshotResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/VolumeSnapshot"
  BladeGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/BladeResponse"
  PodReplicaLink:
    allOf:
    - $ref: "#/definitions/_replicaLink"
    - type: "object"
      properties:
        sources:
          type: "array"
          description: "The source pods in the replica link."
          items:
            $ref: "#/definitions/_resourceWithLocations"
        members:
          type: "array"
          description: "The union of source and target pods in the replica link."
          items:
            $ref: "#/definitions/_resourceWithLocations"
        recovery_point:
          type: "integer"
          format: "int32"
          description: "Time when the last piece of data was replicated, in milliseconds\
            \ since\nthe UNIX epoch, and the recovery point if the target pod is promoted.\n\
            If the pod is currently baselining then the value is `null`.\n"
        targets:
          type: "array"
          description: "The target pods in the replica link."
          items:
            $ref: "#/definitions/_resourceWithLocations"
        status:
          type: "string"
          example: "replicating"
          description: "Status of the replica link. Values include `replicating`,\
            \ `idle`,\n`baselining`, `paused`, `quiescing`, `quiesced`, and `unhealthy`.\n"
    description: "A replica link between two pods."
  TagPut:
    type: "object"
    properties:
      value:
        type: "string"
        example: "value123"
        description: "Value of the tag."
      key:
        type: "string"
        example: "example_key"
        description: "Key of the tag."
  MetricHistoryResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/MetricHistory"
  Array:
    allOf:
    - $ref: "#/definitions/_builtInAsOf"
    - type: "object"
      properties:
        os:
          type: "string"
          example: "Purity//FA"
          description: "Valid values are `Elasticity`, `Purity`, `Purity//FA` and\
            \ `Purity//FB`.\n"
          readOnly: true
        model:
          type: "string"
          example: "FA-m70r2"
          description: "Model of the array."
          readOnly: true
        version:
          type: "string"
          example: "5.0.0"
          readOnly: true
    description: "A FlashArray or FlashBlade storage appliance.\n"
  PageInfo:
    type: "object"
    properties:
      continuation_token:
        type: "string"
        example: "MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My"
        description: "Continuation token that can be provided in the continuation_token\n\
          query param to get the next page of data.\nIf you use the continuation token\
          \ to page through data you\nare guaranteed to get all items exactly once\
          \ regardless of\nhow items are modified. If an item is added or deleted\
          \ during\nthe pagination then it may or may not be returned.\nThe continuation\
          \ token is generated if the limit is less\nthan the remaining number of\
          \ items, and the default sort is used\n(no sort is specified).\n"
      total_item_count:
        type: "integer"
        format: "int32"
        example: 1
        description: "Total number of items after applying filter params."
  _current_metric:
    type: "object"
    properties:
      unit:
        type: "string"
        example: "B"
        description: "The unit of the metric."
      data:
        type: "number"
        example: 123.0
        description: "The data value.\n"
      metric:
        type: "object"
        description: "A reference to the metric this data measures.\n"
        title: "FixedReference"
        allOf:
        - $ref: "#/definitions/_fixedReference"
  HardwareResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Hardware"
  FileSystemReplicaLink:
    allOf:
    - $ref: "#/definitions/_replicaLink"
    - type: "object"
      properties:
        sources:
          type: "array"
          description: "The source file systems in the replica link."
          items:
            $ref: "#/definitions/_resourceWithLocation"
        members:
          type: "array"
          description: "The union of source and target file systems in the replica\
            \ link.\n"
          items:
            $ref: "#/definitions/_resourceWithLocation"
        recovery_point:
          type: "integer"
          format: "int64"
          example: 1565034592494
          description: "Time when the last replicated snapshot was created, in milliseconds\n\
            since the UNIX epoch. (i.e. the recovery point if the file system is\n\
            promoted.)\n"
          readOnly: true
        status_details:
          type: "string"
          description: "Detailed information about the status of the replica link\
            \ when it is\n`unhealthy`.\n"
        targets:
          type: "array"
          description: "The target file systems in the replica link."
          items:
            $ref: "#/definitions/_resourceWithLocation"
    description: "A replica link between two FlashBlade file systems."
  PortResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Port"
  MetricGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/MetricResponse"
  Alert:
    allOf:
    - $ref: "#/definitions/_arraysResource"
    - type: "object"
      properties:
        severity:
          type: "string"
          example: "critical"
          description: "Current severity level. Valid values are `info`, `warning`,\
            \ `critical`,\nand `hidden`.\n"
        summary:
          type: "string"
          example: "Test alert."
          description: "Summary of the alert."
        actual:
          type: "string"
          example: "empty"
          description: "Actual condition at the time of the alert."
        code:
          type: "integer"
          format: "int32"
          example: 100
          description: "Code associated with the alert."
        knowledge_base_url:
          type: "string"
          example: "https://support.purestorage.com/"
          description: "URL of the relevant Knowledge Base page."
        created:
          type: "integer"
          format: "int64"
          example: 1502729489760
          description: "Time when the alert was created, in milliseconds since UNIX\
            \ epoch.\n"
        notified:
          type: "integer"
          format: "int64"
          example: 1502729489760
          description: "Time when the user was notified of the alert, in milliseconds\
            \ since\nUNIX epoch.\n"
        component_name:
          type: "string"
          example: "drive1"
          description: "Name of the component alerted about."
        expected:
          type: "string"
          example: "healthy"
          description: "Expected state/threshold under normal conditions."
        origin:
          type: "string"
          example: "array"
          description: "Origin of the alert. Valid values are `array` and `Pure1`."
        description:
          type: "string"
          example: "Some sort of failure."
          description: "Short description of the alert."
        component_type:
          type: "string"
          example: "drive"
          description: "Type of the component alerted about."
        closed:
          type: "integer"
          format: "int64"
          example: 1502729489760
          description: "Time when the alert was closed, in milliseconds since UNIX\
            \ epoch.\n"
        state:
          type: "string"
          example: "open"
          description: "Current state of the alert. Valid values are `open`, `closing`,\n\
            and `closed`.\n"
        category:
          type: "string"
          example: "array"
          description: "Category of the alert. Valid values are `array`, `hardware`,\
            \ and\n`software`.\n"
        updated:
          type: "integer"
          format: "int64"
          example: 1502729489760
          description: "Time when the alert was last updated, in milliseconds since\
            \ UNIX epoch.\n"
    description: "An alert from an array.\n"
  Metric:
    allOf:
    - $ref: "#/definitions/_builtInAsOf"
    - type: "object"
      properties:
        unit:
          type: "string"
          example: "B/s"
          description: "The unit of the metric."
          readOnly: true
        availabilities:
          type: "array"
          description: "The available resolutions, aggregations and retentions of\
            \ this metric.\n"
          readOnly: true
          items:
            $ref: "#/definitions/_metricAvailability"
        description:
          type: "string"
          description: "The additional description for the the metric."
          readOnly: true
        resource_types:
          type: "array"
          description: "The type of resource (as described by their endpoints) that\
            \ this metric\nis available at. NOTE that a metric could be available\
            \ for a combination\nof resource types, e.g. mirrored writes from \"arrays\"\
            \ to \"pods\".\n"
          readOnly: true
          items:
            type: "string"
            example: "example_resource_type"
            description: "Valid values are `arrays`, `pods`, and `volumes`.\n"
    description: "A type of measurement recorded on a resource.\n"
  FileSystemReplicaLinkGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/FileSystemReplicaLinkResponse"
  BladeResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Blade"
  VolumeSnapshot:
    allOf:
    - $ref: "#/definitions/_arraysBuiltIn"
    - type: "object"
      properties:
        destroyed:
          type: "boolean"
          example: false
          description: "Indicates if this snapshot has been destroyed and is pending\n\
            eradication.\n"
        pod:
          type: "object"
          description: "A reference to the pod the source volume belongs to, if applicable.\n"
          title: "FixedReference"
          allOf:
          - $ref: "#/definitions/_fixedReference"
        provisioned:
          type: "integer"
          format: "int64"
          example: 2048576
          description: "Indicates the size (in bytes) of the volume when the snapshot\
            \ was taken.\n"
        serial:
          type: "string"
          example: "C68B5DCF2C1A4C9400012F92"
          description: "Serial number generated by Purity when the snapshot was created.\n"
        created:
          type: "integer"
          format: "int64"
          example: 1502729489760
          description: "Creation time in milliseconds since UNIX epoch."
        source:
          type: "object"
          description: "A reference to the volume that the snapshot was taken from.\n"
          title: "FixedReference"
          allOf:
          - $ref: "#/definitions/_fixedReference"
        suffix:
          type: "string"
          example: "checkpoint_2018_01_01"
          description: "Suffix added to the source volume name used to generate the\n\
            volume snapshot name.\n"
        snapshot_group:
          type: "object"
          description: "A reference to a consistency group snapshot that this snapshot\
            \ is\npart of.\n"
          title: "FixedReference"
          allOf:
          - $ref: "#/definitions/_fixedReference"
        "on":
          type: "object"
          description: "A reference to the array or the offload where the snapshot\
            \ is stored.\n"
          title: "FixedReference"
          allOf:
          - $ref: "#/definitions/_fixedReference"
    description: "A point-in-time image of the contents of a volume.\n"
  FileSystemReplicaLinkResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/FileSystemReplicaLink"
parameters:
  Resource_ids:
    name: "resource_ids"
    in: "query"
    description: "A comma-separated list of resource IDs.\nIf there is not at least\
      \ one resource that matches each `resource_id` element,\nan error is returned.\n\
      Single quotes are required around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  Namespaces:
    name: "namespaces"
    in: "query"
    description: "A comma-separated list of namespaces.\nSingle quotes are required\
      \ around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  OauthGrantType:
    name: "grant_type"
    in: "formData"
    description: "The method by which the access token will be obtained.\nThe Pure\
      \ Storage REST API supports the OAuth 2.0 \"token exchange\" grant type,\nwhich\
      \ indicates that a token exchange is being performed.\nSet `grant_type` to `urn:ietf:params:oauth:grant-type:token-exchange`.\n"
    required: true
    type: "string"
    default: "urn:ietf:params:oauth:grant-type:token-exchange"
  End_timeRequired:
    name: "end_time"
    in: "query"
    description: "Timestamp of when the time window ends. Measured in milliseconds\
      \ since the UNIX epoch.\n"
    required: true
    type: "integer"
    format: "int64"
  IdsRequired:
    name: "ids"
    in: "query"
    description: "REQUIRED: either `ids` or `names`.\nA comma-separated list of object\
      \ IDs.\nIf there is not at least one resource that matches each `id` element,\n\
      an error is returned.\nSingle quotes are required around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  Resource_names:
    name: "resource_names"
    in: "query"
    description: "A comma-separated list of resource names.\nIf there is not at least\
      \ one resource that matches each `resource_name`\nelement, an error is returned.\n\
      Single quotes are required around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  Source_names:
    name: "source_names"
    in: "query"
    description: "A comma-separated list of names for the source of the object.\n\
      If there is not at least one resource that matches each `source_name` element,\n\
      an error is returned.\nSingle quotes are required around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  Marketplace_partner_reference_ids:
    name: "marketplace_partner_reference_ids"
    in: "query"
    description: "A comma-separated list of marketplace partner reference IDs.\nIf\
      \ there is not at least one resource that matches each\n`marketplace_partner.reference_id`\
      \ element, an error is returned.\nSingle quotes are required around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  Resource_namesRequired:
    name: "resource_names"
    in: "query"
    description: "REQUIRED: either `resource_ids` or `resource_names`.\nA comma-separated\
      \ list of resource names.\nIf there is not at least one resource that matches\
      \ each `resource_name`\nelement, an error is returned.\nSingle quotes are required\
      \ around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  Resource_idsRequired:
    name: "resource_ids"
    in: "query"
    description: "REQUIRED: either `resource_ids` or `resource_names`.\nA comma-separated\
      \ list of resource IDs.\nIf there is not at least one resource that matches\
      \ each `resource_id` element,\nan error is returned.\nSingle quotes are required\
      \ around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  Authorization:
    name: "Authorization"
    in: "header"
    description: "Access token (in JWT format) required to use any API endpoint (except\
      \ `/oauth2`)\n"
    required: false
    type: "string"
  Names:
    name: "names"
    in: "query"
    description: "A comma-separated list of resource names.\nIf there is not at least\
      \ one resource that matches each `name` element,\nan error is returned.\nSingle\
      \ quotes are required around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  Member_names_plus:
    name: "member_names"
    in: "query"
    description: "A list of member names. Member names separated by a `+` indicate\
      \ that both\nmembers must be present in each element. Member names separated\
      \ by a `,`\nindicate that at least one member must be present in each element.\n\
      If there is not at least one resource that matches each `member_name` element,\n\
      an error is returned.\nSingle quotes are required around all strings.\nWhen\
      \ using Try it Out in Swagger, a list of member names separated by a `+`\nmust\
      \ be entered in the same item cell.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  Member_ids:
    name: "member_ids"
    in: "query"
    description: "A comma-separated list of member IDs.\nIf there is not at least\
      \ one resource that matches each `member_id` element,\nan error is returned.\n\
      Single quotes are required around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  Member_names:
    name: "member_names"
    in: "query"
    description: "A comma-separated list of member names.\nIf there is not at least\
      \ one resource that matches each `member_name` element,\nan error is returned.\n\
      Single quotes are required around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  Source_ids_plus:
    name: "source_ids"
    in: "query"
    description: "A list of source IDs. Source IDs separated by a `+` indicate that\
      \ both\nsources must be present in each element. Source IDs separated by a `,`\n\
      indicate that at least one source must be present in each element.\nIf there\
      \ is not at least one resource that matches each `source_id` element,\nan error\
      \ is returned.\nSingle quotes are required around all strings.\nWhen using Try\
      \ it Out in Swagger, a list of source IDs separated by a `+`\nmust be entered\
      \ in the same item cell.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  ResolutionRequired:
    name: "resolution"
    in: "query"
    description: "The duration of time between individual data points, in milliseconds.\n"
    required: true
    type: "integer"
    format: "int64"
  Ids:
    name: "ids"
    in: "query"
    description: "A comma-separated list of resource IDs.\nIf there is not at least\
      \ one resource that matches each `id` element,\nan error is returned.\nSingle\
      \ quotes are required around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  Sort:
    name: "sort"
    in: "query"
    description: "Sort the response by the specified fields (in descending order if\
      \ '-'\nis appended to the field name).\nIf you provide a sort you will not get\
      \ a continuation token in\nthe response.\n"
    required: false
    type: "array"
    items:
      type: "string"
      pattern: "^[a-z]+(_[a-z]+)*-?"
    collectionFormat: "csv"
  Policy_ids:
    name: "policy_ids"
    in: "query"
    description: "A comma-separated list of policy IDs.\nIf there is not at least\
      \ one resource that matches each `policy_id` element,\nan error is returned.\n\
      Single quotes are required around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  NamesRequired:
    name: "names"
    in: "query"
    description: "REQUIRED: either `names` or `ids`.\nA comma-separated list of resource\
      \ names.\nIf there is not at least one resource that matches each `name` element,\n\
      an error is returned.\nSingle quotes are required around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  XRequestId:
    name: "X-Request-ID"
    in: "header"
    description: "Supplied by client during request or generated by server.\n"
    required: false
    type: "string"
  Target_names_plus:
    name: "target_names"
    in: "query"
    description: "A list of target names. Target names separated by a `+` indicate\
      \ that both\ntargets must be present in each element. Target names separated\
      \ by a `,`\nindicate that at least one target must be present in each element.\n\
      If there is not at least one resource that matches each `target_name` element,\n\
      an error is returned.\nSingle quotes are required around all strings.\nWhen\
      \ using Try it Out in Swagger, a list of target names separated by a `+`\nmust\
      \ be entered in the same item cell.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  Policy_names:
    name: "policy_names"
    in: "query"
    description: "A comma-separated list of policy names.\nIf there is not at least\
      \ one resource that matches each `policy_name` element,\nan error is returned.\n\
      Single quotes are required around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  File_system_ids:
    name: "file_system_ids"
    in: "query"
    description: "Performs the operation on the file system ID specified.\nEnter multiple\
      \ file system IDs in comma-separated format.\nThe `file_system_ids` and `file_system_names`\
      \ parameters cannot be provided together.\nSingle quotes are required around\
      \ all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
  Source_ids:
    name: "source_ids"
    in: "query"
    description: "A comma-separated list of ids for the source of the object.\nIf\
      \ there is not at least one resource that matches each `source_id` element,\n\
      an error is returned.\nSingle quotes are required around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  Subscription_names:
    name: "subscription_names"
    in: "query"
    description: "A comma-separated list of subscription names.\nIf there is not at\
      \ least one resource that matches each `subscription.name`\nelement, an error\
      \ is returned.\nSingle quotes are required around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  File_system_names:
    name: "file_system_names"
    in: "query"
    description: "Performs the operation on the file system name specified.\nEnter\
      \ multiple file system names in comma-separated format.\nFor example, `filesystem1,filesystem2`.\n\
      The `file_system_ids` and `file_system_names` parameters cannot be provided\
      \ together.\nSingle quotes are required around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
  Source_names_plus:
    name: "source_names"
    in: "query"
    description: "A list of source names. Source names separated by a `+` indicate\
      \ that both\nsources must be present in each element. Source names separated\
      \ by a `,`\nindicate that at least one source must be present in each element.\n\
      If there is not at least one resource that matches each `source_name` element,\n\
      an error is returned.\nSingle quotes are required around all strings.\nWhen\
      \ using Try it Out in Swagger, a list of source names separated by a `+`\nmust\
      \ be entered in the same item cell.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  AggregationRequired:
    name: "aggregation"
    in: "query"
    description: "Aggregation needed on the metric data.\nValid values are `avg` and\
      \ `max`.\nSingle quotes are required around all strings.\nLatency metrics averages\
      \ are weighted by the IOPS.\n"
    required: true
    type: "string"
    x-quoted: true
  OauthSubjectToken:
    name: "subject_token"
    in: "formData"
    description: "An encoded security ID Token representing the identity of the party\
      \ on behalf of\nwhom the request is being made. The token must be issued by\
      \ a trusted\nidentity provider which must be either a registered application\
      \ in Pure1\nor an enabled API client on the array. The token must be a JSON\
      \ Web Token\nand must contain the following claims:\n\n> | JWT claim | Location\
      \ | API Client Field | Description | Required By |\n\n> |-|-|-|-|-|\n\n> | kid\
      \ | Header | key_id | Key ID of the API client that issues the identity token.\
      \ | FlashArray\nand FlashBlade only. |\n\n> | aud | Payload | id | Client ID\
      \ of the API client that issues the identity token. | FlashArray\nand FlashBlade\
      \ only. |\n\n> | sub | Payload | | Login name of the array user for whom the\
      \ token should be issued.\nThis must be a valid user in the system. | FlashArray\
      \ and FlashBlade only. |\n\n> | iss | Payload | issuer | Application ID for\
      \ the Pure1 or API client's trusted identity\nissuer on the array. | All products.\
      \ |\n\n> | iat | Payload | | Timestamp of when the identity token was issued.\n\
      Measured in milliseconds since the UNIX epoch. | All products. |\n\n> | exp\
      \ | Payload | | Timestamp of when the identity token will expire.\nMeasured\
      \ in milliseconds since the UNIX epoch. | All products. |\n\n\nEach token must\
      \ also be signed with the private key that is paired with the\nAPI client's\
      \ public key.\n\n"
    required: true
    type: "string"
  Offset:
    name: "offset"
    in: "query"
    description: "The offset of the first resource to return from a collection.\n"
    required: false
    type: "integer"
    minimum: 0
    format: "int32"
  Member_ids_plus:
    name: "member_ids"
    in: "query"
    description: "A list of member IDs. Member IDs separated by a `+` indicate that\
      \ both\nmembers must be present in each element. Member IDs separated by a `,`\n\
      indicate that at least one member must be present in each element.\nIf there\
      \ is not at least one resource that matches each `member_id` element,\nan error\
      \ is returned.\nSingle quotes are required around all strings.\nWhen using Try\
      \ it Out in Swagger, a list of member IDs separated by a `+`\nmust be entered\
      \ in the same item cell.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  Start_timeRequired:
    name: "start_time"
    in: "query"
    description: "Timestamp of when the time window starts. Measured in milliseconds\
      \ since the UNIX epoch.\n"
    required: true
    type: "integer"
    format: "int64"
  Filter:
    name: "filter"
    in: "query"
    description: "Exclude resources that don't match the specified criteria.\nSingle\
      \ quotes are required around all strings inside the filters.\n"
    required: false
    type: "string"
  OauthSubjectTokenType:
    name: "subject_token_type"
    in: "formData"
    description: "An identifier that indicates the type of security token specifed\
      \ in the `subject_token` parameter.\nThe Pure Storage REST API supports the\
      \ JSON Web Token (JWT)\nas the means for requesting the access token.\nSet `subject_token_type`\
      \ to `urn:ietf:params:oauth:token-type:jwt`.\n"
    required: true
    type: "string"
    default: "urn:ietf:params:oauth:token-type:jwt"
  Continuation_token:
    name: "continuation_token"
    in: "query"
    description: "An opaque token used to iterate over a collection.\nThe token to\
      \ use on the next request is returned in the\n`continuation_token` field of\
      \ the result.\nSingle quotes are required around all strings.\n"
    required: false
    type: "string"
    x-quoted: true
  Resource_types:
    name: "resource_types"
    in: "query"
    description: "The resource types to list the available metrics.\nValid values\
      \ are `arrays`, `buckets`, `directories`,\n`file-systems`, `pods`, `subscription-licenses`\
      \ and\n`volumes`.\nA metric can belong to a combination of resources,\ne.g.,\
      \ write-iops from array to pod. In that case, query by\n['arrays', 'pods'].\n\
      Single quotes are required around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  Keys:
    name: "keys"
    in: "query"
    description: "A comma-separated list of tag keys.\nSingle quotes are required\
      \ around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  Target_ids_plus:
    name: "target_ids"
    in: "query"
    description: "A list of target IDs. Target IDs separated by a `+` indicate that\
      \ both\ntargets must be present in each element. Target IDs separated by a `,`\n\
      indicate that at least one target must be present in each element.\nIf there\
      \ is not at least one resource that matches each `target_id` element,\nan error\
      \ is returned.\nSingle quotes are required around all strings.\nWhen using Try\
      \ it Out in Swagger, a list of target IDs separated by a `+`\nmust be entered\
      \ in the same item cell.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
  Limit:
    name: "limit"
    in: "query"
    description: "Limit the size of the response to the specified number of resources.\n\
      A limit of 0 can be used to get the number of resources without getting\nall\
      \ of the resources. It will be returned in the total_item_count field.\nIf a\
      \ client asks for a page size larger than the maximum number, the request\n\
      is still valid. In that case the server just returns the maximum number of\n\
      items, disregarding the client's page size request. If not specified, defaults\n\
      to 1000.\n"
    required: false
    type: "integer"
    format: "int32"
  Subscription_ids:
    name: "subscription_ids"
    in: "query"
    description: "A comma-separated list of subscription IDs.\nIf there is not at\
      \ least one resource that matches each `subscription.id`\nelement, an error\
      \ is returned.\nSingle quotes are required around all strings.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
    x-quoted: true
responses:
  Error404:
    description: "NOT FOUND"
    headers:
      X-Request-ID:
        type: "object"
      X-RateLimit-Remaining-minute:
        type: "object"
      X-RateLimit-Remaining-second:
        type: "object"
      X-RateLimit-Limit-minute:
        type: "object"
      X-RateLimit-Limit-second:
        type: "object"
    schema:
      $ref: "#/definitions/Error"
  Error429:
    description: "TOO MANY REQUESTS"
    headers:
      X-Request-ID:
        type: "object"
      X-RateLimit-Remaining-minute:
        type: "object"
      X-RateLimit-Remaining-second:
        type: "object"
      X-RateLimit-Limit-minute:
        type: "object"
      X-RateLimit-Limit-second:
        type: "object"
    schema:
      $ref: "#/definitions/ErrorNoContext"
  OauthToken401:
    description: "UNAUTHORIZED"
    schema:
      type: "object"
      properties:
        error_description:
          type: "string"
          example: "Invalid identity: JWT validation failed."
        error:
          type: "string"
          example: "invalid_client"
  OauthToken400:
    description: "BAD REQUEST"
    schema:
      type: "object"
      properties:
        error_description:
          type: "string"
          example: "Unsupported subject_token_type: urn:ietf:params:oauth:token-"
        error:
          type: "string"
          example: "invalid_request"
  OauthToken200:
    description: "OK"
    schema:
      type: "object"
      properties:
        access_token:
          type: "string"
          example: "eyJraWQiOiJqTlBzL1Ria2c4U2Vua3F3ZmkvbnI4bWxxQ3NPIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJhdWQiOiI5NDcyMTkwOC1mNzkyLTcxMmUtYTYzOS0wODM5ZmE4MzA5MjIiLCJzdWIiOiJqb2UiLCJyb2xlIjoic3RvcmFnZV9hZG1pbiIsImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3Q6OTAwMCIsImlhdCI6MTU0NDAzNjA1MiwiZXhwIjoxNTQ0MDcyMDUyLCJqdGkiOiJjOTg0MjgyNS1mNGM3LTRiNGUtODdkNy03OWFiZmIxYTUzNDgifQ.pnuYAx0CkmkIG0LDrMAQGRr5Ci4-t5yMto3A7BkmyKnAVHBXG5ZIWwvNkWDLhqbA4YjmG7LZmWHrCVehLy2zy2vRLahFURsd3GTnOaWSyWFIyrwpoO81jQRtOQATtseweuMT_-C8o3oa4MgBNBsuKrhwKQS3oDDpeRPaCRTGev1_xRDxh_K6CWJBTAeOP2pcR4LW6zIJkCLzzkMuyL4aTJWWUjSbl04mcFbyw8r8W1GURrmaDVOvvpT634Hk9-GGh9OMIRlS6OOq7cJKc-RRWn18IK2Gs53V_KYshXTBbnRr990Y_qOX8MaTWOJTqgzsojY02MSVuJ9XDJWoIU3TQytr4K1vM2EvwDZDgl7LuUYUn7vWhbKktFzpeZyyhOjq3eX-ViugYKpIjBcG2f_-fcTPceEWGV82rd6TyVNB5A-v9u2kxCdW198t_kesgVQfuupDeS02cZe0ABLCzEHPiVF17JfiVr6sjkciioxN7Wj_j18ga4U0mdSukauT8yhbgCW1ijTVTFu1VwWebW0s8z3BWMtXdTtZ3BhcZVAdKRF8bOq7nfEbUQGhTn9g7dK-yF050winjtp-VTL2oUtkF5j1v_N8vPNiN9ZdkGJZr7VVZ-qeOJZcjdaRbxL6YB__yT1wkTcKPh8RHz6GUq7Jbyw8VIlcBE2nvJ63d0tH9C4"
          description: "The serialized OAuth 2.0 Bearer token used to perform authenticated\
            \ requests.\nThe access token must be added to the Authorization header\
            \ of all API calls.\n"
        issued_token_type:
          type: "string"
          example: "urn:ietf:params:oauth:token-type:access_token"
          description: "The type of token that is issued.\nThe Pure Storage REST API\
            \ supports OAuth 2.0 access tokens.\n"
        token_type:
          type: "string"
          example: "Bearer"
          description: "Indicates how the API client can use the access token issued.\n\
            The Pure Storage REST API supports the `Bearer` token.\n"
        expires_in:
          type: "integer"
          format: "uint32"
          example: 35999
          description: "The duration after which the access token will expire.\nMeasured\
            \ in seconds. This differs from other duration\nfields that are expressed\
            \ in milliseconds.\n"
      title: "oauth_token_response"
  Error400:
    description: "BAD REQUEST"
    headers:
      X-Request-ID:
        type: "object"
      X-RateLimit-Remaining-minute:
        type: "object"
      X-RateLimit-Remaining-second:
        type: "object"
      X-RateLimit-Limit-minute:
        type: "object"
      X-RateLimit-Limit-second:
        type: "object"
    schema:
      $ref: "#/definitions/Error"
  Error500:
    description: "INTERNAL SERVER ERROR"
    headers:
      X-Request-ID:
        type: "object"
      X-RateLimit-Remaining-minute:
        type: "object"
      X-RateLimit-Remaining-second:
        type: "object"
      X-RateLimit-Limit-minute:
        type: "object"
      X-RateLimit-Limit-second:
        type: "object"
    schema:
      $ref: "#/definitions/Error"
  Error403:
    description: "FORBIDDEN"
    headers:
      X-Request-ID:
        type: "object"
    schema:
      $ref: "#/definitions/ErrorNoContext"