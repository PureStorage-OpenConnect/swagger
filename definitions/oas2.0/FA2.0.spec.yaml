swagger: "2.0"
info:
  version: "2.0"
  title: "FlashArray REST API"
  x-logo:
    url:
      $ref: "../redoc/PS-LogoBase64-FA.txt"
    backgroundColor: "#ffffff"
    altText: "Pure Storage logo"
host: "[array]"
tags:
- name: "Authorization"
  description: "Pure Storage uses the OAuth 2.0 Token Exchange authorization grant\
    \ and JSON Web Tokens (JWTs)\nto authenticate to the Pure Storage REST API.\n\
    Before you can exchange the ID Token for an access token, create and enable the\
    \ API client\nto generate the `key_id`, `id`, and `issuer` values.\nThese values\
    \ will be used as JWT claims for the `subject_token` parameter.\n"
- name: "Connections"
  description: "A connection gives hosts access to volumes on the array.\nThe system\
    \ supports private (host-volume) connections\nand public (host group-volume) connections.\n\
    A private connection connects one volume to one host.\nPrivate connections are\
    \ typically used for boot volumes\nand for stand-alone (non-clustered) host applications.\n\
    A shared connection connects a designated set of hosts (via a host group)\nto\
    \ a designated set of volumes, providing the hosts with a consistent \"view\"\
    \ of the volumes.\nAll associated hosts use the same LUN to address a given associated\
    \ volume.\nAll hosts and volumes associated with a host group are\nautomatically\
    \ connected to each other by virtue of their associations with the group.\nShared\
    \ connections are useful for cluster applications in which several related hosts\
    \ require\nconsistent (same LUN) connectivity to a set of storage volumes.\n"
- name: "Host Groups"
  description: "Host groups implement consistent connections between a set of hosts\
    \ and one or more volumes.\nConnections are consistent in the sense that all hosts\
    \ associated with a host group\naddress a volume connected to the group by the\
    \ same LUN. Host groups are typically\nused to provide a common view of storage\
    \ volumes to the hosts in a clustered application.\n"
- name: "Hosts"
  description: "Hosts organize the storage network addresses\n(iSCSI Qualified Names,\
    \ NVMe qualified names, or Fibre Channel world wide names)\nof client computers\
    \ to identify the host's intiators.\nHosts also control communications between\
    \ clients and volumes.\nAfter a volume has been created,\nestablish a host-volume\
    \ connection so that the host\ncan read data from and write data to the volume.\n"
- name: "Volumes"
  description: "A volume represents a container that manages the storage space on\
    \ the array.\nAfter a volume has been created, establish a host-volume connection\
    \ so that the host\ncan read data from and write data to the volume.\nFurthermore,\
    \ protect the volume data through asynchronous replication to a remote array,\n\
    synchronous replication between remote arrays, and replication to external storage\
    \ systems.\n"
- name: "Volume Snapshots"
  description: "Volume snapshots are immutable, point-in-time images of the contents\
    \ of one or more volumes.\nThere are two types of volume snapshots&#58;\nvolume\
    \ snapshots and protection group volume snapshots.\nA volume snapshot is a snapshot\
    \ that captures the contents of a single volume.\nA protection group volume snapshot\
    \ is a volume snapshot that is created from a group of\nvolumes that are part\
    \ of the same protection group. All of the volume snapshots created from a\nprotection\
    \ group snapshot are point-in-time consistent with each other.\n"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /api/api_version:
    get:
      tags:
      - "Authorization"
      summary: "List available API versions"
      description: "Returns a list of available API versions. No authentication is\
        \ required to access this endpoint.\n"
      parameters:
      - $ref: "#/parameters/XRequestId"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Api_versionResponse"
  /api/2.0/volume-snapshots/transfer:
    get:
      tags:
      - "Volume Snapshots"
      summary: "List volume snapshots with transfer statistics"
      description: "Returns a list of volume snapshots and their transfer statistics.\n\
        \n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Destroyed"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/Source_ids"
      - $ref: "#/parameters/Source_names"
      - $ref: "#/parameters/Total_item_count"
      - $ref: "#/parameters/Total_only"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeSnapshotTransferGetResponse"
  /api/2.0/volumes/space:
    get:
      tags:
      - "Volumes"
      summary: "List volume space information"
      description: "Return provisioned size and physical storage consumption data\n\
        for each volume.\n\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Destroyed"
      - $ref: "#/parameters/History_end_time"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/History_resolution"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/History_start_time"
      - $ref: "#/parameters/Total_item_count"
      - $ref: "#/parameters/Total_only"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ResourceSpaceGetResponse"
  /api/2.0/host-groups/hosts:
    get:
      tags:
      - "Host Groups"
      summary: "List host groups associated with hosts"
      description: "Returns a list of host groups that are associated with hosts.\n\
        \n\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Group_names"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Member_names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/Total_item_count"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/MemberNoIdAllGetResponse"
  /api/2.0/host-groups/performance:
    get:
      tags:
      - "Host Groups"
      summary: "List host group performance data"
      description: "Return real-time and historical performance data,\nreal-time latency\
        \ data, and\naverage I/O sizes across all volumes,\ndisplayed both by host\
        \ group\nand as a total across all host groups.\n\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/Total_item_count"
      - $ref: "#/parameters/Total_only"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ResourcePerformanceNoIdGetResponse"
  /api/2.0/hosts/host-groups:
    get:
      tags:
      - "Hosts"
      summary: "List hosts associated with host groups"
      description: "Returns a list of hosts that are associated with host groups.\n\
        \n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Group_names"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Member_names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/Total_item_count"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/MemberNoIdAllGetResponse"
  /api/2.0/volume-snapshots:
    get:
      tags:
      - "Volume Snapshots"
      summary: "List volume snapshots"
      description: "Return a list of volume snapshots, including those pending eradication.\n\
        \n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Destroyed"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/Source_ids"
      - $ref: "#/parameters/Source_names"
      - $ref: "#/parameters/Total_item_count"
      - $ref: "#/parameters/Total_only"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeSnapshotGetResponse"
    post:
      tags:
      - "Volume Snapshots"
      summary: "Generate a volume snapshot"
      description: "Create a point-in-time snapshot of the contents of a volume.\n\
        The `source_ids` or `source_names` parameter is required, but they cannot\
        \ be set together.\n\n"
      parameters:
      - in: "body"
        name: "volume-snapshot"
        required: true
        schema:
          $ref: "#/definitions/VolumeSnapshotPost"
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/OnSingle"
      - $ref: "#/parameters/Source_ids"
      - $ref: "#/parameters/Source_names"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeSnapshotResponse"
    delete:
      tags:
      - "Volume Snapshots"
      summary: "Eradicate a volume snapshot"
      description: "Eradicate a volume snapshot that has been destroyed and is pending\
        \ eradication.\nEradicated volumes snapshots cannot be recovered.\nVolume\
        \ snapshots are destroyed through the `PATCH` method.\nThe `ids` or `names`\
        \ parameter is required, but they cannot be set together.\n\n"
      produces: []
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Names"
      responses:
        "200":
          description: "OK"
    patch:
      tags:
      - "Volume Snapshots"
      summary: "Manage a volume snapshot"
      description: "Rename, destroy, or recover a volume snapshot.\nTo rename the\
        \ suffix of a volume snapshot, set `name` to the new suffix name.\nTo recover\
        \ a volume snapshot that has been destroyed and is pending eradication,\n\
        set `destroyed=true`.\nThe `ids` or `names` parameter is required, but they\
        \ cannot be set together.\n\n"
      parameters:
      - in: "body"
        name: "volume-snapshot"
        required: true
        schema:
          $ref: "#/definitions/VolumeSnapshotPatch"
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Names"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeSnapshotResponse"
  /api/2.0/hosts/performance:
    get:
      tags:
      - "Hosts"
      summary: "List host performance data"
      description: "Return real-time and historical performance data,\nreal-time latency\
        \ data, and\naverage I/O sizes across all volumes,\ndisplayed both by host\n\
        and as a total across all hosts.\n\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/Total_item_count"
      - $ref: "#/parameters/Total_only"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ResourcePerformanceNoIdGetResponse"
  /api/2.0/connections:
    get:
      tags:
      - "Connections"
      summary: "List volume connections"
      description: "Return a list of connections between a volume and its hosts and\
        \ host groups,\nand the LUNs used by the associated hosts to address these\
        \ volumes.\n\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Host_group_names"
      - $ref: "#/parameters/Host_names"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Protocol_endpoint_names"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/Total_item_count"
      - $ref: "#/parameters/Volume_names"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ConnectionGetResponse"
    post:
      tags:
      - "Connections"
      summary: "Create a connection between a volume and host or host group"
      description: "Create a connection between a volume and a host or host group.\n\
        The `volume_names` and `host_names` or `host_group_names` query parameters\
        \ are required.\n\n"
      parameters:
      - in: "body"
        name: "connection"
        required: false
        schema:
          $ref: "#/definitions/ConnectionPost"
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Host_group_names"
      - $ref: "#/parameters/Host_names"
      - $ref: "#/parameters/Volume_names"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ConnectionResponse"
    delete:
      tags:
      - "Connections"
      summary: "Break a connection between a volume and its host or host group"
      description: "Break the connection between a volume and its associated host\n\
        or host group.\nThe `volume_names` and `host_names` or `host_group_names`\
        \ query parameters are required.\n"
      produces: []
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Host_group_names"
      - $ref: "#/parameters/Host_names"
      - $ref: "#/parameters/Volume_names"
      responses:
        "200":
          description: "OK"
  /api/2.0/hosts/performance/by-array:
    get:
      tags:
      - "Hosts"
      summary: "List host performance data by array"
      description: "Return real-time and historical performance data, real-time latency\
        \ data,\nand average I/O size data.\nThe data returned is for each volume\
        \ that is connected to a host on the current array and\nfor each volume that\
        \ is connected to a host on any remote arrays\nthat are visible to the current\
        \ array.\nThe data is displayed as a total across all hosts on each array\
        \ and by individual host.\n\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/Total_item_count"
      - $ref: "#/parameters/Total_only"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ResourcePerformanceNoIdByArrayGetResponse"
  /api/2.0/hosts:
    get:
      tags:
      - "Hosts"
      summary: "List hosts"
      description: "Returns a list of hosts.\n\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/Total_item_count"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/HostGetResponse"
    post:
      tags:
      - "Hosts"
      summary: "Create a host"
      description: "Creates a host.\nThe `names` query parameter is required.\n\n"
      parameters:
      - in: "body"
        name: "host"
        required: true
        schema:
          $ref: "#/definitions/HostPost"
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Names"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/HostResponse"
    delete:
      tags:
      - "Hosts"
      summary: "Delete a host"
      description: "Deletes an existing host. All volumes that are connected to the\
        \ host,\neither through private or shared connections,\nmust be disconnected\
        \ from the host before the host can be deleted.\nThe `names` query parameter\
        \ is required.\n\n"
      produces: []
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Names"
      responses:
        "200":
          description: "OK"
    patch:
      tags:
      - "Hosts"
      summary: "Manage a host"
      description: "Manages an existing host, including its storage network addresses,\
        \ CHAP, host personality, and\npreferred arrays, or associate a host to a\
        \ host group.\nThe `names` query parameter is required.\n\n"
      parameters:
      - in: "body"
        name: "host"
        required: true
        schema:
          $ref: "#/definitions/HostPatch"
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Names"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/HostResponse"
  /api/2.0/volumes:
    get:
      tags:
      - "Volumes"
      summary: "List volumes"
      description: "Return a list of volumes, including those pending eradication.\n\
        \n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Destroyed"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/Total_item_count"
      - $ref: "#/parameters/Total_only"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeGetResponse"
    post:
      tags:
      - "Volumes"
      summary: "Create a volume"
      description: "Create one or more virtual storage volumes of the specified size.\n\
        If `provisioned` is not specified, the size of the new volume defaults to\
        \ 1 MB in size.\nThe `names` query parameter is required.\n\n"
      parameters:
      - in: "body"
        name: "volume"
        required: true
        schema:
          $ref: "#/definitions/VolumePost"
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Overwrite"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeResponse"
    delete:
      tags:
      - "Volumes"
      summary: "Eradicate a volume"
      description: "Eradicate a volume that has been destroyed and is pending eradication.\n\
        Eradicated volumes cannot be recovered.\nVolumes are destroyed through the\
        \ `PATCH` method.\nThe `ids` or `names` parameter is required, but they cannot\
        \ be set together.\n\n"
      produces: []
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Names"
      responses:
        "200":
          description: "OK"
    patch:
      tags:
      - "Volumes"
      summary: "Manage a volume"
      description: "Renames or destroys a volume.\nTo rename a volume, set `name`\
        \ to the new name.\nTo move a volume, set the `pod` or `volume group` parameters.\n\
        To destroy a volume, set `destroyed=true`.\nTo recover a volume that has been\
        \ destroyed and is pending eradication, set\n`destroyed=false`.\nSets the\
        \ bandwidth and IOPs limits of a volume group.\nThe `ids` or `names` parameter\
        \ is required, but they cannot be set together.\n\n"
      parameters:
      - in: "body"
        name: "volume"
        required: true
        schema:
          $ref: "#/definitions/VolumePatch"
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Truncate"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeResponse"
  /api/2.0/volumes/performance:
    get:
      tags:
      - "Volumes"
      summary: "List volume performance data"
      description: "Returns real-time and historical performance data,\nreal-time\
        \ latency data, and\naverage I/O sizes for each volume and\nand as a total\
        \ of all volumes across the entire array.\n\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Destroyed"
      - $ref: "#/parameters/History_end_time"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/History_resolution"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/History_start_time"
      - $ref: "#/parameters/Total_item_count"
      - $ref: "#/parameters/Total_only"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ResourcePerformanceGetResponse"
  /api/2.0/host-groups:
    get:
      tags:
      - "Host Groups"
      summary: "List host groups"
      description: "Return a list of host groups.\n\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/Total_item_count"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/HostGroupGetResponse"
    post:
      tags:
      - "Host Groups"
      summary: "Create a host group"
      description: "Create a host group.\nThe `names` query parameter is required.\n\
        \n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Names"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/HostGroupResponse"
    delete:
      tags:
      - "Host Groups"
      summary: "Delete a host group"
      description: "Delete a host group.\nThe `names` query parameter is required.\n\
        \n"
      produces: []
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Names"
      responses:
        "200":
          description: "OK"
    patch:
      tags:
      - "Host Groups"
      summary: "Manage a host group"
      description: "Manage a host group.\nThe `names` query parameter is required.\n\
        \n"
      parameters:
      - in: "body"
        name: "host-group"
        required: true
        schema:
          $ref: "#/definitions/HostGroupPatch"
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Names"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/HostGroupResponse"
  /api/2.0/host-groups/performance/by-array:
    get:
      tags:
      - "Host Groups"
      summary: "List host group performance data by array"
      description: "Return real-time and historical performance data, real-time latency\
        \ data,\nand average I/O size data.\nThe data returned is for each volume\
        \ that is connected to a host group on the current array and\nfor each volume\
        \ that is connected to a host group on any remote arrays\nthat are visible\
        \ to the current array.\nThe data is displayed as a total across all host\
        \ groups on each array and\nby individual host group.\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/Total_item_count"
      - $ref: "#/parameters/Total_only"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ResourcePerformanceNoIdByArrayGetResponse"
  /api/2.0/volumes/performance/by-array:
    get:
      tags:
      - "Volumes"
      summary: "List volume performance data by array"
      description: "Returns real-time and historical performance data, real-time latency\
        \ data,\nand average I/O size data.\nThe data returned is for each volume\
        \ on the current array and for each volume\non any remote arrays that are\
        \ visible to the current array.\nThe data is grouped by individual volumes\n\
        and as a total across all volumes on each array.\n\n"
      parameters:
      - $ref: "#/parameters/Authorization"
      - $ref: "#/parameters/XRequestId"
      - $ref: "#/parameters/Destroyed"
      - $ref: "#/parameters/History_end_time"
      - $ref: "#/parameters/Filter"
      - $ref: "#/parameters/Ids"
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Names"
      - $ref: "#/parameters/Offset"
      - $ref: "#/parameters/History_resolution"
      - $ref: "#/parameters/Sort"
      - $ref: "#/parameters/History_start_time"
      - $ref: "#/parameters/Total_item_count"
      - $ref: "#/parameters/Total_only"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ResourcePerformanceByArrayGetResponse"
  /oauth2/1.0/token:
    post:
      tags:
      - "Authorization"
      summary: "Get access token"
      description: "Exchanges an ID Token for an OAuth 2.0 access token.\n"
      consumes:
      - "application/x-www-form-urlencoded"
      parameters:
      - $ref: "#/parameters/OauthSubjectTokenType"
      - $ref: "#/parameters/OauthGrantType"
      - $ref: "#/parameters/OauthSubjectToken"
      - $ref: "#/parameters/XRequestId"
      responses:
        "200":
          $ref: "#/responses/OauthToken200"
        "400":
          $ref: "#/responses/OauthToken400"
        "401":
          $ref: "#/responses/OauthToken401"
  /api/2.0/login:
    post:
      tags:
      - "Authorization"
      summary: "POST login (placeholder)"
      description: "Exchange an API token for a session token.\n"
      parameters:
      - name: "api-token"
        in: "header"
        description: "API token for a user.\n"
        required: false
        type: "string"
        x-example: "0f2e2884-9486-c6c2-438c-f50418f2aac3"
      - $ref: "#/parameters/XRequestId"
      responses:
        "200":
          description: "OK"
          headers:
            x-auth-token:
              type: "string"
              example: "3be3d489-55c6-4643-90ac-a476dbc98812"
          schema:
            $ref: "#/definitions/UsernameResponse"
  /api/2.0/logout:
    post:
      tags:
      - "Authorization"
      summary: "POST logout (placeholder)"
      description: "Invalidate a session token.\n"
      produces: []
      parameters:
      - name: "x-auth-token"
        in: "header"
        description: "Session token for a user."
        required: false
        type: "string"
        x-example: "3be3d489-55c6-4643-90ac-a476dbc98812"
      - $ref: "#/parameters/XRequestId"
      responses:
        "200":
          description: "OK"
definitions:
  VolumeSnapshotPost:
    allOf:
    - $ref: "#/definitions/_destroyedPatchPost"
    - type: "object"
      properties:
        suffix:
          type: "string"
          description: "The suffix that is appended to the `source_name` value to\
            \ generate the\nfull volume snapshot name in the form `VOL.SUFFIX`.\n\
            If the suffix is not specified, the system constructs the snapshot name\n\
            in the form `VOL.NNN`, where `VOL` is the volume name, and `NNN` is a\n\
            monotonically increasing number.\n"
  VolumeResponse:
    type: "object"
    properties:
      items:
        type: "array"
        description: "Returns a list of all items after filtering.\nThe values are\
          \ displayed for each name where meaningful.\nIf `total_only=true`, the `items`\
          \ list will be empty.\n"
        items:
          $ref: "#/definitions/Volume"
  _newName:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The new name for the resource."
  VolumeGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/VolumeResponse"
    - type: "object"
      properties:
        total:
          type: "array"
          description: "The aggregate value of all items after filtering.\nWhere it\
            \ makes more sense, the average value is displayed instead.\nThe values\
            \ are displayed for each field where meaningful.\n"
          items:
            $ref: "#/definitions/Volume"
  ResourcePerformance:
    allOf:
    - $ref: "#/definitions/_resource"
    - $ref: "#/definitions/_performance"
  VolumeSnapshotTransfer:
    allOf:
    - $ref: "#/definitions/_resource"
    - $ref: "#/definitions/_transfer"
    - type: "object"
      description: "Transfer statistics for snapshot replication.\n"
  _fixedReferenceNoId:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The resource name,\nsuch as volume name, pod name, snapshot\
          \ name, and so on.\n"
        readOnly: true
  ResourcePerformanceGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - type: "object"
      properties:
        total:
          type: "array"
          description: "The aggregate value of all items after filtering.\nWhere it\
            \ makes more sense, the average value is displayed instead.\nThe values\
            \ are displayed for each field where meaningful.\n"
          items:
            $ref: "#/definitions/ResourcePerformance"
        items:
          type: "array"
          description: "Performance data.\nIf `total_only=true`, the `items` list\
            \ will be empty.\n"
          items:
            $ref: "#/definitions/ResourcePerformance"
  HostResponse:
    type: "object"
    properties:
      items:
        type: "array"
        description: "Returns a list of all items after filtering.\nThe values are\
          \ displayed for each name where meaningful.\nIf `total_only=true`, the `items`\
          \ list will be empty.\n"
        items:
          $ref: "#/definitions/Host"
  Member:
    type: "object"
    properties:
      member:
        $ref: "#/definitions/_reference"
      group:
        $ref: "#/definitions/_reference"
  _referenceNoId:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The resource name, such as volume name, pod name, snapshot name,\
          \ and so on.\n"
  MemberNoIdAllGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/MemberNoIdAllResponse"
  VolumeSnapshotPatch:
    allOf:
    - $ref: "#/definitions/_destroyedPatchPost"
    - $ref: "#/definitions/_newName"
  _space:
    type: "object"
    properties:
      snapshots:
        type: "integer"
        format: "int64"
        description: "The physical space occupied by data unique to one or more snapshots.\n\
          Measured in bytes.\nOn Evergreen//One arrays, this is the effective space\
          \ contributed by data unique to one or\nmore snapshots, measured in bytes.\n"
        readOnly: true
        minimum: 0
      total_physical:
        type: "integer"
        format: "int64"
        description: "The total physical space occupied by system, shared space, volume,\
          \ and snapshot data.\nMeasured in bytes.\n"
        readOnly: true
        minimum: 0
      data_reduction:
        type: "number"
        format: "float"
        description: "The ratio of mapped sectors within a volume versus\nthe amount\
          \ of physical space the data occupies after data compression and deduplication.\n\
          The data reduction ratio does not include thin provisioning savings.\nFor\
          \ example, a data reduction ratio of 5&#58;1 means that\nfor every 5 MB\
          \ the host writes to the array, 1 MB is stored on the array's flash modules.\n"
        readOnly: true
      shared:
        type: "integer"
        format: "int64"
        example: 111863360624
        description: "The physical space occupied by deduplicated data, meaning that\
          \ the space is shared with other\nvolumes and snapshots as a result of data\
          \ deduplication.\nMeasured in bytes.\nOn Evergreen//One arrays, this is\
          \ the effective space contributed by data that is not unique\nto a specific\
          \ volume, managed directory, or snapshot, measured in bytes.\n"
        readOnly: true
        minimum: 0
      virtual:
        type: "integer"
        format: "int64"
        description: "The amount of logically written data that a volume or a snapshot\
          \ references.\nMeasured in bytes.\n"
        readOnly: true
        minimum: 0
      system:
        type: "integer"
        format: "int64"
        description: "The physical space occupied by internal array metadata. Measured\
          \ in bytes.\n"
        readOnly: true
        minimum: 0
      unique:
        type: "integer"
        format: "int64"
        description: "The unique physical space occupied by customer data.\nUnique\
          \ physical space does not include shared space, snapshots, and internal\
          \ array metadata.\nMeasured in bytes.\nOn Evergreen//One arrays, this is\
          \ the effective space contributed by unique customer data,\nmeasured in\
          \ bytes.\nUnique data does not include shared space, snapshots, and internal\
          \ array metadata.\n"
        readOnly: true
        minimum: 0
      total_provisioned:
        type: "integer"
        format: "int64"
        example: 19937690345472
        description: "For a single volume, the provisioned size of the volume.\nFor\
          \ all other resources, the total provisioned size of all volumes\nthat are\
          \ connected to or are inside the resource.\nRepresents storage capacity\
          \ reported to hosts.\nMeasured in bytes.\n"
        readOnly: true
        minimum: 0
      total_reduction:
        type: "number"
        format: "float"
        description: "The ratio of provisioned sectors within a volume versus\nthe\
          \ amount of physical space the data occupies\nafter reduction via data compression\
          \ and deduplication\nand with thin provisioning savings.\nTotal reduction\
          \ is data reduction with thin provisioning savings.\nFor example, a total\
          \ reduction ratio of 10&#58;1 means that\nfor every 10 MB of provisioned\
          \ space,\n1 MB is stored on the array's flash modules.\n\n"
        readOnly: true
      thin_provisioning:
        type: "number"
        format: "float"
        description: "The percentage of volume sectors that do not contain host-written\
          \ data\nbecause the hosts have not written data to them or the sectors have\
          \ been explicitly trimmed.\n"
        readOnly: true
        minimum: 0
        maximum: 1
  MemberNoIdAll:
    type: "object"
    properties:
      member:
        type: "object"
        description: "The member of the resource."
        title: "ReferenceNoId"
        allOf:
        - $ref: "#/definitions/_referenceNoId"
      group:
        type: "object"
        description: "The resource in which the host, volume, or other item in the\
          \ environment is a member."
        title: "ReferenceNoId"
        allOf:
        - $ref: "#/definitions/_referenceNoId"
  ResourceSpace:
    allOf:
    - $ref: "#/definitions/_builtIn"
    - type: "object"
      properties:
        time:
          type: "integer"
          format: "int64"
          description: "The timestamp of when the data was taken.\nMeasured in milliseconds\
            \ since the UNIX epoch.\n"
          readOnly: true
        space:
          type: "object"
          description: "Displays size and space consumption information.\n"
          title: "Space"
          allOf:
          - $ref: "#/definitions/_space"
  ResourcePerformanceNoIdByArray:
    allOf:
    - $ref: "#/definitions/ResourcePerformanceNoId"
    - type: "object"
      properties:
        array:
          type: "object"
          description: "The array on which the performance metrics were recorded.\n"
          title: "Resource"
          allOf:
          - $ref: "#/definitions/_resource"
  Volume:
    allOf:
    - $ref: "#/definitions/_volumeCommon"
    - type: "object"
      properties:
        pod:
          type: "object"
          description: "A reference to the pod."
          title: "Reference"
          allOf:
          - $ref: "#/definitions/_reference"
        subtype:
          type: "string"
          description: "The type of volume.\nValid values are `protocol_endpoint`\
            \ and `regular`.\n"
          readOnly: true
        source:
          type: "object"
          description: "A reference to the originating volume as a result of a volume\
            \ copy."
          title: "FixedReference"
          allOf:
          - $ref: "#/definitions/_fixedReference"
        volume_group:
          type: "object"
          description: "A reference to the volume group."
          title: "Reference"
          allOf:
          - $ref: "#/definitions/_reference"
  HostPatch:
    allOf:
    - $ref: "#/definitions/_newName"
    - type: "object"
      properties:
        remove_wwns:
          type: "array"
          description: "Disassociates the specified Fibre Channel World Wide Names\
            \ (WWNs) from the specified host.\n"
          items:
            type: "string"
            example: "52:4A:93:70:4E:E5:68:00"
            description: "WWNs to remove."
        host_group:
          type: "object"
          description: "The host group to which the host should be associated."
          title: "ReferenceNoId"
          allOf:
          - $ref: "#/definitions/_referenceNoId"
        add_nqns:
          type: "array"
          description: "Adds the specified NVMe Qualified Names (NQNs)\nto those already\
            \ associated with the specified host.\n"
          items:
            type: "string"
            example: "nqn.2010-06.com.purestorage:flasharray.512f7bb185978505"
            description: "NQNs to add."
        wwns:
          type: "array"
          description: "The Fibre Channel World Wide Name (WWN) associated with the\
            \ host."
          items:
            type: "string"
            example: "52:4A:93:70:4E:E5:68:00"
        remove_iqns:
          type: "array"
          description: "Disassociates the specified iSCSI Qualified Names (IQNs) from\
            \ the specified host.\n"
          items:
            type: "string"
            example: "iqn.2010-06.com.purestorage:linux.393d930077be2977"
            description: "IQNs to remove."
        personality:
          type: "string"
          description: "Determines how the system tunes the array to ensure that it\
            \ works optimally with the host.\nSet `personality` to the name of the\
            \ host operating system or virtual memory system.\nValid values are `aix`,\
            \ `esxi`, `hitachi-vsp`, `hpux`,\n`oracle-vm-server`, `solaris`, and `vms`.\n\
            If your system is not listed as one of the valid host personalities, do\
            \ not set the option.\nBy default, the personality is not set.\n"
        add_iqns:
          type: "array"
          description: "Adds the specified iSCSI Qualified Names (IQNs)\nto those\
            \ already associated with the specified host.\n"
          items:
            type: "string"
            example: "iqn.2010-06.com.purestorage:linux.393d930077be2977"
            description: "IQNs to add."
        chap:
          $ref: "#/definitions/_chap"
        add_wwns:
          type: "array"
          description: "Adds the specified Fibre Channel World Wide Names (WWNs)\n\
            to those already associated with the specified host.\n"
          items:
            type: "string"
            example: "52:4A:93:70:4E:E5:68:00"
            description: "WWNs to add."
        nqns:
          type: "array"
          description: "The NVMe Qualified Name (NQN) associated with the host."
          items:
            type: "string"
            example: "nqn.2010-06.com.purestorage:flasharray.512f7bb185978505"
        iqns:
          type: "array"
          description: "The iSCSI qualified name (IQN) associated with the host.\n"
          items:
            type: "string"
            example: "iqn.2010-06.com.purestorage:linux.393d930077be2977"
        preferred_arrays:
          type: "array"
          description: "For synchronous replication configurations, sets a host's\
            \ preferred array to specify which\narray exposes active/optimized paths\
            \ to that host.\nEnter multiple preferred arrays in comma-separated format.\n\
            If a preferred array is set for a host,\nthen the other arrays in the\
            \ same pod will expose active/non-optimized paths to that host.\nIf the\
            \ host is in a host group, `preferred_arrays` cannot be set because host\
            \ groups\nhave their own preferred arrays.\nOn a preferred array of a\
            \ certain host, all the paths on all the ports\n(for both the primary\
            \ and secondary controllers) are set up as A/O (active/optimized) paths,\n\
            while on a non-preferred array, all the paths are A/N (Active/Non-optimized)\
            \ paths.\n"
          items:
            $ref: "#/definitions/_reference"
        remove_nqns:
          type: "array"
          description: "Disassociates the specified NVMe Qualified Names (NQNs) from\
            \ the specified host.\n"
          items:
            type: "string"
            example: "nqn.2010-06.com.purestorage:flasharray.512f7bb185978505"
            description: "NQNs to remove."
  ResourcePerformanceNoIdGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - type: "object"
      properties:
        total:
          type: "array"
          description: "The aggregate value of all items after filtering.\nWhere it\
            \ makes more sense, the average value is displayed instead.\nThe values\
            \ are displayed for each field where meaningful.\n"
          items:
            $ref: "#/definitions/ResourcePerformanceNoId"
        items:
          type: "array"
          description: "Performance data.\nIf `total_only=true`, the `items` list\
            \ will be empty.\n"
          items:
            $ref: "#/definitions/ResourcePerformanceNoId"
  HostGroupResponse:
    type: "object"
    properties:
      items:
        type: "array"
        description: "Returns a list of all items after filtering.\nThe values are\
          \ displayed for each name where meaningful.\n"
        items:
          $ref: "#/definitions/HostGroup"
  Api_versionResponse:
    type: "object"
    properties:
      version:
        type: "array"
        description: "A list of supported API versions."
        items:
          type: "string"
  VolumePost:
    allOf:
    - $ref: "#/definitions/_destroyedPatchPost"
    - type: "object"
      properties:
        provisioned:
          type: "integer"
          format: "int64"
          description: "Sets the virtual size of the volume. Measured in bytes.\n"
          maximum: 4503599627370496
        qos:
          type: "object"
          description: "Sets QoS limits.\n"
          title: "Qos"
          allOf:
          - $ref: "#/definitions/_qos"
        subtype:
          type: "string"
          description: "The type of volume.\nValid values are `protocol_endpoint`\
            \ and `regular`.\n"
        source:
          type: "object"
          description: "The source volume of a volume copy."
          title: "Reference"
          allOf:
          - $ref: "#/definitions/_reference"
  VolumeSnapshotGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/VolumeSnapshotResponse"
    - type: "object"
      properties:
        total:
          type: "array"
          description: "The aggregate value of all items after filtering.\nWhere it\
            \ makes more sense, the average value is displayed instead.\nThe values\
            \ are displayed for each field where meaningful.\n"
          items:
            $ref: "#/definitions/VolumeSnapshot"
  _volumeCommon:
    allOf:
    - $ref: "#/definitions/_resource"
    - type: "object"
      properties:
        time_remaining:
          type: "integer"
          format: "int64"
          description: "The amount of time left until the destroyed volume is permanently\
            \ eradicated.\nMeasured in milliseconds.\nBefore the `time_remaining`\
            \ period has elapsed, the destroyed volume can be recovered\nby setting\
            \ `destroyed=false`.\n"
          readOnly: true
        destroyed:
          type: "boolean"
          description: "Returns a value of `true` if the volume has been destroyed\
            \ and is pending eradication.\nThe `time_remaining` value displays the\
            \ amount of time left\nuntil the destroyed volume is permanently eradicated.\n\
            Before the `time_remaining` period has elapsed, the destroyed volume can\
            \ be recovered\nby setting `destroyed=false`.\nOnce the `time_remaining`\
            \ period has elapsed,\nthe volume is permanently eradicated and can no\
            \ longer be recovered.\n"
        host_encryption_key_status:
          type: "string"
          example: "detected"
          description: "The host encryption key status for this volume.\nPossible\
            \ values include `none`, `detected`, and `fetched`.\n"
          readOnly: true
        provisioned:
          type: "integer"
          format: "int64"
          description: "The virtual size of the volume. Measured in bytes\nand must\
            \ be a multiple of 512. The maximum size is\n4503599627370496 (4PB)\n"
        qos:
          type: "object"
          description: "Displays QoS limit information.\n"
          title: "Qos"
          allOf:
          - $ref: "#/definitions/_qos"
        serial:
          type: "string"
          description: "A globally unique serial number generated by the system when\
            \ the volume is created.\n"
          readOnly: true
        created:
          type: "integer"
          format: "int64"
          description: "The volume creation time. Measured in milliseconds since the\
            \ UNIX epoch."
          readOnly: true
        connection_count:
          type: "integer"
          format: "int64"
          description: "The total number of hosts and host groups connected to the\
            \ volume.\n"
          readOnly: true
        space:
          type: "object"
          description: "Displays size and space consumption information.\n"
          title: "Space"
          allOf:
          - $ref: "#/definitions/_space"
      description: "A disk-like random access virtual storage device that a FlashArray\n\
        system exports to hosts via a logical unit number (LUN). To a host,\na volume\
        \ contains a number of 512-byte sectors in which data can be\nwritten and\
        \ from which it can be read.\n"
  _snapshot:
    type: "object"
    properties:
      time_remaining:
        type: "integer"
        format: "int64"
        description: "The amount of time left until the destroyed snapshot is permanently\
          \ eradicated.\nMeasured in milliseconds.\nBefore the `time_remaining` period\
          \ has elapsed, the destroyed snapshot can be recovered\nby setting `destroyed=false`.\n"
        readOnly: true
      destroyed:
        type: "boolean"
        description: "Returns a value of `true` if the snapshot has been destroyed\
          \ and is pending eradication.\nThe `time_remaining` value displays the amount\
          \ of time left\nuntil the destroyed volume snapshot is permanently eradicated.\n\
          Before the `time_remaining` period has elapsed, the destroyed volume snapshot\
          \ can be recovered\nby setting `destroyed=false`.\nOnce the `time_remaining`\
          \ period has elapsed,\nthe volume snapshot is permanently eradicated and\
          \ can no longer be recovered.\n"
      pod:
        type: "object"
        description: "A reference to the pod.\n"
        title: "FixedReference"
        allOf:
        - $ref: "#/definitions/_fixedReference"
      provisioned:
        type: "integer"
        format: "int64"
        description: "The provisioned space of the snapshot. Measured in bytes. The\
          \ minimum size is 1048576 (1MB),\nthe maximum size is 4503599627370496 (4PB)\n"
        readOnly: true
      created:
        type: "integer"
        format: "int64"
        description: "The snapshot creation time. Measured in milliseconds since the\
          \ UNIX epoch.\n"
        readOnly: true
      source:
        type: "object"
        description: "The volume from which this snapshot was taken.\nFor a replicated\
          \ snapshot being viewed on the target side, the\n`source` is the replica\
          \ volume.\n"
        title: "FixedReference"
        allOf:
        - $ref: "#/definitions/_fixedReference"
      suffix:
        type: "string"
        description: "The suffix that is appended to the `source_name` value to generate\
          \ the full\nvolume snapshot name in the form `VOL.SUFFIX`.\nIf the suffix\
          \ is not specified, the system constructs the snapshot name in the form\
          \ `VOL.NNN`,\nwhere `VOL` is the volume name, and `NNN` is a monotonically\
          \ increasing number.\n"
  ConnectionPost:
    type: "object"
    properties:
      protocol_endpoint:
        type: "object"
        description: "A protocol endpoint (also known as a conglomerate volume) which\
          \ acts as a proxy through which\nvirtual volumes are created and then connected\
          \ to VMware ESXi hosts or host groups.\nThe protocol endpoint itself does\
          \ not serve I/Os; instead,\nits job is to form connections between FlashArray\
          \ volumes and ESXi hosts and host groups.\n"
        title: "Reference"
        allOf:
        - $ref: "#/definitions/_reference"
      lun:
        type: "integer"
        format: "int32"
        example: 7
        description: "The logical unit number (LUN) by which the specified hosts\n\
          are to address the specified volume. If the LUN is not specified,\nthe system\
          \ automatically assigns a LUN to the connection.\nTo automatically assign\
          \ a LUN to a private connection,\nthe system starts at LUN `1` and counts\
          \ up to the maximum LUN `4095`,\nassigning the first available LUN to the\
          \ connection.\nFor shared connections, the system starts at LUN `254` and\n\
          counts down to the minimum LUN `1`, assigning the first available LUN\n\
          to the connection. If all LUNs in the `[1...254]` range are taken,\nthe\
          \ system starts at LUN `255` and counts up to the maximum LUN `4095`,\n\
          assigning the first available LUN to the connection.\n"
        minimum: 1
        maximum: 4095
  VolumePatch:
    allOf:
    - $ref: "#/definitions/_destroyedPatchPost"
    - $ref: "#/definitions/_newName"
    - type: "object"
      properties:
        pod:
          type: "object"
          description: "Moves the volume into the specified pod."
          title: "Reference"
          allOf:
          - $ref: "#/definitions/_reference"
        provisioned:
          type: "integer"
          format: "int64"
          description: "Updates the virtual size of the volume. Measured in bytes.\n"
          maximum: 4503599627370496
        qos:
          type: "object"
          description: "Sets QoS limits.\n"
          title: "Qos"
          allOf:
          - $ref: "#/definitions/_qos"
        volume_group:
          type: "object"
          description: "Adds the volume to the specified volume group."
          title: "Reference"
          allOf:
          - $ref: "#/definitions/_reference"
  VolumeSnapshotTransferGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/VolumeSnapshotTransferResponse"
    - type: "object"
      properties:
        total:
          type: "array"
          description: "The aggregate value of all items after filtering.\nWhere it\
            \ makes more sense, the average value is displayed instead.\nThe values\
            \ are displayed for each field where meaningful.\n"
          items:
            $ref: "#/definitions/VolumeSnapshotTransfer"
  HostGroup:
    allOf:
    - $ref: "#/definitions/_resourceNoId"
    - type: "object"
      properties:
        connection_count:
          type: "integer"
          format: "int64"
          example: 3
          description: "The number of volumes connected to the host group."
          readOnly: true
        host_count:
          type: "integer"
          format: "int64"
          example: 3
          description: "The number of hosts in the host group."
          readOnly: true
        is_local:
          type: "boolean"
          description: "Returns a value of `true` if the host or host group belongs\
            \ to the current array. Returns a value of `false` if the host or host\
            \ group belongs to a remote array."
          readOnly: true
        space:
          type: "object"
          description: "Displays size and space consumption information.\n"
          title: "Space"
          allOf:
          - $ref: "#/definitions/_space"
  ConnectionResponse:
    type: "object"
    properties:
      items:
        type: "array"
        description: "Returns a list of all items after filtering.\nThe values are\
          \ displayed for each name where meaningful.\nIf `total_only=true`, the `items`\
          \ list will be empty.\n"
        items:
          $ref: "#/definitions/Connection"
  ResourcePerformanceNoId:
    allOf:
    - $ref: "#/definitions/_resourceNoId"
    - $ref: "#/definitions/_performance"
  _reference:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The resource name,\nsuch as volume name, pod name, snapshot\
          \ name, and so on.\n"
      id:
        type: "string"
        description: "A globally unique, system-generated ID.\nThe ID cannot be modified.\n"
  _fixedReference:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The resource name,\nsuch as volume name, pod name, snapshot\
          \ name, and so on.\n"
        readOnly: true
      id:
        type: "string"
        description: "A globally unique, system-generated ID.\nThe ID cannot be modified.\n"
        readOnly: true
  ConnectionGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/ConnectionResponse"
  ResourceSpaceGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - type: "object"
      properties:
        total:
          type: "array"
          description: "The aggregate value of all items after filtering.\nWhere it\
            \ makes more sense, the average value is displayed instead.\nThe values\
            \ are displayed for each field where meaningful.\n"
          items:
            $ref: "#/definitions/ResourceSpace"
        items:
          type: "array"
          description: "Returns a list of all items after filtering.\nThe values are\
            \ displayed for each name where meaningful.\nIf `total_only=true`, the\
            \ `items` list will be empty.\n"
          items:
            $ref: "#/definitions/ResourceSpace"
  VolumeSnapshotTransferResponse:
    type: "object"
    properties:
      items:
        type: "array"
        description: "Returns a list of all items after filtering.\nThe values are\
          \ displayed for each name where meaningful.\nIf `total_only=true`, the `items`\
          \ list will be empty.\n"
        items:
          $ref: "#/definitions/VolumeSnapshotTransfer"
  _builtIn:
    type: "object"
    properties:
      name:
        type: "string"
        description: "A locally unique, system-generated name. The name cannot be\
          \ modified.\n"
        readOnly: true
      id:
        type: "string"
        description: "A globally unique, system-generated ID.\nThe ID cannot be modified\
          \ and cannot refer to another resource.\n"
        readOnly: true
    description: "A built-in resource. Many are singletons predefined by Purity (e.g.,\
      \ support\nsettings). Some correspond to a piece of software, like an app, or\
      \ hardware,\nlike a controller. Others are created by the system in response\
      \ to some event\n(e.g., alerts, audit records).\n\nTypically, a user can't create,\
      \ delete or rename a built-in resource. A few\ncan be created or deleted, but\
      \ not renamed because the names are meaningful\nto Purity (e.g., VIFs).\n"
  _chap:
    type: "object"
    properties:
      host_password:
        type: "string"
        description: "The host password for CHAP authentication.\nThe password must\
          \ be between 12 and 255 characters (inclusive)\nand cannot be the same as\
          \ the target password.\n"
      target_password:
        type: "string"
        description: "The target password for CHAP authentication.\nThe password must\
          \ be between 12 and 255 characters (inclusive)\nand cannot be the same as\
          \ the host password.\n"
      target_user:
        type: "string"
        description: "The target username for CHAP authentication."
      host_user:
        type: "string"
        description: "The host username for CHAP authentication."
    description: "Challenge-Handshake Authentication Protocol (CHAP)."
  VolumePerformance:
    allOf:
    - $ref: "#/definitions/_resource"
    - $ref: "#/definitions/_performance"
  _host_port_connectivity:
    type: "object"
    properties:
      details:
        type: "string"
        example: "Redundant"
        description: "The host connection status.\nValues include `Redundant`, `N/A`,\n\
          `Redundant-Failover`, `Uneven`, `Unused Port`,\n`Single Controller`, `Single\
          \ Controller-Failover`, and `None`.\n"
        readOnly: true
      status:
        type: "string"
        example: "healthy"
        description: "The host connection health status.\nValues include `healthy`,\
          \ `unhealthy`, and `critical`.\n"
        readOnly: true
    description: "The connectivity status between the host and the ports on each controller.\n"
  _performance:
    type: "object"
    properties:
      san_usec_per_read_op:
        type: "integer"
        format: "int64"
        description: "The average time required to transfer data from the array to\
          \ the initiator for a read request,\nmeasured in microseconds.\n"
        readOnly: true
        minimum: 0
      bytes_per_mirrored_write:
        type: "integer"
        format: "int64"
        description: "The average I/O size per mirrored write, measured in bytes.\n"
        readOnly: true
        minimum: 0
      mirrored_writes_per_sec:
        type: "integer"
        format: "int64"
        description: "The number of mirrored writes per second.\n"
        readOnly: true
        minimum: 0
      qos_rate_limit_usec_per_mirrored_write_op:
        type: "integer"
        format: "int64"
        description: "The average time it takes the array to process a mirrored I/O\
          \ write request,\nmeasured in microseconds.\n"
        readOnly: true
        minimum: 0
      bytes_per_op:
        type: "integer"
        format: "int64"
        description: "The average I/O size for both read and write (all) operations.\n"
        readOnly: true
        minimum: 0
      bytes_per_read:
        type: "integer"
        format: "int64"
        description: "The average I/O size per read, measured in bytes."
        readOnly: true
        minimum: 0
      usec_per_read_op:
        type: "integer"
        format: "int64"
        description: "The average time it takes the array to process an I/O read request,\n\
          measured in microseconds.\nBeginning in Purity 6.3.14 and 6.4.10 and later,\n\
          including later major versions (6.5.x, 6.6.x and beyond),\nqueue time is\
          \ included.\nThe average time does not include SAN time or QoS rate limit\
          \ time.\n"
        readOnly: true
        minimum: 0
      qos_rate_limit_usec_per_read_op:
        type: "integer"
        format: "int64"
        description: "The average time spent waiting due to QoS rate limiting for\
          \ a read request,\nmeasured in microseconds.\n"
        readOnly: true
        minimum: 0
      queue_usec_per_write_op:
        type: "integer"
        format: "int64"
        description: "The average time that a write I/O request spends in the array\
          \ waiting to be served,\nmeasured in microseconds.\n"
        readOnly: true
        minimum: 0
      service_usec_per_mirrored_write_op:
        type: "integer"
        format: "int64"
        description: "The average time required for the array to service a mirrored\
          \ write request,\nmeasured in microseconds.\n"
        readOnly: true
        minimum: 0
      reads_per_sec:
        type: "integer"
        format: "int64"
        description: "The number of read requests processed per second."
        readOnly: true
        minimum: 0
      bytes_per_write:
        type: "integer"
        format: "int64"
        description: "The average I/O size per write, measured in bytes."
        readOnly: true
        minimum: 0
      qos_rate_limit_usec_per_write_op:
        type: "integer"
        format: "int64"
        description: "The average time that a write I/O request spends waiting\nas\
          \ a result of the volume reaching its QoS bandwidth limit,\nmeasured in\
          \ microseconds.\n"
        readOnly: true
        minimum: 0
      usec_per_mirrored_write_op:
        type: "integer"
        format: "int64"
        description: "The average time it takes the array to process a mirrored I/O\
          \ write request,\nmeasured in microseconds.\nBeginning in Purity 6.3.14\
          \ and 6.4.10 and later,\nincluding later major versions (6.5.x, 6.6.x and\
          \ beyond),\nqueue time is included.\nThe average time does not include SAN\
          \ time or QoS rate limit time.\n"
        readOnly: true
        minimum: 0
      writes_per_sec:
        type: "integer"
        format: "int64"
        description: "The number of write requests processed per second."
        readOnly: true
        minimum: 0
      san_usec_per_write_op:
        type: "integer"
        format: "int64"
        description: "The average time required to transfer data\nfrom the initiator\
          \ to the array for a write request,\nmeasured in microseconds.\n"
        readOnly: true
        minimum: 0
      usec_per_write_op:
        type: "integer"
        format: "int64"
        description: "The average time it takes the array to process an I/O write\
          \ request,\nmeasured in microseconds.\nBeginning in Purity 6.3.14 and 6.4.10\
          \ and later,\nincluding later major versions (6.5.x, 6.6.x and beyond),\n\
          queue time is included.\nThe average time does not include SAN time or QoS\
          \ rate limit time.\n"
        readOnly: true
        minimum: 0
      san_usec_per_mirrored_write_op:
        type: "integer"
        format: "int64"
        description: "The average time required to transfer data\nfrom the initiator\
          \ to the array for a mirrored write request,\nmeasured in microseconds.\n"
        readOnly: true
        minimum: 0
      read_bytes_per_sec:
        type: "integer"
        format: "int64"
        description: "The number of bytes read per second."
        readOnly: true
        minimum: 0
      mirrored_write_bytes_per_sec:
        type: "integer"
        format: "int64"
        description: "The number of mirrored bytes written per second.\n"
        readOnly: true
        minimum: 0
      write_bytes_per_sec:
        type: "integer"
        format: "int64"
        description: "The number of bytes written per second."
        readOnly: true
        minimum: 0
      service_usec_per_write_op:
        type: "integer"
        format: "int64"
        description: "The average time required for the array to service a write request,\n\
          measured in microseconds.\n"
        readOnly: true
        minimum: 0
      queue_usec_per_mirrored_write_op:
        type: "integer"
        format: "int64"
        description: "The average time that a mirrored write I/O request spends in\
          \ the array waiting to be served,\nmeasured in microseconds.\n"
        readOnly: true
        minimum: 0
      service_usec_per_read_op:
        type: "integer"
        format: "int64"
        description: "The average time required for the array to service a read request,\n\
          measured in microseconds.\n"
        readOnly: true
        minimum: 0
      queue_usec_per_read_op:
        type: "integer"
        format: "int64"
        description: "The average time that a read I/O request spends in the array\
          \ waiting to be served,\nmeasured in microseconds.\n"
        readOnly: true
        minimum: 0
      time:
        type: "integer"
        format: "int64"
        description: "The time when the sample performance data was taken,\nmeasured\
          \ in milliseconds since the UNIX epoch.\n"
        readOnly: true
  HostPost:
    type: "object"
    properties:
      wwns:
        type: "array"
        description: "The Fibre Channel World Wide Name (WWN) associated with the\
          \ host."
        items:
          type: "string"
          example: "52:4A:93:70:4E:E5:68:00"
      personality:
        type: "string"
        description: "Determines how the system tunes the array to ensure that it\
          \ works optimally with the host.\nSet `personality` to the name of the host\
          \ operating system or virtual memory system.\nValid values are `aix`, `esxi`,\
          \ `hitachi-vsp`, `hpux`,\n`oracle-vm-server`, `solaris`, and `vms`.\nIf\
          \ your system is not listed as one of the valid host personalities, do not\
          \ set the option.\nBy default, the personality is not set.\n"
      chap:
        $ref: "#/definitions/_chap"
      nqns:
        type: "array"
        description: "The NVMe Qualified Name (NQN) associated with the host."
        items:
          type: "string"
          example: "nqn.2010-06.com.purestorage:flasharray.512f7bb185978505"
      iqns:
        type: "array"
        description: "The iSCSI qualified name (IQN) associated with the host.\n"
        items:
          type: "string"
          example: "iqn.2010-06.com.purestorage:linux.393d930077be2977"
      preferred_arrays:
        type: "array"
        description: "For synchronous replication configurations, sets a host's preferred\
          \ array to specify which\narray exposes active/optimized paths to that host.\n\
          Enter multiple preferred arrays in comma-separated format.\nIf a preferred\
          \ array is set for a host,\nthen the other arrays in the same pod will expose\
          \ active/non-optimized paths to that host.\nIf the host is in a host group,\
          \ `preferred_arrays` cannot be set because host groups\nhave their own preferred\
          \ arrays.\nOn a preferred array of a certain host, all the paths on all\
          \ the ports\n(for both the primary and secondary controllers) are set up\
          \ as A/O (active/optimized) paths,\nwhile on a non-preferred array, all\
          \ the paths are A/N (Active/Non-optimized) paths.\n"
        items:
          $ref: "#/definitions/_reference"
  Connection:
    type: "object"
    properties:
      protocol_endpoint:
        type: "object"
        description: "A protocol endpoint (also known as a conglomerate volume) which\
          \ acts as a proxy through which virtual volumes are created and then connected\
          \ to VMware ESXi hosts or host groups. The protocol endpoint itself does\
          \ not serve I/Os; instead, its job is to form connections between FlashArray\
          \ volumes and ESXi hosts and host groups."
        title: "Reference"
        allOf:
        - $ref: "#/definitions/_reference"
      volume:
        type: "object"
        description: "A container that manages the storage space on the array."
        title: "FixedReference"
        allOf:
        - $ref: "#/definitions/_fixedReference"
      host_group:
        type: "object"
        description: "A virtual collection of hosts with common connectivity to volumes."
        title: "FixedReferenceNoId"
        allOf:
        - $ref: "#/definitions/_fixedReferenceNoId"
      lun:
        type: "integer"
        format: "int64"
        example: 7
        description: "The logical unit number (LUN) by which the specified hosts are\
          \ to\naddress the specified volume. LUN can be in one of two formats: a\
          \ simple\nLUN, or a LUN and Sublun with virtual volumes. A LUN and Sublun\
          \ are\nintegers in the range of 1 to 4095.\n\nThe first format is simply\
          \ the LUN number. The second format is a single\nint64 combining both ((LUN\
          \ << 32) + Sublun) or (LUN * 4294967296 + Sublun).\n\nIn the FA UI, a combined\
          \ LUN and Sublun is represented as \"LUN:Sublun\".\nExample: LUN = 30, Sublun\
          \ = 2, LUN:Sublun = 30:2\nCombined: (30 * 4294967296 + 2) == 128849018882.\n\
          In REST it will be returned as 128849018882.\n\nTo automatically assign\
          \ a LUN to a private connection, the system starts\nat LUN '1' and counts\
          \ up to the maximum LUN '4095', assigning the first\navailable LUN to the\
          \ connection. For shared connections, the system starts\nat LUN '254' and\
          \ counts down to the minimum LUN '1', assigning the first\navailable LUN\
          \ to the connection. If all LUNs in the '[1...254]' range are\ntaken, the\
          \ system starts at LUN '255' and counts up to the maximum LUN\n'4095', assigning\
          \ the first available LUN to the connection. The maximum\nint64 LUN:Sublun\
          \ value is 17587891081215.\n"
      host:
        type: "object"
        description: "The host computer that sends and receives I/O requests to and\
          \ from volumes on the FlashArray array."
        title: "FixedReferenceNoId"
        allOf:
        - $ref: "#/definitions/_fixedReferenceNoId"
  VolumeSnapshotResponse:
    type: "object"
    properties:
      items:
        type: "array"
        description: "Returns a list of all items after filtering.\nThe values are\
          \ displayed for each name where meaningful.\nIf `total_only=true`, the `items`\
          \ list will be empty.\n"
        items:
          $ref: "#/definitions/VolumeSnapshot"
  Host:
    allOf:
    - $ref: "#/definitions/_resourceNoId"
    - type: "object"
      properties:
        host_group:
          type: "object"
          description: "The host group to which the host should be associated."
          title: "ReferenceNoId"
          allOf:
          - $ref: "#/definitions/_referenceNoId"
        port_connectivity:
          $ref: "#/definitions/_host_port_connectivity"
        wwns:
          type: "array"
          description: "The Fibre Channel World Wide Name (WWN) associated with the\
            \ host."
          items:
            type: "string"
            example: "52:4A:93:70:4E:E5:68:00"
        personality:
          type: "string"
          description: "Determines how the system tunes the array to ensure that it\
            \ works optimally with the host.\nSet `personality` to the name of the\
            \ host operating system or virtual memory system.\nValid values are `aix`,\
            \ `esxi`, `hitachi-vsp`, `hpux`,\n`oracle-vm-server`, `solaris`, and `vms`.\n\
            If your system is not listed as one of the valid host personalities, do\
            \ not set the option.\nBy default, the personality is not set.\n"
        connection_count:
          type: "integer"
          format: "int64"
          example: 3
          description: "The number of volumes connected to the specified host."
          readOnly: true
        chap:
          $ref: "#/definitions/_chap"
        nqns:
          type: "array"
          description: "The NVMe Qualified Name (NQN) associated with the host."
          items:
            type: "string"
            example: "nqn.2010-06.com.purestorage:flasharray.512f7bb185978505"
        iqns:
          type: "array"
          description: "The iSCSI qualified name (IQN) associated with the host.\n"
          items:
            type: "string"
            example: "iqn.2010-06.com.purestorage:linux.393d930077be2977"
        preferred_arrays:
          type: "array"
          description: "For synchronous replication configurations, sets a host's\
            \ preferred array to specify which\narray exposes active/optimized paths\
            \ to that host.\nEnter multiple preferred arrays in comma-separated format.\n\
            If a preferred array is set for a host,\nthen the other arrays in the\
            \ same pod will expose active/non-optimized paths to that host.\nIf the\
            \ host is in a host group, `preferred_arrays` cannot be set because host\
            \ groups\nhave their own preferred arrays.\nOn a preferred array of a\
            \ certain host, all the paths on all the ports\n(for both the primary\
            \ and secondary controllers) are set up as A/O (active/optimized) paths,\n\
            while on a non-preferred array, all the paths are A/N (Active/Non-optimized)\
            \ paths.\n"
          items:
            $ref: "#/definitions/_reference"
        space:
          type: "object"
          description: "Displays provisioned size and physical storage consumption\n\
            information for the sum of all volumes connected to the specified host.\n"
          title: "Space"
          allOf:
          - $ref: "#/definitions/_space"
  ResourcePerformanceByArray:
    allOf:
    - $ref: "#/definitions/ResourcePerformance"
    - type: "object"
      properties:
        array:
          type: "object"
          description: "The array on which the performance metrics were recorded.\n"
          title: "Resource"
          allOf:
          - $ref: "#/definitions/_resource"
  HostGroupGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/HostGroupResponse"
  MemberNoIdAllResponse:
    type: "object"
    properties:
      items:
        type: "array"
        description: "Returns a list of all items after filtering.\nThe values are\
          \ displayed for each name where meaningful.\n"
        items:
          $ref: "#/definitions/MemberNoIdAll"
  ResourcePerformanceByArrayGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - type: "object"
      properties:
        total:
          type: "array"
          description: "The aggregate value of all items after filtering.\nWhere it\
            \ makes more sense, the average value is displayed instead.\nThe values\
            \ are displayed for each field where meaningful.\n"
          items:
            $ref: "#/definitions/ResourcePerformanceByArray"
        items:
          type: "array"
          description: "Performance data, broken down by array.\nIf `total_only=true`,\
            \ the `items` list will be empty.\n"
          items:
            $ref: "#/definitions/ResourcePerformanceByArray"
  PageInfo:
    type: "object"
    properties:
      more_items_remaining:
        type: "boolean"
        example: false
        description: "Returns a value of `true` if subsequent items can be retrieved.\n"
      total_item_count:
        type: "integer"
        format: "int32"
        description: "The total number of records after applying all filter query\
          \ parameters.\nThe `total_item_count` will be calculated if and only if\
          \ the corresponding\nquery parameter `total_item_count` is set to `true`.\
          \ If this query parameter\nis not set or set to `false`, a value of `null`\
          \ will be returned.\n"
  _destroyedPatchPost:
    type: "object"
    properties:
      destroyed:
        type: "boolean"
        description: "If set to `true`, destroys a resource. Once set to `true`,\n\
          the `time_remaining` value will display the amount of time left\nuntil the\
          \ destroyed resource is permanently eradicated.\nBefore the `time_remaining`\
          \ period has elapsed, the destroyed resource\ncan be recovered by setting\
          \ `destroyed=false`.\nOnce the `time_remaining` period has elapsed,\nthe\
          \ resource is permanently eradicated and can no longer be recovered.\n"
  Username:
    type: "object"
    properties:
      username:
        type: "string"
        example: "pureuser"
        description: "The username of the user."
  ResourcePerformanceNoIdByArrayGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - type: "object"
      properties:
        total:
          type: "array"
          description: "The aggregate value of all items after filtering.\nWhere it\
            \ makes more sense, the average value is displayed instead.\nThe values\
            \ are displayed for each field where meaningful.\n"
          items:
            $ref: "#/definitions/ResourcePerformanceNoIdByArray"
        items:
          type: "array"
          description: "Performance data, broken down by array.\nIf `total_only=true`,\
            \ the `items` list will be empty.\n"
          items:
            $ref: "#/definitions/ResourcePerformanceNoIdByArray"
  HostGroupPatch:
    allOf:
    - $ref: "#/definitions/_newName"
  _transfer:
    type: "object"
    properties:
      physical_bytes_written:
        type: "integer"
        format: "int64"
        description: "The amount of data persisted on the target due to replication.\
          \ Measured in bytes.\n"
        readOnly: true
      data_transferred:
        type: "integer"
        format: "int64"
        description: "The number of bytes transferred from the source array to the\
          \ target as part of\nthe replication process.\nThe data transferred amount\
          \ is calculated as the size difference between the\ncurrent and previous\
          \ snapshots after data reduction.\nMeasured in bytes.\n"
        readOnly: true
      progress:
        type: "number"
        format: "float"
        example: 0.66
        description: "The percentage progress of the snapshot transfer from the source\
          \ array to the target.\nDisplayed in decimal format.\n"
        readOnly: true
      started:
        type: "integer"
        format: "int64"
        description: "The timestamp of when the snapshot replication process started.\n\
          Measured in milliseconds since the UNIX epoch.\n"
        readOnly: true
      completed:
        type: "integer"
        format: "int64"
        description: "The timestamp of when the snapshot replication process completed.\n\
          Measured in milliseconds since since the UNIX epoch.\n"
        readOnly: true
  HostGetResponse:
    allOf:
    - $ref: "#/definitions/PageInfo"
    - $ref: "#/definitions/HostResponse"
  _resourceNoId:
    type: "object"
    properties:
      name:
        type: "string"
        description: "A user-specified name.\nThe name must be locally unique and\
          \ can be changed.\n"
    description: "An ordinary (as opposed to built-in) resource that can be created,\
      \ named,\nrenamed or deleted by the user. This might be a virtual resource (e.g.,\
      \ a\nvolume), or correspond to something in the environment, like a host or\
      \ a\nserver.\n"
  _qos:
    type: "object"
    properties:
      bandwidth_limit:
        type: "integer"
        format: "int64"
        description: "The maximum QoS bandwidth limit for the volume.\nWhenever throughput\
          \ exceeds the bandwidth limit, throttling occurs.\nMeasured in bytes per\
          \ second. Maximum limit is 512 GB/s.\n"
        minimum: 1048576
        maximum: 549755813888
      iops_limit:
        type: "integer"
        format: "int64"
        description: "The QoS IOPs limit for the volume.\n"
        minimum: 100
        maximum: 100000000
  UsernameResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Username"
  VolumeSnapshot:
    allOf:
    - $ref: "#/definitions/_resource"
    - $ref: "#/definitions/_snapshot"
    - type: "object"
      properties:
        serial:
          type: "string"
          description: "A serial number generated by the system when the snapshot\
            \ is created.\nThe serial number is unique across all arrays.\n"
          readOnly: true
        volume_group:
          type: "object"
          description: "The volume group to which the volume that is the source of\
            \ this volume snapshot belongs.\n"
          title: "FixedReference"
          allOf:
          - $ref: "#/definitions/_fixedReference"
        space:
          type: "object"
          description: "Displays size and space consumption information.\n"
          title: "Space"
          allOf:
          - $ref: "#/definitions/_space"
      description: "A point-in-time image of the contents of the volume."
  _resource:
    type: "object"
    properties:
      name:
        type: "string"
        description: "A user-specified name.\nThe name must be locally unique and\
          \ can be changed.\n"
      id:
        type: "string"
        description: "A globally unique, system-generated ID.\nThe ID cannot be modified\
          \ and cannot refer to another resource.\n"
        readOnly: true
    description: "An ordinary (as opposed to built-in) resource that can be created,\
      \ named,\nrenamed or deleted by the user. This might be a virtual resource (e.g.,\
      \ a\nvolume), or correspond to something in the environment, like a host or\
      \ a\nserver.\n"
parameters:
  OauthGrantType:
    name: "grant_type"
    in: "formData"
    description: "The method by which the access token will be obtained.\nThe Pure\
      \ Storage REST API supports the OAuth 2.0 \"token exchange\" grant type,\nwhich\
      \ indicates that a token exchange is being performed.\nSet `grant_type` to `urn:ietf:params:oauth:grant-type:token-exchange`.\n"
    required: true
    type: "string"
    default: "urn:ietf:params:oauth:grant-type:token-exchange"
  History_end_time:
    name: "end_time"
    in: "query"
    description: "Displays historical performance data for the specified time window,\n\
      where `start_time` is the beginning of the time window,\nand `end_time` is the\
      \ end of the time window.\nThe `start_time` and `end_time` parameters\nare specified\
      \ in milliseconds since the UNIX epoch.\nIf `start_time` is not specified,\n\
      the start time will default to one resolution before the end time,\nmeaning\
      \ that the most recent sample of performance data will be displayed.\nIf `end_time`is\
      \ not specified, the end time will default to the current time.\nInclude the\
      \ `resolution` parameter to display the performance data at the specified resolution.\n\
      If not specified, `resolution` defaults to the lowest valid resolution.\n\n"
    required: false
    type: "integer"
    format: "int64"
  Truncate:
    name: "truncate"
    in: "query"
    description: "If set to `true`, reduces the size of a volume\nduring a volume\
      \ resize operation.\nWhen a volume is truncated, Purity automatically takes\
      \ an undo snapshot,\nproviding a 24-hour window during which the previous contents\n\
      can be retrieved. After truncating a volume,\nits provisioned size can be subsequently\
      \ increased,\nbut the data in truncated sectors cannot be retrieved.\nIf set\
      \ to `false` or not set at all and the volume is being reduced in size,\nthe\
      \ volume copy operation fails.\nRequired if the `provisioned` parameter is set\
      \ to a volume size\nthat is smaller than the original size.\n"
    required: false
    type: "boolean"
  Source_names:
    name: "source_names"
    in: "query"
    description: "Performs the operation on the source name specified.\nEnter multiple\
      \ source names in comma-separated format. For example, `name01,name02`.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
  History_start_time:
    name: "start_time"
    in: "query"
    description: "Displays historical performance data for the specified time window,\n\
      where `start_time` is the beginning of the time window,\nand `end_time` is the\
      \ end of the time window.\nThe `start_time` and `end_time` parameters\nare specified\
      \ in milliseconds since the UNIX epoch.\nIf `start_time` is not specified,\n\
      the start time will default to one resolution before the end time,\nmeaning\
      \ that the most recent sample of performance data will be displayed.\nIf `end_time`is\
      \ not specified, the end time will default to the current time.\nInclude the\
      \ `resolution` parameter to display the performance data at the specified resolution.\n\
      If not specified, `resolution` defaults to the lowest valid resolution.\n\n"
    required: false
    type: "integer"
    format: "int64"
  Authorization:
    name: "Authorization"
    in: "header"
    description: "Access token (in JWT format) required to use any API\nendpoint (except\
      \ `/oauth2`, `/login`, and `/logout`)\n"
    required: false
    type: "string"
  Names:
    name: "names"
    in: "query"
    description: "Performs the operation on the unique name specified.\nEnter multiple\
      \ names in comma-separated format.\nFor example, `name01,name02`.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
  Member_names:
    name: "member_names"
    in: "query"
    description: "Performs the operation on the unique member name specified.\nExamples\
      \ of members include volumes, hosts, host groups, and directories.\nEnter multiple\
      \ names in comma-separated format. For example, `vol01,vol02`.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
  Sort:
    name: "sort"
    in: "query"
    description: "Returns the response objects in the order specified.\nSet `sort`\
      \ to the name in the response by which to sort.\nSorting can be performed on\
      \ any of the names in the response,\nand the objects can be sorted in ascending\
      \ or descending order.\nBy default, the response objects are sorted in ascending\
      \ order.\nTo sort in descending order, append the minus sign (`-`) to the name.\n\
      A single request can be sorted on multiple objects.\nFor example, you can sort\
      \ all volumes from largest to smallest volume size,\nand then sort volumes of\
      \ the same size in ascending order by volume name.\nTo sort on multiple names,\
      \ list the names as comma-separated values.\n"
    required: false
    type: "array"
    items:
      type: "string"
      pattern: "^[a-z]+(_[a-z]+)*-?"
    collectionFormat: "csv"
  Ids:
    name: "ids"
    in: "query"
    description: "Performs the operation on the unique resource IDs specified.\nEnter\
      \ multiple resource IDs in comma-separated format.\nThe `ids` or `names` parameter\
      \ is required, but they cannot be set together.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
  XRequestId:
    name: "X-Request-ID"
    in: "header"
    description: "Supplied by client during request or generated by server.\n"
    required: false
    type: "string"
  OnSingle:
    name: "on"
    in: "query"
    description: "Performs the operation on the target name specified.\nFor example,\
      \ `targetName01`.\n"
    required: false
    type: "string"
  Group_names:
    name: "group_names"
    in: "query"
    description: "Performs the operation on the unique group name specified.\nExamples\
      \ of groups include host groups, pods, protection groups, and volume groups.\n\
      Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`.\n\
      \n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
  Overwrite:
    name: "overwrite"
    in: "query"
    description: "If set to `true`,\noverwrites an existing object during an object\
      \ copy operation.\nIf set to `false` or not set at all and the target name is\
      \ an existing object,\nthe copy operation fails.\nRequired if the `source` body\
      \ parameter is set\nand the source overwrites an existing object during the\
      \ copy operation.\n"
    required: false
    type: "boolean"
  Total_only:
    name: "total_only"
    in: "query"
    description: "If set to `true`, returns the aggregate value of all items after\
      \ filtering.\nWhere it makes more sense, the average value is displayed instead.\n\
      The values are displayed for each name where meaningful.\nIf `total_only=true`,\
      \ the `items` list will be empty.\n"
    required: false
    type: "boolean"
  Source_ids:
    name: "source_ids"
    in: "query"
    description: "Performs the operation on the source ID specified.\nEnter multiple\
      \ source IDs in comma-separated format.\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
  Volume_names:
    name: "volume_names"
    in: "query"
    description: "Performs the operation on the volume specified.\nEnter multiple\
      \ names in comma-separated format.\nFor example, `vol01,vol02`.\nA request cannot\
      \ include a mix of multiple objects with multiple names.\nFor example, a request\
      \ cannot include a mix of multiple volume names and host names;\ninstead, at\
      \ least one of the objects (e.g., `volume_names`) must be set to only one name\n\
      (e.g., `vol01`).\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
  Destroyed:
    name: "destroyed"
    in: "query"
    description: "If set to `true`, lists only destroyed objects\nthat are in the\
      \ eradication pending state.\nIf set to `false`, lists only objects that are\
      \ not destroyed.\nFor destroyed objects, the time remaining is displayed in\
      \ milliseconds.\n"
    required: false
    type: "boolean"
  Total_item_count:
    name: "total_item_count"
    in: "query"
    description: "If set to `true`, the `total_item_count` matching the\nspecified\
      \ query parameters is calculated and returned in\nthe response. If set to `false`,\
      \ the `total_item_count`\nis `null` in the response. This may speed up queries\n\
      where the `total_item_count` is large. If not specified,\ndefaults to `false`.\n"
    required: false
    type: "boolean"
  Host_group_names:
    name: "host_group_names"
    in: "query"
    description: "Performs the operation on the host group specified.\nEnter multiple\
      \ names in comma-separated format.\nA request cannot include a mix of multiple\
      \ objects with multiple names.\nFor example, a request cannot include a mix\
      \ of multiple host group names and volume names;\ninstead, at least one of the\
      \ objects (e.g., `host_group_names`) must be set to only one name\n(e.g., `hgroup01`).\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
  OauthSubjectToken:
    name: "subject_token"
    in: "formData"
    description: "An encoded security ID Token representing the identity of the party\
      \ on behalf of\nwhom the request is being made. The token must be issued by\
      \ a trusted\nidentity provider which must be either a registered application\
      \ in Pure1\nor an enabled API client on the array. The token must be a JSON\
      \ Web Token\nand must contain the following claims:\n\n> | JWT claim | Location\
      \ | API Client Field | Description | Required By |\n\n> |-|-|-|-|-|\n\n> | kid\
      \ | Header | key_id | Key ID of the API client that issues the identity token.\
      \ | FlashArray\nand FlashBlade only. |\n\n> | aud | Payload | id | Client ID\
      \ of the API client that issues the identity token. | FlashArray\nand FlashBlade\
      \ only. |\n\n> | sub | Payload | | Login name of the array user for whom the\
      \ token should be issued.\nThis must be a valid user in the system. | FlashArray\
      \ and FlashBlade only. |\n\n> | iss | Payload | issuer | Application ID for\
      \ the Pure1 or API client's trusted identity\nissuer on the array. | All products.\
      \ |\n\n> | iat | Payload | | Timestamp of when the identity token was issued.\n\
      Measured in milliseconds since the UNIX epoch. | All products. |\n\n> | exp\
      \ | Payload | | Timestamp of when the identity token will expire.\nMeasured\
      \ in milliseconds since the UNIX epoch. | All products. |\n\n\nEach token must\
      \ also be signed with the private key that is paired with the\nAPI client's\
      \ public key.\n\n"
    required: true
    type: "string"
  Offset:
    name: "offset"
    in: "query"
    description: "The starting position based on the results of the query\nin relation\
      \ to the full set of response objects returned.\n"
    required: false
    type: "integer"
    minimum: 0
    format: "int32"
    x-example: 10
  Filter:
    name: "filter"
    in: "query"
    description: "Narrows down the results to only the response objects\nthat satisfy\
      \ the filter criteria.\n"
    required: false
    type: "string"
  OauthSubjectTokenType:
    name: "subject_token_type"
    in: "formData"
    description: "An identifier that indicates the type of security token specifed\
      \ in the `subject_token` parameter.\nThe Pure Storage REST API supports the\
      \ JSON Web Token (JWT)\nas the means for requesting the access token.\nSet `subject_token_type`\
      \ to `urn:ietf:params:oauth:token-type:jwt`.\n"
    required: true
    type: "string"
    default: "urn:ietf:params:oauth:token-type:jwt"
  Host_names:
    name: "host_names"
    in: "query"
    description: "Performs the operation on the hosts specified.\nEnter multiple names\
      \ in comma-separated format.\nFor example, `host01,host02`.\nA request cannot\
      \ include a mix of multiple objects with multiple names.\nFor example, a request\
      \ cannot include a mix of multiple host names and volume names;\ninstead, at\
      \ least one of the objects (e.g., `host_names`) must be set to only one name\n\
      (e.g., `host01`).\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
  Protocol_endpoint_names:
    name: "protocol_endpoint_names"
    in: "query"
    description: "Performs the operation on the protocol endpoints specified.\nEnter\
      \ multiple names in comma-separated format.\nFor example, `pe01,pe02`.\nA request\
      \ cannot include a mix of multiple objects with multiple names.\nFor example,\
      \ a request cannot include a mix of multiple protocol endpoint names and host\
      \ names;\ninstead, at least one of the objects (e.g., `protocol_endpoint_names`)\
      \ must be set to one name\n(e.g., `pe01`).\n"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "csv"
  History_resolution:
    name: "resolution"
    in: "query"
    description: "The number of milliseconds between samples of historical data.\n\
      For array-wide performance metrics (`/arrays/performance` endpoint),\nvalid\
      \ values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),\n\
      `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and `86400000`\
      \ (24 hours).\nFor performance metrics on storage objects (`<object name>/performance`\
      \ endpoint),\nsuch as volumes,\nvalid values are `30000` (30 seconds), `300000`\
      \ (5 minutes), `1800000` (30 minutes),\n`7200000` (2 hours), `28800000` (8 hours),\
      \ and `86400000` (24 hours).\nFor space metrics, (`<object name>/space` endpoint),\n\
      valid values are `300000` (5 minutes), `1800000` (30 minutes), `7200000` (2\
      \ hours),\n`28800000` (8 hours), and `86400000` (24 hours).\nInclude the `start_time`\
      \ parameter to display the performance data\nstarting at the specified start\
      \ time.\nIf `start_time` is not specified,\nthe start time will default to one\
      \ resolution before the end time,\nmeaning that the most recent sample of performance\
      \ data will be displayed.\nInclude the `end_time` parameter to display the performance\
      \ data until the specified end time.\nIf `end_time`is not specified, the end\
      \ time will default to the current time.\nIf the `resolution` parameter is not\
      \ specified\nbut either the `start_time` or `end_time` parameter is,\nthen `resolution`\
      \ will default to the lowest valid resolution.\n"
    required: false
    type: "integer"
    minimum: 0
    format: "int64"
    x-example: 30000
  Limit:
    name: "limit"
    in: "query"
    description: "Limits the size of the response to the specified number of objects\
      \ on each page.\nTo return the total number of resources, set `limit=0`.\nThe\
      \ total number of resources is returned as a `total_item_count` value.\nIf the\
      \ page size requested is larger than the system maximum limit,\nthe server returns\
      \ the maximum limit, disregarding the requested page size.\n"
    required: false
    type: "integer"
    minimum: 0
    format: "int32"
    x-example: 10
responses:
  OauthToken401:
    description: "UNAUTHORIZED"
    schema:
      type: "object"
      properties:
        error_description:
          type: "string"
          example: "Invalid identity: JWT validation failed."
        error:
          type: "string"
          example: "invalid_client"
  OauthToken400:
    description: "BAD REQUEST"
    schema:
      type: "object"
      properties:
        error_description:
          type: "string"
          example: "Unsupported subject_token_type: urn:ietf:params:oauth:token-"
        error:
          type: "string"
          example: "invalid_request"
  OauthToken200:
    description: "OK"
    schema:
      type: "object"
      properties:
        access_token:
          type: "string"
          example: "eyJraWQiOiJqTlBzL1Ria2c4U2Vua3F3ZmkvbnI4bWxxQ3NPIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJhdWQiOiI5NDcyMTkwOC1mNzkyLTcxMmUtYTYzOS0wODM5ZmE4MzA5MjIiLCJzdWIiOiJqb2UiLCJyb2xlIjoic3RvcmFnZV9hZG1pbiIsImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3Q6OTAwMCIsImlhdCI6MTU0NDAzNjA1MiwiZXhwIjoxNTQ0MDcyMDUyLCJqdGkiOiJjOTg0MjgyNS1mNGM3LTRiNGUtODdkNy03OWFiZmIxYTUzNDgifQ.pnuYAx0CkmkIG0LDrMAQGRr5Ci4-t5yMto3A7BkmyKnAVHBXG5ZIWwvNkWDLhqbA4YjmG7LZmWHrCVehLy2zy2vRLahFURsd3GTnOaWSyWFIyrwpoO81jQRtOQATtseweuMT_-C8o3oa4MgBNBsuKrhwKQS3oDDpeRPaCRTGev1_xRDxh_K6CWJBTAeOP2pcR4LW6zIJkCLzzkMuyL4aTJWWUjSbl04mcFbyw8r8W1GURrmaDVOvvpT634Hk9-GGh9OMIRlS6OOq7cJKc-RRWn18IK2Gs53V_KYshXTBbnRr990Y_qOX8MaTWOJTqgzsojY02MSVuJ9XDJWoIU3TQytr4K1vM2EvwDZDgl7LuUYUn7vWhbKktFzpeZyyhOjq3eX-ViugYKpIjBcG2f_-fcTPceEWGV82rd6TyVNB5A-v9u2kxCdW198t_kesgVQfuupDeS02cZe0ABLCzEHPiVF17JfiVr6sjkciioxN7Wj_j18ga4U0mdSukauT8yhbgCW1ijTVTFu1VwWebW0s8z3BWMtXdTtZ3BhcZVAdKRF8bOq7nfEbUQGhTn9g7dK-yF050winjtp-VTL2oUtkF5j1v_N8vPNiN9ZdkGJZr7VVZ-qeOJZcjdaRbxL6YB__yT1wkTcKPh8RHz6GUq7Jbyw8VIlcBE2nvJ63d0tH9C4"
          description: "The serialized OAuth 2.0 Bearer token used to perform authenticated\
            \ requests.\nThe access token must be added to the Authorization header\
            \ of all API calls.\n"
        issued_token_type:
          type: "string"
          example: "urn:ietf:params:oauth:token-type:access_token"
          description: "The type of token that is issued.\nThe Pure Storage REST API\
            \ supports OAuth 2.0 access tokens.\n"
        token_type:
          type: "string"
          example: "Bearer"
          description: "Indicates how the API client can use the access token issued.\n\
            The Pure Storage REST API supports the `Bearer` token.\n"
        expires_in:
          type: "integer"
          format: "uint32"
          example: 35999
          description: "The duration after which the access token will expire.\nMeasured\
            \ in seconds. This differs from other duration\nfields that are expressed\
            \ in milliseconds.\n"
      title: "oauth_token_response"