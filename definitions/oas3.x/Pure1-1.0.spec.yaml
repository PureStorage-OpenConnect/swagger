openapi: 3.0.1
info:
  title: Pure1 Public REST API
  description: "Pure1 Public REST API, developed by [Pure Storage, Inc.](https://www.purestorage.com)\n
    \nThe Pure1 REST API 2.0 offers one single form of authentication: OAuth 2.0 via the [Token Exchange
    protocol](https://datatracker.ietf.org/doc/draft-ietf-oauth-token-exchange).\n\nOAuth 2.0 is an open
    protocol to allow secure authorization in a simple and standard method from web, mobile, desktop and
    background applications.\n\nNote that the [Authentication](#section/Authentication) section below
    mentions 'API Key' as the security scheme type. This is solely for the purpose of allowing testing
    this API with [Swagger UI](https://static.pure1.purestorage.com/api-swagger/index.html).\n\n[Knowledge
    base reference documentation](https://support.purestorage.com/Pure1/Pure1_Manage/Pure1_Manage_-_REST_API/Pure1_Manage_-_REST_API__Reference)"
  version: "1.0"
  x-logo:
    url:
      $ref: ../redoc/PS-LogoBase64-P1.txt
    backgroundColor: "#fff"
    altText: Pure Storage logo
servers:
- url: https://api-staging.pure1.purestorage.com/
security:
- AuthorizationHeader: []
tags:
- name: Authorization
  description: |
    Handles authorization access to other API endpoints through OAuth 2.0 Token Exchange.
- name: Alerts
  description: |
    Provides access to capacity, health, and hardware related array alerts.
- name: Arrays
  description: |
    Provides information about FlashArray and FlashBlade appliances.
- name: Audits
  description: |
    Provides access to CLI audit logs from FlashArray and FlashBlade appliances.
- name: Blades
  description: |
    Provides information about FlashBlade blades.
- name: Buckets
  description: |
    Provides information about FlashBlade buckets.
- name: Bucket Replica Links
  description: |
    Provides information about replica links between buckets.
- name: Controllers
  description: |
    Provides information about FlashArray controllers.
- name: Drives
  description: |
    Provides information about FlashArray drives.
- name: Directories
  description: |
    Provides information about FlashArray directories.
- name: File Systems
  description: |
    Provides information about FlashArray and FlashBlade file systems.
- name: File System Replica Links
  description: |
    Provides information about replica links between FlashBlade file systems.
- name: File System Snapshots
  description: |
    Provides information about FlashBlade file system snapshots.
- name: Hardware
  description: |
    Provides information about hardware components.
- name: Hardware Connectors
  description: |
    Provides information about FlashBlade hardware connectors.
- name: Metrics
  description: |
    Provides information about historical metrics for arrays, buckets, directories,
    file systems, pods, subscription licenses, and volumes.
- name: Network Interfaces
  description: |
    Provides information about network interfaces available on arrays.
- name: Object Store Accounts
  description: |
    Provides information about object store accounts.
- name: Pods
  description: |
    Provides information about FlashArray pods. A pod is the pairing
    of two arrays that replicate some volumes with each other.
- name: Pod Replica Links
  description: |
    Provides information about replica links between FlashArray pods.
- name: Policies
  description: |
    Provides information about FlashBlade policies and the members
    they apply to.
- name: Ports
  description: |
    Provides information about FlashArray ports.
- name: Targets
  description: |
    Provides information about FlashBlade external replication targets.
- name: Subscriptions
  description: |
    Provides information about Pure1 subscription offerings.
- name: Volumes
  description: |
    Provides information about block storage volumes on FlashArray arrays.
- name: Volume Snapshots
  description: |+
    Provides information about snapshots of block storage volumes
    on FlashArray arrays.

paths:
  /oauth2/1.0/token:
    post:
      tags:
      - Authorization
      summary: Get access token
      description: |
        Exchanges an ID Token for an OAuth 2.0 access token.
      parameters:
      - $ref: '#/components/parameters/XRequestId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - grant_type
              - subject_token
              - subject_token_type
              type: object
              properties:
                grant_type:
                  $ref: '#/components/schemas/OauthGrantType'
                subject_token:
                  $ref: '#/components/schemas/OauthSubjectToken'
                subject_token_type:
                  $ref: '#/components/schemas/OauthSubjectTokenType'
        required: true
      responses:
        "200":
          $ref: '#/components/responses/OauthToken200'
        "400":
          $ref: '#/components/responses/OauthToken400'
        "401":
          $ref: '#/components/responses/OauthToken401'
      security: []
  /api/1.0/alerts:
    get:
      tags:
      - Alerts
      summary: Get alerts
      description: |
        Retrieves information about alerts generated by Pure1-monitored appliances.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertsGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/arrays:
    get:
      tags:
      - Arrays
      summary: Get arrays
      description: |
        Retrieves information about FlashArray and FlashBlade storage appliances.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/arrays/support-contracts:
    get:
      tags:
      - Arrays
      summary: Get array support contracts
      description: |
        Retrieves the support contracts associated with arrays.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Resource_ids'
      - $ref: '#/components/parameters/Resource_names'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportContractGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/arrays/tags:
    get:
      tags:
      - Arrays
      summary: Get array tags
      description: |
        Retrieves the tags associated with specified arrays.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Keys'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Namespaces'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Resource_ids'
      - $ref: '#/components/parameters/Resource_names'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
    delete:
      tags:
      - Arrays
      summary: Delete array tags
      description: |
        Deletes array tags from Pure1.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Keys'
      - $ref: '#/components/parameters/Namespaces'
      - $ref: '#/components/parameters/Resource_idsRequired'
      - $ref: '#/components/parameters/Resource_namesRequired'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content: {}
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/arrays/tags/batch:
    put:
      tags:
      - Arrays
      summary: |
        Create or update array tags
      description: |
        Creates or updates array tags contextual to Pure1 only.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Namespaces'
      - $ref: '#/components/parameters/Resource_idsRequired'
      - $ref: '#/components/parameters/Resource_namesRequired'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagBatchRequired'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/audits:
    get:
      tags:
      - Audits
      summary: Get audits
      description: |
        Retrieves audit objects.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditsGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/blades:
    get:
      tags:
      - Blades
      summary: Get blades
      description: |
        Retrieves information about FlashBlade blades.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BladeGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/buckets:
    get:
      tags:
      - Buckets
      summary: Get buckets
      description: |
        Retrieves buckets.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/bucket-replica-links:
    get:
      tags:
      - Bucket Replica Links
      summary: Get bucket replica links
      description: |
        Retrieves information about bucket replica links.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_ids_plus'
      - $ref: '#/components/parameters/Member_names_plus'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Source_ids_plus'
      - $ref: '#/components/parameters/Source_names_plus'
      - $ref: '#/components/parameters/Target_ids_plus'
      - $ref: '#/components/parameters/Target_names_plus'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketReplicaLinkGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/controllers:
    get:
      tags:
      - Controllers
      summary: Get controllers
      description: |
        Retrieves information about controllers.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControllerGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/directories:
    get:
      tags:
      - Directories
      summary: Get managed directories
      description: |
        Retrieves information about FlashArray managed directory objects.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/File_system_ids'
      - $ref: '#/components/parameters/File_system_names'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/drives:
    get:
      tags:
      - Drives
      summary: Get drives
      description: |
        Retrieves information about FlashArray drives.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriveGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/file-systems:
    get:
      tags:
      - File Systems
      summary: Get FlashArray and FlashBlade file systems
      description: |
        Retrieves information about FlashArray and FlashBlade file system objects.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/file-systems/policies:
    get:
      tags:
      - File Systems
      summary: Get FlashBlade file system / policy pairs
      description: |
        Retrieves pairs of FlashBlade file system members and their policies.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_ids'
      - $ref: '#/components/parameters/Member_names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Policy_ids'
      - $ref: '#/components/parameters/Policy_names'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyMembersGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/file-system-replica-links:
    get:
      tags:
      - File System Replica Links
      summary: Get FlashBlade file system replica links
      description: |
        Retrieves information about FlashBlade file system replica links.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_ids_plus'
      - $ref: '#/components/parameters/Member_names_plus'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Source_ids_plus'
      - $ref: '#/components/parameters/Source_names_plus'
      - $ref: '#/components/parameters/Target_ids_plus'
      - $ref: '#/components/parameters/Target_names_plus'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemReplicaLinkGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/file-system-replica-links/policies:
    get:
      tags:
      - File System Replica Links
      summary: Get FlashBlade file system replica link / policy pairs
      description: |
        Retrieves pairs of FlashBlade file system replica link members and their policies.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_ids'
      - $ref: '#/components/parameters/Member_names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Policy_ids'
      - $ref: '#/components/parameters/Policy_names'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyMembersGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/file-system-snapshots:
    get:
      tags:
      - File System Snapshots
      summary: Get FlashBlade file system snapshots
      description: |
        Retrieves snapshots of FlashBlade file systems.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Source_ids'
      - $ref: '#/components/parameters/Source_names'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemSnapshotGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/file-system-snapshots/policies:
    get:
      tags:
      - File System Snapshots
      summary: Get FlashBlade file system snapshot / policy pairs
      description: |
        Retrieves pairs of FlashBlade file system snapshot members and their policies.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_ids'
      - $ref: '#/components/parameters/Member_names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Policy_ids'
      - $ref: '#/components/parameters/Policy_names'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyMembersGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/hardware:
    get:
      tags:
      - Hardware
      summary: Get hardware
      description: |
        Retrieves information about hardware components.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HardwareGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/hardware-connectors:
    get:
      tags:
      - Hardware Connectors
      summary: Get hardware connectors
      description: |
        Retrieves information about FlashBlade hardware connectors.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HardwareConnectorGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/metrics:
    get:
      tags:
      - Metrics
      summary: Get metrics
      description: |
        Retrieves information about metrics that can be queried for.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Resource_types'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/metrics/history:
    get:
      tags:
      - Metrics
      summary: Get metrics history
      description: |
        Retrieves historical metric data for resources.
        This endpoint supports batching: Up to 32 time series can be retrieved in one call.
        It can be multiple metrics for one resource,
        (e.g., load and bandwidth for one array - 2 time series),
        one metric for multiple resource (e.g., load for arrayA and arrayB - 2 time series),
        or a combination of both, multiple metrics for multiple resources,
        (e.g., load and bandwidth for arrayA and arrayB - 4 time series).
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/AggregationRequired'
      - $ref: '#/components/parameters/End_timeRequired'
      - $ref: '#/components/parameters/IdsRequired'
      - $ref: '#/components/parameters/NamesRequired'
      - $ref: '#/components/parameters/ResolutionRequired'
      - $ref: '#/components/parameters/Resource_idsRequired'
      - $ref: '#/components/parameters/Resource_namesRequired'
      - $ref: '#/components/parameters/Start_timeRequired'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricHistoryGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/network-interfaces:
    get:
      tags:
      - Network Interfaces
      summary: Get network interfaces
      description: |
        Retrieves information about physical and virtual network interface objects.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/object-store-accounts:
    get:
      tags:
      - Object Store Accounts
      summary: Get object store accounts
      description: |
        Retrieves object store accounts.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStoreAccountGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/pods:
    get:
      tags:
      - Pods
      summary: Get pods
      description: |
        Retrieves information about pod objects.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/pod-replica-links:
    get:
      tags:
      - Pod Replica Links
      summary: Get pod replica links
      description: |
        Retrieves information about pod replica links.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_ids_plus'
      - $ref: '#/components/parameters/Member_names_plus'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Source_ids_plus'
      - $ref: '#/components/parameters/Source_names_plus'
      - $ref: '#/components/parameters/Target_ids_plus'
      - $ref: '#/components/parameters/Target_names_plus'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodReplicaLinkGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/policies:
    get:
      tags:
      - Policies
      summary: Get policies
      description: |
        Retrieves policies and their rules.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/policies/file-systems:
    get:
      tags:
      - Policies
      summary: Get policy / FlashBlade file system pairs
      description: |
        Retrieves pairs of policy references and their FlashBlade file system members.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_ids'
      - $ref: '#/components/parameters/Member_names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Policy_ids'
      - $ref: '#/components/parameters/Policy_names'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyMembersGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/policies/file-system-replica-links:
    get:
      tags:
      - Policies
      summary: Get policy / FlashBlade file system replica link pairs
      description: |
        Retrieves pairs of policy references and their FlashBlade file system replica link members.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_ids'
      - $ref: '#/components/parameters/Member_names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Policy_ids'
      - $ref: '#/components/parameters/Policy_names'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyMembersGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/policies/file-system-snapshots:
    get:
      tags:
      - Policies
      summary: Get policy / FlashBlade file system snapshot pairs
      description: |
        Retrieves pairs of policy references and their FlashBlade file system snapshot members.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_ids'
      - $ref: '#/components/parameters/Member_names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Policy_ids'
      - $ref: '#/components/parameters/Policy_names'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyMembersGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/policies/members:
    get:
      tags:
      - Policies
      summary: Get policy / member pairs
      description: |
        Retrieves pairs of policy references and their members.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_ids'
      - $ref: '#/components/parameters/Member_names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Policy_ids'
      - $ref: '#/components/parameters/Policy_names'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyMembersGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/ports:
    get:
      tags:
      - Ports
      summary: Get ports
      description: |
        Retrieves information about FlashArray ports.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/subscriptions:
    get:
      tags:
      - Subscriptions
      summary: Get subscriptions
      description: |
        Retrieves information about Pure1 subscriptions.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/subscription-licenses:
    get:
      tags:
      - Subscriptions
      summary: Get subscription licenses
      description: |
        Retrieves information about Pure1 subscription licenses.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Marketplace_partner_reference_ids'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Subscription_ids'
      - $ref: '#/components/parameters/Subscription_names'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionLicenseGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/targets:
    get:
      tags:
      - Targets
      summary: Get targets
      description: |
        Retrieves information about targets.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/volumes:
    get:
      tags:
      - Volumes
      summary: Get volumes
      description: |
        Retrieves information about volume objects.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
  /api/1.0/volume-snapshots:
    get:
      tags:
      - Volume Snapshots
      summary: Get volume snapshots
      description: |
        Retrieves information about snapshots of volumes.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Source_ids'
      - $ref: '#/components/parameters/Source_names'
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshotGetResponse'
        "400":
          $ref: '#/components/responses/Error400'
        "403":
          $ref: '#/components/responses/Error403'
        "404":
          $ref: '#/components/responses/Error404'
        "429":
          $ref: '#/components/responses/Error429'
        "500":
          $ref: '#/components/responses/Error500'
components:
  schemas:
    OauthGrantType:
      type: string
      description: |
        The method by which the access token will be obtained.
        The Pure Storage REST API supports the OAuth 2.0 "token exchange" grant type,
        which indicates that a token exchange is being performed.
        Set `grant_type` to `urn:ietf:params:oauth:grant-type:token-exchange`.
      default: urn:ietf:params:oauth:grant-type:token-exchange
    OauthSubjectToken:
      type: string
      description: |+
        An encoded security ID Token representing the identity of the party on behalf of
        whom the request is being made. The token must be issued by a trusted
        identity provider which must be either a registered application in Pure1
        or an enabled API client on the array. The token must be a JSON Web Token
        and must contain the following claims:

        > | JWT claim | Location | API Client Field | Description | Required By |

        > |-|-|-|-|-|

        > | kid | Header | key_id | Key ID of the API client that issues the identity token. | FlashArray
        and FlashBlade only. |

        > | aud | Payload | id | Client ID of the API client that issues the identity token. | FlashArray
        and FlashBlade only. |

        > | sub | Payload | | Login name of the array user for whom the token should be issued.
        This must be a valid user in the system. | FlashArray and FlashBlade only. |

        > | iss | Payload | issuer | Application ID for the Pure1 or API client's trusted identity
        issuer on the array. | All products. |

        > | iat | Payload | | Timestamp of when the identity token was issued.
        Measured in milliseconds since the UNIX epoch. | All products. |

        > | exp | Payload | | Timestamp of when the identity token will expire.
        Measured in milliseconds since the UNIX epoch. | All products. |


        Each token must also be signed with the private key that is paired with the
        API client's public key.

    OauthSubjectTokenType:
      type: string
      description: |
        An identifier that indicates the type of security token specifed in the `subject_token` parameter.
        The Pure Storage REST API supports the JSON Web Token (JWT)
        as the means for requesting the access token.
        Set `subject_token_type` to `urn:ietf:params:oauth:token-type:jwt`.
      default: urn:ietf:params:oauth:token-type:jwt
    Alert:
      description: |
        An alert from an array.
      allOf:
      - $ref: '#/components/schemas/_arraysResource'
      - type: object
        properties:
          actual:
            description: Actual condition at the time of the alert.
            type: string
            example: empty
          category:
            description: |
              Category of the alert. Valid values are `array`, `hardware`, and
              `software`.
            type: string
            example: array
          closed:
            description: |
              Time when the alert was closed, in milliseconds since UNIX epoch.
            type: integer
            format: int64
            example: 1502729489760
          code:
            description: Code associated with the alert.
            type: integer
            example: 100
          component_name:
            description: Name of the component alerted about.
            type: string
            example: drive1
          component_type:
            description: Type of the component alerted about.
            type: string
            example: drive
          created:
            description: |
              Time when the alert was created, in milliseconds since UNIX epoch.
            type: integer
            format: int64
            example: 1502729489760
          description:
            description: Short description of the alert.
            type: string
            example: Some sort of failure.
          expected:
            description: Expected state/threshold under normal conditions.
            type: string
            example: healthy
          knowledge_base_url:
            description: URL of the relevant Knowledge Base page.
            type: string
            example: https://support.purestorage.com/
          notified:
            description: |
              Time when the user was notified of the alert, in milliseconds since
              UNIX epoch.
            type: integer
            format: int64
            example: 1502729489760
          origin:
            description: Origin of the alert. Valid values are `array` and `Pure1`.
            type: string
            example: array
          severity:
            description: |
              Current severity level. Valid values are `info`, `warning`, `critical`,
              and `hidden`.
            type: string
            example: critical
          state:
            description: |
              Current state of the alert. Valid values are `open`, `closing`,
              and `closed`.
            type: string
            example: open
          summary:
            description: Summary of the alert.
            type: string
            example: Test alert.
          updated:
            description: |
              Time when the alert was last updated, in milliseconds since UNIX epoch.
            type: integer
            format: int64
            example: 1502729489760
    Array:
      description: |
        A FlashArray or FlashBlade storage appliance.
      allOf:
      - $ref: '#/components/schemas/_builtInAsOf'
      - type: object
        properties:
          model:
            description: Model of the array.
            type: string
            readOnly: true
            example: FA-m70r2
          os:
            description: |
              Valid values are `Elasticity`, `Purity`, `Purity//FA` and `Purity//FB`.
            type: string
            readOnly: true
            example: Purity//FA
          version:
            type: string
            readOnly: true
            example: 5.0.0
    Audit:
      description: |
        An audit of an action executed on an array or in Pure1.
      allOf:
      - $ref: '#/components/schemas/_arraysResource'
      - type: object
        properties:
          arguments:
            description: Arguments provided to the command.
            type: string
            example: --args
          command:
            description: The command that was executed.
            type: string
            example: purevol
          origin:
            description: Origin of the action. Valid values are `array` and `Pure1`.
            type: string
            example: array
          subcommand:
            description: The subcommand that was executed.
            type: string
            example: snap
          time:
            description: |
              Time at which the command was run in milliseconds since UNIX epoch.
            type: integer
            format: int64
            example: 1502729489760
          user:
            description: The user who ran the command.
            type: string
            example: pureuser
    Blade:
      description: |
        A FlashBlade blade.
      allOf:
      - $ref: '#/components/schemas/_builtInAsOf'
      - type: object
        properties:
          arrays:
            description: |
              A list of arrays that contain this blade.
              Each blade should only exist on one array.
            type: array
            minItems: 1
            items:
              $ref: '#/components/schemas/_bladeArrayStatus'
          details:
            description: |
              Extra details about the blade. Will be `null` if none exist.
            type: string
            readOnly: true
          raw_capacity:
            description: |
              The raw storage capacity of the blade.
            type: number
            format: int64
            readOnly: true
          status:
            description: |
              Valid values are `critical`, `evacuated`, `evacuating`, `healthy`,
              `identifying`, `unclaimed`, `unhealthy`, `unknown`, `unrecognized`.
            type: string
            readOnly: true
            example: healthy
    Bucket:
      allOf:
      - $ref: '#/components/schemas/_arraysResource'
      - type: object
        properties:
          account:
            $ref: '#/components/schemas/_fixedReference'
          created:
            description: "Creation time of the bucket, in milliseconds since Unix epoch."
            type: integer
            format: int64
            readOnly: true
            example: 1502729489760
          destroyed:
            description: |
              Returns a value of `true` if the bucket is destroyed, but not yet eradicated.
            type: boolean
          object_count:
            description: The number of objects contained within the bucket.
            type: integer
            format: int64
            readOnly: true
            example: 15
          versioning:
            description: |
              The versioning state for objects within the bucket.
              Valid values are `none`, `enabled`, and `suspended`.
            type: string
    BucketReplicaLink:
      description: A replica link between two buckets.
      allOf:
      - $ref: '#/components/schemas/_replicaLink'
      - type: object
        properties:
          members:
            description: The union of source and target buckets in the replica link.
            type: array
            items:
              $ref: '#/components/schemas/_resourceWithLocation'
          recovery_point:
            description: |
              Time when the last piece of data was replicated, in milliseconds since
              the UNIX epoch, and the recovery point of the bucket.
            type: integer
            format: int64
            readOnly: true
            example: 1565034592494
          sources:
            description: The source buckets in the replica link.
            type: array
            items:
              $ref: '#/components/schemas/_resourceWithLocation'
          status_details:
            description: |
              Detailed information about the status of the replica link when it is
              `unhealthy`.
            type: string
          targets:
            description: The target buckets in the replica link.
            type: array
            items:
              $ref: '#/components/schemas/_resourceWithLocation'
    Controller:
      description: |
        A platform that runs the Purity//FA Operating Environment.
      allOf:
      - $ref: '#/components/schemas/_arraysBuiltIn'
      - type: object
        properties:
          mode:
            description: |
              Mode of the controller.
              Values include `not present`, `offline`, `primary`, and `secondary`.
            type: string
            example: primary
          model:
            description: Model of the controller.
            type: string
            example: FA-m50
          status:
            description: |
              Status of the controller. Values include `not ready`, `ready`, `unknown`, and `updating`.
            type: string
            example: ready
          type:
            description: |
              Type of the controller. Values include `array_controller` and `shelf_controller`.
            type: string
            example: array_controller
          version:
            description: Version of the controller.
            type: string
            example: 5.0.0
    Directory:
      description: |
        A managed directory on an array.
      allOf:
      - $ref: '#/components/schemas/_arraysBuiltIn'
      - type: object
        properties:
          created:
            description: Creation time in milliseconds since UNIX epoch.
            type: integer
            format: int64
            readOnly: true
            example: 1502729489760
          destroyed:
            description: |
              Is the managed directory destroyed?
            type: boolean
            example: false
          directory_name:
            description: |
              The managed directory name without the file system name prefix.
              A managed directory full name is constructed in the form of `FILE_SYSTEM:DIR` where
              `FILE_SYSTEM` is the file system name and `DIR` is the value of this field.
              On FlashArray versions below `6.0.2`, the value is always `null`.
            type: string
            readOnly: true
          file_system:
            description: |
              The file system that this managed directory is in.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
          path:
            description: |
              Absolute path of the managed directory in the file system.
            type: string
            readOnly: true
    Drive:
      description: |
        Information about a flash, NVRAM, or cache module.
      allOf:
      - $ref: '#/components/schemas/_builtInAsOf'
      - type: object
        properties:
          arrays:
            description: |
              A list of arrays that contain this drive.
              Each drive should only exist on one array.
            type: array
            minItems: 1
            items:
              $ref: '#/components/schemas/_driveArrayStatus'
          capacity:
            description: |
              Physical storage capacity of the module (in bytes).
            type: number
            format: int64
            readOnly: true
            example: 494927872
          details:
            description: |
              Details about the status of the module if status is not `healthy`.
            type: string
            readOnly: true
            example: Slow link speed.
          protocol:
            description: |
              Storage protocol of the module. Values include `NVMe` and `SAS`.
            type: string
            readOnly: true
            example: SAS
          status:
            description: |
              Current status of the module. Values include `empty`, `failed`,
              `healthy`, `identifying`, `missing`, `recovering`, `unadmitted`,
              `unhealthy`, `unrecognized`, and `updating`.
            type: string
            readOnly: true
            example: healthy
          type:
            description: |
              The type of the module. Values include `cache`, `NVRAM`, `SSD`,
              and `virtual`.
            type: string
            readOnly: true
            example: SSD
    FileSystem:
      description: |
        A file system on an array, including both FlashArray and FlashBlade file systems.
      allOf:
      - $ref: '#/components/schemas/_arraysBuiltIn'
      - type: object
        properties:
          created:
            description: Creation time in milliseconds since UNIX epoch.
            type: integer
            format: int64
            readOnly: true
            example: 1502729489760
          destroyed:
            description: |
              Is the file system destroyed?
            type: boolean
            example: false
          fast_remove_directory_enabled:
            description: |
              On a FlashBlade file system, returns the value of `true` if fast remove directory
              is enabled and `false` if it is not.
              On a FlashArray file system, the value is always `null`.
            type: boolean
            example: false
          hard_limit_enabled:
            description: |
              On a FlashBlade file system, returns the value of `true` if the file system's size
              is a hard limit quota and `false` if it is not.
              On a FlashArray file system, the value is always `null`.
            type: boolean
            example: false
          http:
            description: "HTTP configuration. On a FlashArray file system, the value is always `null`."
            title: Http
            allOf:
            - $ref: '#/components/schemas/_http'
          nfs:
            description: "NFS configuration. On a FlashArray file system, the value is always `null`."
            title: Nfs
            allOf:
            - $ref: '#/components/schemas/_nfs'
          provisioned:
            description: |
              The provisioned size of the file system in bytes. A value of 0 means
              unlimited. On a FlashArray file system, the value is always `null`.
            type: integer
            format: int64
            example: 1099511627776
          smb:
            description: "SMB configuration. On a FlashArray file system, the value is always `null`."
            title: Smb
            allOf:
            - $ref: '#/components/schemas/_smb'
          snapshot_directory_enabled:
            description: |
              On a FlashBlade file system, returns the value of `true` if snapshot directory is enabled
              and `false` if it is not.
              On a FlashArray file system, the value is always `null`.
            type: boolean
            example: false
    FileSystemReplicaLink:
      description: A replica link between two FlashBlade file systems.
      allOf:
      - $ref: '#/components/schemas/_replicaLink'
      - type: object
        properties:
          members:
            description: |
              The union of source and target file systems in the replica link.
            type: array
            items:
              $ref: '#/components/schemas/_resourceWithLocation'
          recovery_point:
            description: |
              Time when the last replicated snapshot was created, in milliseconds
              since the UNIX epoch. (i.e. the recovery point if the file system is
              promoted.)
            type: integer
            format: int64
            readOnly: true
            example: 1565034592494
          sources:
            description: The source file systems in the replica link.
            type: array
            items:
              $ref: '#/components/schemas/_resourceWithLocation'
          status_details:
            description: |
              Detailed information about the status of the replica link when it is
              `unhealthy`.
            type: string
          targets:
            description: The target file systems in the replica link.
            type: array
            items:
              $ref: '#/components/schemas/_resourceWithLocation'
    FileSystemSnapshot:
      description: |
        A point-in-time image of the contents of a FlashBlade file system.
      allOf:
      - $ref: '#/components/schemas/_arraysBuiltIn'
      - type: object
        properties:
          created:
            description: Creation time in milliseconds since UNIX epoch.
            type: integer
            format: int64
            example: 1502729489760
          destroyed:
            description: |
              Indicates if this snapshot has been destroyed and is pending
              eradication.
            type: boolean
            example: false
          "on":
            description: |
              A reference to the array where the snapshot is stored.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
          source:
            description: |
              A reference to the file system that the snapshot was taken from.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
          suffix:
            description: Indicates the suffix of the snapshot.
            type: string
            example: checkpoint_2018_01_01
    Hardware:
      description: |
        A hardware component.
      allOf:
      - $ref: '#/components/schemas/_arraysBuiltIn'
      - type: object
        properties:
          details:
            description: |
              Details about the component if `status` is not `healthy`.
            type: string
            example: Temperature too high
          identify_enabled:
            description: "If true, the ID light is lit to visually identify the component."
            type: boolean
            example: true
          model:
            description: |
              Model number of the hardware component.
            type: string
            example: DFSC1
          serial:
            description: |
              Serial number of the hardware component.
            type: string
            example: PSMFL1717009B
          slot:
            description: |
              Slot number occupied by the PCI Express card that hosts the component.
            type: integer
            format: int32
            example: 16
          speed:
            description: |
              Speed (in bytes per second) at which the component is operating.
            type: integer
            format: int64
            example: 24000000000
          status:
            description: |
              Component status. Values include `critical`, `healthy`, `identifying`,
              `unhealthy`, `unclaimed`, `unknown`, `unrecognized`, and `unused`.
            type: string
            example: critical
          temperature:
            description: |
              Temperature (in degrees Celsius) reported by the component.
            type: integer
            format: int32
            example: 25
          type:
            description: |
              Type of the hardware component. Values include `am`, `chassis`, `controller`, `cooling`,
              `drive_bay`, `eth_port`, `fan`, `fc_port`, `flash_blade`, `ib_port`, `mgmt_port`,
              `nvram_bay`, `power_supply`, `sas_module`, `sas_port`, `storage_shelf`, and `temp_sensor`.
            type: string
            example: controller
          voltage:
            description: |
              Voltage (in Volts) reported by the component.
            type: integer
            format: int32
            example: 206
    HardwareConnector:
      description: |
        Details about the array's connection ports.
      allOf:
      - $ref: '#/components/schemas/_arraysBuiltIn'
      - type: object
        properties:
          connector_type:
            description: Form-factor of the interface. Values include `QSFP` and `RJ-45`.
            type: string
            example: QSFP
          lane_speed:
            description: Configured speed of each lane in the connector in bits per second.
            type: number
            format: int64
            example: 10000000000
          port_count:
            description: Configured number of ports in the connector.
            type: number
            format: int64
            example: 1.0
          transceiver_type:
            description: |
              Type of transceiver plugged into the connector port.
              If the type cannot be auto-detected and the internal user has not
              specified a type, the value will be `Unknown`.
              If nothing is plugged into the QSFP port, the value will be `Unused`.
              Transceiver type is not applicable for RJ-45 connectors.
            type: string
            example: 40GBASE-LR4
    Metric:
      description: |
        A type of measurement recorded on a resource.
      allOf:
      - $ref: '#/components/schemas/_builtInAsOf'
      - type: object
        properties:
          availabilities:
            description: |
              The available resolutions, aggregations and retentions of this metric.
            type: array
            readOnly: true
            items:
              $ref: '#/components/schemas/_metricAvailability'
          description:
            description: The additional description for the the metric.
            type: string
            readOnly: true
          resource_types:
            description: |
              The type of resource (as described by their endpoints) that this metric
              is available at. NOTE that a metric could be available for a combination
              of resource types, e.g. mirrored writes from "arrays" to "pods".
            type: array
            readOnly: true
            items:
              type: string
              description: |
                Valid values are `arrays`, `pods`, and `volumes`.
              example: example_resource_type
          unit:
            description: The unit of the metric.
            type: string
            readOnly: true
            example: B/s
        x-readOnly: true
    MetricHistory:
      description: |
        Historical time-series data of a given metric on a resource.
      allOf:
      - $ref: '#/components/schemas/_builtInAsOf'
      - type: object
        properties:
          aggregation:
            description: The aggregation of the metric data.
            type: string
            readOnly: true
            example: avg
          data:
            description: |
              The data points of the metric corresponding to the time window,
              resolution and aggregation. The points are returned in a nested array
              of 2-element arrays. For each of the 2-element array, the 1st element
              is the UTC millisecond epoch, and the 2nd element is the value,
              e.g. [[1519362000000, 11], [1519362030000, 21], ...].
            type: array
            readOnly: true
            items:
              type: array
              example:
              - 1502729489760
              - 123
              items:
                type: number
          resolution:
            description: The resolution of the metric data in milliseconds.
            type: integer
            format: int64
            readOnly: true
            example: 30000
          resources:
            description: |
              The references to the resources that the metric data is for.
              For example, write-iops metric for an array will have one element in
              this list referencing the array entity. the write-iops from an array to
              a pod will contain two elements in this list - first element pointing
              to the array, and second element pointing to the pod.
            type: array
            readOnly: true
            items:
              $ref: '#/components/schemas/_fixedReference'
          unit:
            description: The unit of the metric data.
            type: string
            readOnly: true
            example: B/s
        x-readOnly: true
    NetworkInterface:
      description: |
        A point of interconnection between the appliance and a private or public
        network. May be associated with a physical device or a representation of
        a virtual interface.
      allOf:
      - $ref: '#/components/schemas/_arraysBuiltIn'
      - type: object
        properties:
          address:
            description: IP address of this network interface.
            type: string
            example: 10.11.12.13
          enabled:
            type: boolean
            example: true
          gateway:
            type: string
            example: 10.20.30.40
          hwaddr:
            description: Hardware address.
            type: string
            example: 90:ef:ba:80:70:dc
          mtu:
            description: Maximum transmission unit.
            type: integer
            format: int32
            example: 9000
          netmask:
            type: string
            example: 255.255.255.0
          services:
            description: Services and protocols that are enabled on the interface.
            type: array
            items:
              type: string
              description: |
                Valid values are `iscsi`, `management`, `nvme/fc`, `nvme/roce`,
                  and `replication`.
              example: iscsi
          speed:
            description: Speed in bytes per second.
            type: integer
            format: int64
            example: 10000000000
          subinterfaces:
            type: array
            items:
              type: string
              example: ct0.eth0
    Pod:
      description: |
        An administrative domain, a data container, and a namespace for
        volumes and protection groups.
      allOf:
      - $ref: '#/components/schemas/_resource'
      - type: object
        properties:
          arrays:
            description: |
              A list of arrays that share this pod. If two or more arrays are
              specified, all data in the pod is synchronously mirrored between
              them.
            type: array
            minItems: 1
            items:
              $ref: '#/components/schemas/_podArrayStatus'
          mediator:
            description: The URL of the mediator for this pod.
            type: string
            example: purestorage
          source:
            description: A reference to the source pod of a pod clone.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
    PodReplicaLink:
      description: A replica link between two pods.
      allOf:
      - $ref: '#/components/schemas/_replicaLink'
      - type: object
        properties:
          members:
            description: The union of source and target pods in the replica link.
            type: array
            items:
              $ref: '#/components/schemas/_resourceWithLocations'
          recovery_point:
            description: |
              Time when the last piece of data was replicated, in milliseconds since
              the UNIX epoch, and the recovery point if the target pod is promoted.
              If the pod is currently baselining then the value is `null`.
            type: integer
          sources:
            description: The source pods in the replica link.
            type: array
            items:
              $ref: '#/components/schemas/_resourceWithLocations'
          status:
            description: |
              Status of the replica link. Values include `replicating`, `idle`,
              `baselining`, `paused`, `quiescing`, `quiesced`, and `unhealthy`.
            type: string
            example: replicating
          targets:
            description: The target pods in the replica link.
            type: array
            items:
              $ref: '#/components/schemas/_resourceWithLocations'
    Policy:
      description: |
        A set of rules that can be applied to resources.
      allOf:
      - $ref: '#/components/schemas/_arraysBuiltIn'
      - type: object
        properties:
          enabled:
            description: Returns `true` if this policy is enabled.
            type: boolean
            example: true
          rules:
            type: array
            items:
              $ref: '#/components/schemas/_policy_rule'
    PolicyMember:
      description: An association between a policy and a member.
      allOf:
      - $ref: '#/components/schemas/_timeAware'
      - type: object
        properties:
          member:
            $ref: '#/components/schemas/_fixedReference'
          policy:
            $ref: '#/components/schemas/_fixedReference'
    Port:
      description: A Purity//FA port.
      allOf:
      - $ref: '#/components/schemas/_arraysBuiltIn'
      - type: object
        properties:
          failover:
            description: |
              If the array port has failed over, returns the
              name of the port to which this port has failed over.
            type: string
            example: CT0.ETH2
          iqn:
            description: "The iSCSI Qualified Name if the port is iSCSI, `null` otherwise."
            type: string
            example: iqn.2010-06.com.purestorage:flasharray.393d930077be2977
          nqn:
            description: "The NVMe Qualified Name if the port is NVMe-oF, `null` otherwise."
            type: string
            example: nqn.2010-06.com.purestorage:flasharray.512f7bb185978505
          portal:
            description: "The IP and port number if the port is iSCSI or NVMe-oF, `null` otherwise."
            type: string
            example: 10.16.200.27:3260
          wwn:
            description: "The Fibre Channel World Wide Name if the port is Fibre Channel, `null` otherwise."
            type: string
            example: 52:4A:93:70:4E:E5:68:00
    Subscription:
      description: |
        A Pure1 subscription.
      allOf:
      - $ref: '#/components/schemas/_builtInAsOf'
      - type: object
        properties:
          expiration_date:
            description: |
              Date when the subscription expires.
              Represented as a timestamp of 00:00 on that date in UTC, in
              milliseconds since UNIX epoch.
            type: integer
            format: int64
            example: 1636238104000
          service:
            description: |
              The service type of the subscription. Values include
              `Evergreen//One`,
              `Evergreen//Flex`,
              `FlashStack as a Service`,
              `Storage as a Service`,
              `PaaS (Block Storage Service)`,
              `PaaS (File and Object Storage Service)`,
              `PaaS (Data Protection Service)`,
              and
              `Pure1 Subscription`.
            type: string
            example: PaaS (Block Storage Service)
          start_date:
            description: |
              Date when the subscription starts.
              Represented as a timestamp of 00:00 on that date in UTC, in
              milliseconds since UNIX epoch.
            type: integer
            format: int64
            example: 1604702243000
          status:
            description: |
              Current status of the subscription. Values include `active`,
              `terminated`, `poc-expired`, and `signed`.
            type: string
            example: active
    SubscriptionLicense:
      description: |
        A license belonging to a Pure1 subscription.
      allOf:
      - $ref: '#/components/schemas/_builtInAsOf'
      - type: object
        properties:
          average_on_demand:
            description: |
              Estimated daily on-demand usage of the license from the current calendar
              quarter to date.
            title: CurrentMetric
            allOf:
            - $ref: '#/components/schemas/_current_metric'
          expiration_date:
            description: |
              Date when the license expires.
              Represented as a timestamp of 00:00 on that date in UTC, in
              milliseconds since UNIX epoch.
            type: integer
            format: int64
            example: 1636238104000
          marketplace_partner:
            description: |
              Reference information about the marketplace partner of this license.
            title: MarketplacePartner
            allOf:
            - $ref: '#/components/schemas/_marketplace_partner'
          reservation:
            description: |
              Current reservation amount of the license.
            title: CurrentMetric
            allOf:
            - $ref: '#/components/schemas/_current_metric'
          resources:
            description: |
              References to the resources that operate under this license.
            type: array
            items:
              $ref: '#/components/schemas/_license_resource_reference'
          service_tier:
            description: |
              The tier of the service for the license.
            type: string
            example: //Block - Ultra
          start_date:
            description: |
              Date when the license starts.
              Represented as a timestamp of 00:00 on that date in UTC, in
              milliseconds since UNIX epoch.
            type: integer
            format: int64
            example: 1604702243000
          subscription:
            description: |
              A reference to which subscription this license belongs.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
          usage:
            description: |
              Usage of the license, averaged over the last day.
            title: CurrentMetric
            allOf:
            - $ref: '#/components/schemas/_current_metric'
    SupportContract:
      type: object
      properties:
        end_date:
          description: |
            Date when the support contract ended.
            Represented as a timestamp of 00:00 on that date in UTC, in milliseconds since UNIX epoch.
          type: integer
          format: int64
          example: 1582502400000
        resource:
          $ref: '#/components/schemas/_fixedReference'
        start_date:
          description: |
            Date when the support contract started.
            Represented as a timestamp of 00:00 on that date in UTC, in milliseconds since UNIX epoch.
          type: integer
          format: int64
          example: 1550966400000
    Tag:
      type: object
      properties:
        key:
          description: Key of the tag.
          type: string
          example: example_key
        namespace:
          description: |
            Namespace of the tag.
            Namespace identifies the category of the tag.
          type: string
          example: pure1
        resource:
          $ref: '#/components/schemas/_fixedReference'
        tag_organization_id:
          description: Org id of the tag.
          type: integer
          format: int64
          example: 101
        value:
          description: Value of the tag.
          type: string
          example: value123
    Target:
      description: |
        An external target system.
      allOf:
      - $ref: '#/components/schemas/_arraysBuiltIn'
      - type: object
        properties:
          address:
            description: IP address or FQDN of the target system.
            type: string
            example: example_name.dc1.example.com
          status:
            description: |
              Status of the connection. Values include `connected` and `connecting`.
            type: string
            readOnly: true
            example: connected
          status_details:
            description: |
              Additional information describing any issues encountered when
              connecting, or `null` if the `status` is `connected`.
            type: string
            readOnly: true
    Volume:
      description: |
        A disk-like random access virtual storage device that a FlashArray
        system exports to hosts via a logical unit number (LUN). For a host,
        a volume contains a number of 512-byte sectors in which data can be
        written and from which it can be read.
      allOf:
      - $ref: '#/components/schemas/_arraysResource'
      - type: object
        properties:
          created:
            description: Creation time in milliseconds since UNIX epoch.
            type: integer
            format: int64
            readOnly: true
            example: 1502729489760
          destroyed:
            description: Whether this volume has been destroyed or not.
            type: boolean
            readOnly: true
            example: false
          eradicated:
            description: Whether this volume has been eradicated or not.
            type: boolean
            readOnly: true
            example: false
          pod:
            description: |
              A reference to the pod this volume belongs to, if applicable.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
          provisioned:
            description: Provisioned size of the volume in bytes.
            type: integer
            format: int64
            minimum: 1048576
            maximum: 4503599627370496
            example: 2048576
          serial:
            description: |
              Serial number generated by Purity when the volume was created.
            type: string
            readOnly: true
            example: C68B5DCF2C1A4C9400012F92
          source:
            description: |
              A reference to the volume this volume was cloned from, if applicable.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
    VolumeSnapshot:
      description: |
        A point-in-time image of the contents of a volume.
      allOf:
      - $ref: '#/components/schemas/_arraysBuiltIn'
      - type: object
        properties:
          created:
            description: Creation time in milliseconds since UNIX epoch.
            type: integer
            format: int64
            example: 1502729489760
          destroyed:
            description: |
              Indicates if this snapshot has been destroyed and is pending
              eradication.
            type: boolean
            example: false
          "on":
            description: |
              A reference to the array or the offload where the snapshot is stored.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
          pod:
            description: |
              A reference to the pod the source volume belongs to, if applicable.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
          provisioned:
            description: |
              Indicates the size (in bytes) of the volume when the snapshot was taken.
            type: integer
            format: int64
            example: 2048576
          serial:
            description: |
              Serial number generated by Purity when the snapshot was created.
            type: string
            example: C68B5DCF2C1A4C9400012F92
          snapshot_group:
            description: |
              A reference to a consistency group snapshot that this snapshot is
              part of.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
          source:
            description: |
              A reference to the volume that the snapshot was taken from.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
          suffix:
            description: |
              Suffix added to the source volume name used to generate the
              volume snapshot name.
            type: string
            example: checkpoint_2018_01_01
    AlertsGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/AlertsResponse'
    ArrayGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/ArrayResponse'
    SupportContractGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/SupportContractResponse'
    TagGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/TagResponse'
    TagResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    AuditsGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/AuditsResponse'
    BladeGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/BladeResponse'
    BucketGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/BucketResponse'
    BucketReplicaLinkGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/BucketReplicaLinkResponse'
    ControllerGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/ControllerResponse'
    DirectoryGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/DirectoryResponse'
    DriveGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/DriveResponse'
    FileSystemGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/FileSystemResponse'
    PolicyMembersGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/PolicyMembersResponse'
    FileSystemReplicaLinkGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/FileSystemReplicaLinkResponse'
    FileSystemSnapshotGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/FileSystemSnapshotResponse'
    HardwareGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/HardwareResponse'
    HardwareConnectorGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/HardwareConnectorResponse'
    MetricGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/MetricResponse'
    MetricHistoryGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/MetricHistoryResponse'
    NetworkInterfaceGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/NetworkInterfaceResponse'
    ObjectStoreAccountGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/ObjectStoreAccountResponse'
    PodGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/PodResponse'
    PodReplicaLinkGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/PodReplicaLinkResponse'
    PolicyGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/PolicyResponse'
    PortGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/PortResponse'
    SubscriptionGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/SubscriptionResponse'
    SubscriptionLicenseGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/SubscriptionLicenseResponse'
    TargetGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/TargetResponse'
    VolumeGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/VolumeResponse'
    VolumeSnapshotGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/VolumeSnapshotResponse'
    _arraysResource:
      description: |
        An ordinary (as opposed to built-in) resource that exists on one or
        multiple arrays and can be created, named, renamed or deleted by the
        user. This might be a virtual resource (e.g., a volume), or correspond
        to something in the environment, like a host or a server.
      allOf:
      - $ref: '#/components/schemas/_resource'
      - $ref: '#/components/schemas/_arrays'
    _builtInAsOf:
      description: |+
        A built-in resource. Many are singletons predefined by Purity (e.g., support
        settings). Some correspond to a piece of software, like an app, or hardware,
        like a controller. Others are created by the system in response to some event
        (e.g., alerts, audit records).

        Typically, a user can't create, delete or rename a built-in resource. A few
        can be created or deleted, but not renamed because the names are meaningful
        to Purity (e.g., VIFs).

      allOf:
      - $ref: '#/components/schemas/_timeAware'
      - type: object
        properties:
          id:
            description: "A non-modifiable, globally unique ID chosen by the system."
            type: string
            readOnly: true
            example: 01c2889a-4124-49ff-8cbd-c33405ede123
          name:
            description: "A non-modifiable, locally unique name chosen by the system."
            type: string
            readOnly: true
            example: example_name
    _bladeArrayStatus:
      allOf:
      - $ref: '#/components/schemas/_fixedReference'
      - type: object
        properties:
          total_blades:
            description: |
              Count of total blade slots in the array.
            type: integer
            format: int64
            example: 15
          used_blades:
            description: |
              Count of used blade slots in the array.
            type: integer
            format: int64
            example: 10
    _fixedReference:
      type: object
      properties:
        id:
          description: The opaque and unique id of this resource.
          type: string
          readOnly: true
          example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
        name:
          description: The name of this resource.
          type: string
          readOnly: true
          example: example_name
        resource_type:
          description: |
            The type of this resource represented by the name of its REST endpoint.
            For example, "arrays", "network-interfaces", and "metrics".
            The value may be `null` if the resource is not represented.
          type: string
          readOnly: true
          example: example_resource_type
      x-readOnly: true
    _replicaLink:
      allOf:
      - $ref: '#/components/schemas/_resourceNoName'
      - type: object
        properties:
          lag:
            description: |
              Duration, in milliseconds, which represents how far behind the
              replication `target` is from the `source`.
            type: integer
            format: int64
            readOnly: true
            example: 1560
          paused:
            description: |
              Returns `true` if the replica link is paused.
            type: boolean
            example: false
          recovery_point:
            description: |
              Time when the last piece of data was replicated, measured in
              milliseconds since the UNIX epoch, and the recovery point of the
              resource.
            type: integer
            format: int64
            readOnly: true
            example: 1565034592494
          status:
            description: |
              Status of the replica link. Values include `replicating`, `idle`,
              and `unhealthy`.
            type: string
            example: replicating
    _resourceWithLocation:
      description: |
        An ordinary resource that exists in one location.
      allOf:
      - $ref: '#/components/schemas/_fixedReference'
      - type: object
        properties:
          location:
            $ref: '#/components/schemas/_fixedReference'
    _arraysBuiltIn:
      description: |
        A built-in resource that exists on one or multiple arrays.
      allOf:
      - $ref: '#/components/schemas/_builtInAsOf'
      - $ref: '#/components/schemas/_arrays'
    _driveArrayStatus:
      allOf:
      - $ref: '#/components/schemas/_fixedReference'
      - type: object
        properties:
          drive_count:
            description: |
              Count of drives in the array.
            type: integer
            format: int64
            example: 24
          total_capacity:
            description: |
              The total capacity of all drives in the array.
            type: integer
            format: int64
            example: 7625244672
    _http:
      type: object
      properties:
        enabled:
          description: Is the protocol enabled?
          type: boolean
          example: false
    _nfs:
      type: object
      properties:
        enabled:
          description: Is the protocol enabled?
          type: boolean
          example: false
        rules:
          description: NFS rules.
          type: string
          example: 10.0.0.1(ro)
    _smb:
      type: object
      properties:
        enabled:
          description: |
            Is the protocol enabled?
          type: boolean
    _metricAvailability:
      type: object
      properties:
        aggregations:
          description: "Available aggregations for this metric at the given resolution, e.g. 'avg', 'max'."
          type: array
          readOnly: true
          items:
            type: string
            description: |
              Valid values are `avg` and `max`.
            example: avg
        resolution:
          description: An available resolution of this metric in milliseconds.
          type: integer
          format: int64
          readOnly: true
          example: 30000
        retention:
          description: The retention at this given resolution in milliseconds.
          type: integer
          format: int64
          readOnly: true
          example: 2592000000
      x-readOnly: true
    _resource:
      description: |
        An ordinary (as opposed to built-in) resource that can be created, named,
        renamed, or deleted by the user. This might be a virtual resource (e.g.,
        a volume), or correspond to something in the physical environment, like a
        host or a server.
      allOf:
      - $ref: '#/components/schemas/_timeAware'
      - type: object
        properties:
          id:
            description: "A non-modifiable, globally unique ID chosen by the system."
            type: string
            readOnly: true
            example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
          name:
            description: "A modifiable, locally unique name chosen by the user."
            type: string
            example: example_name
    _podArrayStatus:
      allOf:
      - $ref: '#/components/schemas/_fixedReference'
      - type: object
        properties:
          frozen_at:
            description: |
              The Unix timestamp of when the array was last in sync with the pod (or
              null if the array is currently in sync).
            type: integer
            format: int64
            example: 1502729489760
          mediator_status:
            description: |
              The status of the mediator as assessed by this array.
              Valid values are `flummoxed`, `online`, `unknown`, and `unreachable`.
              `flummoxed` - The array has the wrong UUID for the mediator. This means
              that the array can reach a mediator, but is talking to the wrong one.
              Typically, this would be due to a misconfiguration in the customer
              environment (e.g. DNS misconfiguration).
              UUIDs also have a TTL. If a pod goes offline on one array, and stays
              like that for weeks (such that the TTL expires), it may also show this
              status until the peer array is reachable again.
              `online` - The array is successfully communicating with the mediator.
              `unreachable` - The array cannot reach the mediator. This could be due
              to a network issue or the mediator is down.
            type: string
            example: online
          status:
            description: |
              Status of an array in the pod.
              Valid values are `offline`, `online`, `resyncing`, and `unknown`.
              `offline` - There is a problem.
              This array cannot confirm it has the latest data for this pod.
              This array can not handle IO to the pod nor could it take over during an
              HA event.
              `online` - Everything is fine.
              This array has the latest data for this pod.
              This array can handle IO to the pod and can take over during an HA
              event.
              `resyncing` - There was a problem.
              This array is actively catching up to get the latest data for this
              pod. This array can handle IO to this pod's volumes, however it could
              not take over during an HA event.
              `unknown` - The state of the pod on this array cannot be determined.
              This state is only seen on disconnected arrays.
              The disconnected array cannot determine if the pod on another array is
              online or offline.
            type: string
            readOnly: true
            example: resyncing
    _resourceWithLocations:
      description: |
        A resource that may relate to multiple locations.
      allOf:
      - $ref: '#/components/schemas/_fixedReference'
      - type: object
        properties:
          locations:
            type: array
            items:
              $ref: '#/components/schemas/_fixedReference'
    _policy_rule:
      description: A rule that can be added to a policy.
      type: object
      properties:
        at:
          description: |
            Time of day to take the snapshot, in milliseconds since 00:00 in the
            specified `time_zone`. Only valid if `every` is set as whole days.
          type: integer
          format: int64
          example: 32400000
        every:
          description: "How often to take snapshots, in milliseconds."
          type: integer
          format: int64
          example: 86400000
        keep_for:
          description: "How long to keep snapshots, in milliseconds."
          type: integer
          format: int64
          example: 86400000
        time_zone:
          description: The time zone in which the `at` rule is applied.
          type: string
          example: America/Los_Angeles
    _timeAware:
      type: object
      properties:
        _as_of:
          description: The freshness of the data (timestamp in millis since epoch).
          type: integer
          format: int64
          readOnly: true
          example: 1502729489760
    _current_metric:
      type: object
      properties:
        data:
          description: |
            The data value.
          type: number
          example: 123.0
        metric:
          description: |
            A reference to the metric this data measures.
          title: FixedReference
          allOf:
          - $ref: '#/components/schemas/_fixedReference'
        unit:
          description: The unit of the metric.
          type: string
          example: B
    _marketplace_partner:
      type: object
      properties:
        name:
          description: |
            Name or identifier of the marketplace parter who owns the
            reference ID.
          type: string
          example: pure1
        reference_id:
          description: |
            External ID the marketplace partner knows to refer to this license.
          type: string
    _license_resource_reference:
      allOf:
      - $ref: '#/components/schemas/_fixedReference'
      - type: object
        properties:
          activation_time:
            description: |
              Time when the resource is activated under the license, in
              milliseconds since UNIX epoch.
            type: integer
            format: int64
            example: 1604702243000
          usage:
            description: |
              Current usage of the resource under the license.
            title: CurrentMetric
            allOf:
            - $ref: '#/components/schemas/_current_metric'
    Error:
      type: object
      properties:
        errors:
          description: The list of errors encountered.
          type: array
          items:
            $ref: '#/components/schemas/_errorErrors'
    ErrorNoContext:
      type: object
      properties:
        message:
          type: string
          example: Something was wrong
    PageInfo:
      type: object
      properties:
        continuation_token:
          description: |
            Continuation token that can be provided in the continuation_token
            query param to get the next page of data.
            If you use the continuation token to page through data you
            are guaranteed to get all items exactly once regardless of
            how items are modified. If an item is added or deleted during
            the pagination then it may or may not be returned.
            The continuation token is generated if the limit is less
            than the remaining number of items, and the default sort is used
            (no sort is specified).
          type: string
          example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
        total_item_count:
          description: Total number of items after applying filter params.
          type: integer
          format: int32
          example: 1
    AlertsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
    ArrayResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Array'
    SupportContractResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SupportContract'
    TagPut:
      type: object
      properties:
        key:
          description: Key of the tag.
          type: string
          example: example_key
        value:
          description: Value of the tag.
          type: string
          example: value123
    AuditsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Audit'
    BladeResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Blade'
    BucketResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Bucket'
    BucketReplicaLinkResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/BucketReplicaLink'
    ControllerResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Controller'
    DirectoryResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Directory'
    DriveResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Drive'
    FileSystemResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/FileSystem'
    PolicyMembersResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PolicyMember'
    FileSystemReplicaLinkResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/FileSystemReplicaLink'
    FileSystemSnapshotResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/FileSystemSnapshot'
    HardwareResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Hardware'
    HardwareConnectorResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/HardwareConnector'
    MetricResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Metric'
    MetricHistoryResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/MetricHistory'
    NetworkInterfaceResponse:
      type: object
      properties:
        items:
          description: A list of network interface objects.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
    ObjectStoreAccountResponse:
      type: object
      properties:
        items:
          description: A list of object store accounts.
          type: array
          items:
            $ref: '#/components/schemas/ObjectStoreAccount'
    PodResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Pod'
    PodReplicaLinkResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PodReplicaLink'
    PolicyResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Policy'
    PortResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Port'
    SubscriptionResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
    SubscriptionLicenseResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionLicense'
    TargetResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Target'
    VolumeResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Volume'
    VolumeSnapshotResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/VolumeSnapshot'
    _arrays:
      type: object
      properties:
        arrays:
          description: |
            The list of arrays where this resource exists. Many resources are on a single array, but
            some resources, such as pods, can be shared across multiple arrays.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/_fixedReference'
      x-readOnly: true
    _resourceNoName:
      description: |
        An ordinary (as opposed to built-in) resource that can be created or deleted
        by the user. This might be a virtual resource (e.g., a volume), or correspond
        to something in the physical environment, like a host or a server.
      allOf:
      - $ref: '#/components/schemas/_timeAware'
      - type: object
        properties:
          id:
            description: "A non-modifiable, globally unique ID chosen by the system."
            type: string
            readOnly: true
            example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
    _errorErrors:
      type: object
      properties:
        context:
          type: string
          example: Error with ...
        message:
          type: string
          example: Something was wrong
    ObjectStoreAccount:
      allOf:
      - $ref: '#/components/schemas/_arraysResource'
      - type: object
        properties:
          created:
            description: "Creation timestamp of the object, in milliseconds since Unix epoch."
            type: integer
            format: int64
            readOnly: true
            example: 1502729489760
          object_count:
            description: The number of objects within the account.
            type: integer
            format: int64
            readOnly: true
            example: 15
    TagBatchRequired:
      description: |
        A list of tags to be upserted.
      type: array
      items:
        $ref: '#/components/schemas/TagPut'
      x-codegen-request-body-name: tag
  responses:
    OauthToken200:
      description: OK
      content:
        application/json:
          schema:
            title: oauth_token_response
            type: object
            properties:
              access_token:
                description: |
                  The serialized OAuth 2.0 Bearer token used to perform authenticated requests.
                  The access token must be added to the Authorization header of all API calls.
                type: string
                example: "eyJraWQiOiJqTlBzL1Ria2c4U2Vua3F3ZmkvbnI4bWxxQ3NPIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJhdWQiOiI5NDcyMTkwOC1mNzkyLTcxMmUtYTYzOS0wODM5ZmE4MzA5MjIiLCJzdWIiOiJqb2UiLCJyb2xlIjoic3RvcmFnZV9hZG1pbiIsImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3Q6OTAwMCIsImlhdCI6MTU0NDAzNjA1MiwiZXhwIjoxNTQ0MDcyMDUyLCJqdGkiOiJjOTg0MjgyNS1mNGM3LTRiNGUtODdkNy03OWFiZmIxYTUzNDgifQ.pnuYAx0CkmkIG0LDrMAQGRr5Ci4-t5yMto3A7BkmyKnAVHBXG5ZIWwvNkWDLhqbA4YjmG7LZmWHrCVehLy2zy2vRLahFURsd3GTnOaWSyWFIyrwpoO81jQRtOQATtseweuMT_-C8o3oa4MgBNBsuKrhwKQS3oDDpeRPaCRTGev1_xRDxh_K6CWJBTAeOP2pcR4LW6zIJkCLzzkMuyL4aTJWWUjSbl04mcFbyw8r8W1GURrmaDVOvvpT634Hk9-GGh9OMIRlS6OOq7cJKc-RRWn18IK2Gs53V_KYshXTBbnRr990Y_qOX8MaTWOJTqgzsojY02MSVuJ9XDJWoIU3TQytr4K1vM2EvwDZDgl7LuUYUn7vWhbKktFzpeZyyhOjq3eX-ViugYKpIjBcG2f_-fcTPceEWGV82rd6TyVNB5A-v9u2kxCdW198t_kesgVQfuupDeS02cZe0ABLCzEHPiVF17JfiVr6sjkciioxN7Wj_j18ga4U0mdSukauT8yhbgCW1ijTVTFu1VwWebW0s8z3BWMtXdTtZ3BhcZVAdKRF8bOq7nfEbUQGhTn9g7dK-yF050winjtp-VTL2oUtkF5j1v_N8vPNiN9ZdkGJZr7VVZ-qeOJZcjdaRbxL6YB__yT1wkTcKPh8RHz6GUq7Jbyw8VIlcBE2nvJ63d0tH9C4"
              expires_in:
                description: |
                  The duration after which the access token will expire.
                  Measured in seconds. This differs from other duration
                  fields that are expressed in milliseconds.
                type: integer
                format: uint32
                example: 35999
              issued_token_type:
                description: |
                  The type of token that is issued.
                  The Pure Storage REST API supports OAuth 2.0 access tokens.
                type: string
                example: urn:ietf:params:oauth:token-type:access_token
              token_type:
                description: |
                  Indicates how the API client can use the access token issued.
                  The Pure Storage REST API supports the `Bearer` token.
                type: string
                example: Bearer
    OauthToken400:
      description: BAD REQUEST
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: invalid_request
              error_description:
                type: string
                example: "Unsupported subject_token_type: urn:ietf:params:oauth:token-"
    OauthToken401:
      description: UNAUTHORIZED
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: invalid_client
              error_description:
                type: string
                example: "Invalid identity: JWT validation failed."
    Error400:
      description: BAD REQUEST
      headers:
        X-Request-ID:
          description: Supplied by client during request or generated by server.
          schema:
            type: object
        X-RateLimit-Remaining-minute:
          description: |
            The number of requests remaining for the organization in that minute.
          schema:
            type: object
        X-RateLimit-Remaining-second:
          description: |
            The number of requests remaining for the organization in that second.
          schema:
            type: object
        X-RateLimit-Limit-minute:
          description: The number of requests available per minute.
          schema:
            type: object
        X-RateLimit-Limit-second:
          description: The number of requests available per second.
          schema:
            type: object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Error403:
      description: FORBIDDEN
      headers:
        X-Request-ID:
          description: Supplied by client during request or generated by server.
          schema:
            type: object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorNoContext'
    Error404:
      description: NOT FOUND
      headers:
        X-Request-ID:
          description: Supplied by client during request or generated by server.
          schema:
            type: object
        X-RateLimit-Remaining-minute:
          description: |
            The number of requests remaining for the organization in that minute.
          schema:
            type: object
        X-RateLimit-Remaining-second:
          description: |
            The number of requests remaining for the organization in that second.
          schema:
            type: object
        X-RateLimit-Limit-minute:
          description: The number of requests available per minute.
          schema:
            type: object
        X-RateLimit-Limit-second:
          description: The number of requests available per second.
          schema:
            type: object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Error429:
      description: TOO MANY REQUESTS
      headers:
        X-Request-ID:
          description: Supplied by client during request or generated by server.
          schema:
            type: object
        X-RateLimit-Remaining-minute:
          description: |
            The number of requests remaining for the organization in that minute.
          schema:
            type: object
        X-RateLimit-Remaining-second:
          description: |
            The number of requests remaining for the organization in that second.
          schema:
            type: object
        X-RateLimit-Limit-minute:
          description: The number of requests available per minute.
          schema:
            type: object
        X-RateLimit-Limit-second:
          description: The number of requests available per second.
          schema:
            type: object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorNoContext'
    Error500:
      description: INTERNAL SERVER ERROR
      headers:
        X-Request-ID:
          description: Supplied by client during request or generated by server.
          schema:
            type: object
        X-RateLimit-Remaining-minute:
          description: |
            The number of requests remaining for the organization in that minute.
          schema:
            type: object
        X-RateLimit-Remaining-second:
          description: |
            The number of requests remaining for the organization in that second.
          schema:
            type: object
        X-RateLimit-Limit-minute:
          description: The number of requests available per minute.
          schema:
            type: object
        X-RateLimit-Limit-second:
          description: The number of requests available per second.
          schema:
            type: object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    XRequestId:
      name: X-Request-ID
      in: header
      description: |
        Supplied by client during request or generated by server.
      schema:
        type: string
    Authorization:
      name: Authorization
      in: header
      description: |
        Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
      schema:
        type: string
    Continuation_token:
      name: continuation_token
      in: query
      description: |
        An opaque token used to iterate over a collection.
        The token to use on the next request is returned in the
        `continuation_token` field of the result.
        Single quotes are required around all strings.
      schema:
        type: string
        x-quoted: true
      x-quoted: true
    Filter:
      name: filter
      in: query
      description: |
        Exclude resources that don't match the specified criteria.
        Single quotes are required around all strings inside the filters.
      schema:
        type: string
    Ids:
      name: ids
      in: query
      description: |
        A comma-separated list of resource IDs.
        If there is not at least one resource that matches each `id` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Limit:
      name: limit
      in: query
      description: |
        Limit the size of the response to the specified number of resources.
        A limit of 0 can be used to get the number of resources without getting
        all of the resources. It will be returned in the total_item_count field.
        If a client asks for a page size larger than the maximum number, the request
        is still valid. In that case the server just returns the maximum number of
        items, disregarding the client's page size request. If not specified, defaults
        to 1000.
      schema:
        type: integer
        format: int32
    Names:
      name: names
      in: query
      description: |
        A comma-separated list of resource names.
        If there is not at least one resource that matches each `name` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Offset:
      name: offset
      in: query
      description: |
        The offset of the first resource to return from a collection.
      schema:
        type: integer
        format: int32
        minimum: 0
    Sort:
      name: sort
      in: query
      description: |
        Sort the response by the specified fields (in descending order if '-'
        is appended to the field name).
        If you provide a sort you will not get a continuation token in
        the response.
      style: form
      explode: false
      schema:
        type: array
        items:
          pattern: "^[a-z]+(_[a-z]+)*-?"
          type: string
    Resource_ids:
      name: resource_ids
      in: query
      description: |
        A comma-separated list of resource IDs.
        If there is not at least one resource that matches each `resource_id` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Resource_names:
      name: resource_names
      in: query
      description: |
        A comma-separated list of resource names.
        If there is not at least one resource that matches each `resource_name`
        element, an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Keys:
      name: keys
      in: query
      description: |
        A comma-separated list of tag keys.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Namespaces:
      name: namespaces
      in: query
      description: |
        A comma-separated list of namespaces.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Resource_idsRequired:
      name: resource_ids
      in: query
      description: |
        REQUIRED: either `resource_ids` or `resource_names`.
        A comma-separated list of resource IDs.
        If there is not at least one resource that matches each `resource_id` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Resource_namesRequired:
      name: resource_names
      in: query
      description: |
        REQUIRED: either `resource_ids` or `resource_names`.
        A comma-separated list of resource names.
        If there is not at least one resource that matches each `resource_name`
        element, an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Member_ids_plus:
      name: member_ids
      in: query
      description: |
        A list of member IDs. Member IDs separated by a `+` indicate that both
        members must be present in each element. Member IDs separated by a `,`
        indicate that at least one member must be present in each element.
        If there is not at least one resource that matches each `member_id` element,
        an error is returned.
        Single quotes are required around all strings.
        When using Try it Out in Swagger, a list of member IDs separated by a `+`
        must be entered in the same item cell.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Member_names_plus:
      name: member_names
      in: query
      description: |
        A list of member names. Member names separated by a `+` indicate that both
        members must be present in each element. Member names separated by a `,`
        indicate that at least one member must be present in each element.
        If there is not at least one resource that matches each `member_name` element,
        an error is returned.
        Single quotes are required around all strings.
        When using Try it Out in Swagger, a list of member names separated by a `+`
        must be entered in the same item cell.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Source_ids_plus:
      name: source_ids
      in: query
      description: |
        A list of source IDs. Source IDs separated by a `+` indicate that both
        sources must be present in each element. Source IDs separated by a `,`
        indicate that at least one source must be present in each element.
        If there is not at least one resource that matches each `source_id` element,
        an error is returned.
        Single quotes are required around all strings.
        When using Try it Out in Swagger, a list of source IDs separated by a `+`
        must be entered in the same item cell.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Source_names_plus:
      name: source_names
      in: query
      description: |
        A list of source names. Source names separated by a `+` indicate that both
        sources must be present in each element. Source names separated by a `,`
        indicate that at least one source must be present in each element.
        If there is not at least one resource that matches each `source_name` element,
        an error is returned.
        Single quotes are required around all strings.
        When using Try it Out in Swagger, a list of source names separated by a `+`
        must be entered in the same item cell.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Target_ids_plus:
      name: target_ids
      in: query
      description: |
        A list of target IDs. Target IDs separated by a `+` indicate that both
        targets must be present in each element. Target IDs separated by a `,`
        indicate that at least one target must be present in each element.
        If there is not at least one resource that matches each `target_id` element,
        an error is returned.
        Single quotes are required around all strings.
        When using Try it Out in Swagger, a list of target IDs separated by a `+`
        must be entered in the same item cell.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Target_names_plus:
      name: target_names
      in: query
      description: |
        A list of target names. Target names separated by a `+` indicate that both
        targets must be present in each element. Target names separated by a `,`
        indicate that at least one target must be present in each element.
        If there is not at least one resource that matches each `target_name` element,
        an error is returned.
        Single quotes are required around all strings.
        When using Try it Out in Swagger, a list of target names separated by a `+`
        must be entered in the same item cell.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    File_system_ids:
      name: file_system_ids
      in: query
      description: |
        Performs the operation on the file system ID specified.
        Enter multiple file system IDs in comma-separated format.
        The `file_system_ids` and `file_system_names` parameters cannot be provided together.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    File_system_names:
      name: file_system_names
      in: query
      description: |
        Performs the operation on the file system name specified.
        Enter multiple file system names in comma-separated format.
        For example, `filesystem1,filesystem2`.
        The `file_system_ids` and `file_system_names` parameters cannot be provided together.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    Member_ids:
      name: member_ids
      in: query
      description: |
        A comma-separated list of member IDs.
        If there is not at least one resource that matches each `member_id` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Member_names:
      name: member_names
      in: query
      description: |
        A comma-separated list of member names.
        If there is not at least one resource that matches each `member_name` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Policy_ids:
      name: policy_ids
      in: query
      description: |
        A comma-separated list of policy IDs.
        If there is not at least one resource that matches each `policy_id` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Policy_names:
      name: policy_names
      in: query
      description: |
        A comma-separated list of policy names.
        If there is not at least one resource that matches each `policy_name` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Source_ids:
      name: source_ids
      in: query
      description: |
        A comma-separated list of ids for the source of the object.
        If there is not at least one resource that matches each `source_id` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Source_names:
      name: source_names
      in: query
      description: |
        A comma-separated list of names for the source of the object.
        If there is not at least one resource that matches each `source_name` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Resource_types:
      name: resource_types
      in: query
      description: |
        The resource types to list the available metrics.
        Valid values are `arrays`, `buckets`, `directories`,
        `file-systems`, `pods`, `subscription-licenses` and
        `volumes`.
        A metric can belong to a combination of resources,
        e.g., write-iops from array to pod. In that case, query by
        ['arrays', 'pods'].
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    AggregationRequired:
      name: aggregation
      in: query
      description: |
        Aggregation needed on the metric data.
        Valid values are `avg` and `max`.
        Single quotes are required around all strings.
        Latency metrics averages are weighted by the IOPS.
      required: true
      schema:
        type: string
        x-quoted: true
      x-quoted: true
    End_timeRequired:
      name: end_time
      in: query
      description: |
        Timestamp of when the time window ends. Measured in milliseconds since the UNIX epoch.
      required: true
      schema:
        type: integer
        format: int64
    IdsRequired:
      name: ids
      in: query
      description: |
        REQUIRED: either `ids` or `names`.
        A comma-separated list of object IDs.
        If there is not at least one resource that matches each `id` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    NamesRequired:
      name: names
      in: query
      description: |
        REQUIRED: either `names` or `ids`.
        A comma-separated list of resource names.
        If there is not at least one resource that matches each `name` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    ResolutionRequired:
      name: resolution
      in: query
      description: |
        The duration of time between individual data points, in milliseconds.
      required: true
      schema:
        type: integer
        format: int64
    Start_timeRequired:
      name: start_time
      in: query
      description: |
        Timestamp of when the time window starts. Measured in milliseconds since the UNIX epoch.
      required: true
      schema:
        type: integer
        format: int64
    Marketplace_partner_reference_ids:
      name: marketplace_partner_reference_ids
      in: query
      description: |
        A comma-separated list of marketplace partner reference IDs.
        If there is not at least one resource that matches each
        `marketplace_partner.reference_id` element, an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Subscription_ids:
      name: subscription_ids
      in: query
      description: |
        A comma-separated list of subscription IDs.
        If there is not at least one resource that matches each `subscription.id`
        element, an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
    Subscription_names:
      name: subscription_names
      in: query
      description: |
        A comma-separated list of subscription names.
        If there is not at least one resource that matches each `subscription.name`
        element, an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
      x-quoted: true
  securitySchemes:
    AuthorizationHeader:
      type: apiKey
      name: Authorization
      in: header
x-original-swagger-version: "2.0"
