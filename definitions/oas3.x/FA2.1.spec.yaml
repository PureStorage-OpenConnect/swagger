openapi: 3.0.1
info:
  title: FlashArray REST API
  version: "2.1"
  x-logo:
    url:
      $ref: ../redoc/PS-LogoBase64-FA.txt
    backgroundColor: "#ffffff"
    altText: Pure Storage logo
servers:
- url: /
tags:
- name: Authorization
  description: |
    Pure Storage uses the OAuth 2.0 Token Exchange authorization grant and JSON Web Tokens (JWTs)
    to authenticate to the Pure Storage REST API.
    Before you can exchange the ID Token for an access token, create and enable the API client
    to generate the `key_id`, `id`, and `issuer` values.
    These values will be used as JWT claims for the `subject_token` parameter.
- name: API Clients
  description: |
    An API client represents an identity type. API clients are created on the array.
    To create an API client, register and then enable it on the array.
    After the API client has been created,
    the user name (`sub`) and identity tokens (`kid` and `aud` tokens)
    that are issued by the API client are used as claims for the JSON Web Token
    that you create to authenticate into the REST API.
- name: Connections
  description: |
    A connection gives hosts access to volumes on the array.
    The system supports private (host-volume) connections
    and public (host group-volume) connections.
    A private connection connects one volume to one host.
    Private connections are typically used for boot volumes
    and for stand-alone (non-clustered) host applications.
    A shared connection connects a designated set of hosts (via a host group)
    to a designated set of volumes, providing the hosts with a consistent "view" of the volumes.
    All associated hosts use the same LUN to address a given associated volume.
    All hosts and volumes associated with a host group are
    automatically connected to each other by virtue of their associations with the group.
    Shared connections are useful for cluster applications in which several related hosts require
    consistent (same LUN) connectivity to a set of storage volumes.
- name: Host Groups
  description: |
    Host groups implement consistent connections between a set of hosts and one or more volumes.
    Connections are consistent in the sense that all hosts associated with a host group
    address a volume connected to the group by the same LUN. Host groups are typically
    used to provide a common view of storage volumes to the hosts in a clustered application.
- name: Hosts
  description: |
    Hosts organize the storage network addresses
    (iSCSI Qualified Names, NVMe qualified names, or Fibre Channel world wide names)
    of client computers to identify the host's intiators.
    Hosts also control communications between clients and volumes.
    After a volume has been created, establish a host-volume connection
    so that the host can read data from and write data to the volume.
- name: Offloads
  description: |
    The offload feature enables system administrators to replicate point-in-time volume snapshots
    from the array to an external storage system for long-term retention.
    Each offload target represents an external storage system, such as an Azure Blob container,
    NFS device, or S3 bucket, to where Purity//FA volume snapshots can be replicated.
- name: Pods
  description: |
    Synchronous replication is managed through pods.
    A pod representing a collection of protection groups and volumes is created on one array
    and stretched to another array, resulting in fully synchronized writes
    between the two arrays.
    A pod can contain a mix of volumes, and protection groups with member volumes.
    Writes to the pod coming into either array are immediately synchronized and seen on both arrays.
- name: Protection Groups
  description: |
    A protection group defines a set of volumes, hosts, or host groups (called members)
    that are protected together through snapshots
    with point-in-time consistency across the member volumes.
    The members within the protection group have common data protection requirements
    and the same snapshot, replication, and retention schedules.
    Protection group members include volumes, hosts, and host groups.
    After a protection group has been created, configure the protection group schedule
    to generate and replicate snapshots to another array or to an external storage system.
- name: Protection Group Snapshots
  description: |
    Protection group snapshots capture the content of all volumes on the source array
    for the specified protection group at a single point in time.
    The snapshot is an immutable image of the volume data at that instance in time.
    The volumes are either direct members of the protection group or connected to
    any of its hosts or host groups within a protection group.
    Volumes are protected through protection group snapshots that are retained locally,
    replicated to other arrays or storage systems, or both.
    Protection group snapshots can be manually generated on demand or enabled to automatically
    generate at scheduled intervals.
    After a protection group snapshot has been taken,
    it is either stored on the local array or replicated over to a remote (target) array.
- name: Remote Pods
  description: |
    A remote pod represents a pod that is on a connected array but not stretched to this array.
- name: Remote Protection Groups
  description: |
    A remote protection group represents a protection group
    that resides on an offload target
    with the source side of the remote protection group being another array
    that is connected to the local array.
    The local array can only see the remote protection groups
    of other arrays if the two arrays are connected.
- name: Remote Protection Group Snapshots
  description: |
    A remote protection group snapshot represents a protection group snapshot
    that resides on an offload target
    with the source side of the remote protection group snapshot being another array
    that is connected to the local array.
    The local array can only see the remote protection group snapshots
    of other arrays if the two arrays are connected.
- name: Remote Volume Snapshots
  description: |
    A remote volume snapshot represents a volume snapshot
    that resides on an offload target
    with the source side of the remote volume snapshot being another array
    that is connected to the local array.
    The local array can only see the remote volume snapshots
    of other arrays if the two arrays are connected.
- name: Volumes
  description: |
    A volume represents a container that manages the storage space on the array.
    After a volume has been created, establish a host-volume connection so that the host
    can read data from and write data to the volume.
    Furthermore, protect the volume data through asynchronous replication to a remote array,
    synchronous replication between remote arrays, and replication to external storage systems.
- name: Volume Groups
  description: |
    Volume groups organize volumes into logical groupings.
    If virtual volumes are configured, each volume group on the FlashArray array
    represents its associated virtual machine,
    and inside each of those volumes groups are the FlashArray volumes that are
    assigned to the virtual machine. Volume groups that are associated with virtual machines have
    names that begin with `vvol-` and end with the virtual machine name.
- name: Volume Snapshots
  description: |
    Volume snapshots are immutable, point-in-time images of the contents of one or more volumes.
    There are two types of volume snapshots&#58;
    volume snapshots and protection group volume snapshots.
    A volume snapshot is a snapshot that captures the contents of a single volume.
    A protection group volume snapshot is a volume snapshot that is created from a group of
    volumes that are part of the same protection group. All of the volume snapshots created from a
    protection group snapshot are point-in-time consistent with each other.
paths:
  /oauth2/1.0/token:
    post:
      tags:
      - Authorization
      summary: Get access token
      description: |
        Exchanges an ID Token for an OAuth 2.0 access token.
      parameters:
      - $ref: '#/components/parameters/XRequestId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - grant_type
              - subject_token
              - subject_token_type
              type: object
              properties:
                grant_type:
                  $ref: '#/components/schemas/OauthGrantType'
                subject_token:
                  $ref: '#/components/schemas/OauthSubjectToken'
                subject_token_type:
                  $ref: '#/components/schemas/OauthSubjectTokenType'
        required: true
      responses:
        "200":
          $ref: '#/components/responses/OauthToken200'
        "400":
          $ref: '#/components/responses/OauthToken400'
        "401":
          $ref: '#/components/responses/OauthToken401'
      security: []
  /api/api_version:
    get:
      tags:
      - Authorization
      summary: List available API versions
      description: |
        Returns a list of available API versions. No authentication is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/XRequestId'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api_versionResponse'
      security: []
  /api/2.1/api-clients:
    get:
      tags:
      - API Clients
      summary: List API clients
      description: |+
        Returns a list of API clients.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientGetResponse'
    post:
      tags:
      - API Clients
      summary: Create an API client
      description: |
        Creates an API client. Newly created API clients are disabled by default.
        Enable an API client through the `PATCH` method.
        The `names`, `max_role`, `issuer`, and `public_key` parameters are required.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Names'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiClientPost'
        required: true
        x-codegen-request-body-name: API clients
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientResponse'
      x-codegen-request-body-name: API clients
    delete:
      tags:
      - API Clients
      summary: Delete an API client
      description: |+
        Deletes an API client.
        The `ids` or `names` parameter is required, but they cannot be set together.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Names'
      responses:
        "200":
          description: OK
          content: {}
    patch:
      tags:
      - API Clients
      summary: Manage an API client
      description: |
        Enables or disables an API client.
        The `ids` or `names` parameter is required, but they cannot be set together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Names'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiClientPatch'
        required: true
        x-codegen-request-body-name: API clients
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientResponse'
      x-codegen-request-body-name: API clients
  /api/2.1/connections:
    get:
      tags:
      - Connections
      summary: List volume connections
      description: |+
        Returns a list of connections between a volume and its hosts and host groups,
        and the LUNs used by the associated hosts to address these volumes.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Host_group_names'
      - $ref: '#/components/parameters/Host_names'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Protocol_endpoint_names'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Volume_names'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionGetResponse'
    post:
      tags:
      - Connections
      summary: Create a connection between a volume and host or host group
      description: |+
        Creates a connection between a volume and a host or host group.
        The `volume_names` and `host_names` or `host_group_names` query parameters are required.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Host_group_names'
      - $ref: '#/components/parameters/Host_names'
      - $ref: '#/components/parameters/Volume_names'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionPost'
        required: false
        x-codegen-request-body-name: connection
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionResponse'
      x-codegen-request-body-name: connection
    delete:
      tags:
      - Connections
      summary: Break a connection between a volume and its host or host group
      description: |
        Breaks the connection between a volume and its associated host
        or host group.
        The `volume_names` and `host_names` or `host_group_names` query parameters are required.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Host_group_names'
      - $ref: '#/components/parameters/Host_names'
      - $ref: '#/components/parameters/Volume_names'
      responses:
        "200":
          description: OK
          content: {}
  /api/2.1/host-groups:
    get:
      tags:
      - Host Groups
      summary: List host groups
      description: |+
        Returns a list of host groups.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostGroupGetResponse'
    post:
      tags:
      - Host Groups
      summary: Create a host group
      description: |+
        Creates a host group.
        The `names` query parameter is required.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Names'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostGroupResponse'
    delete:
      tags:
      - Host Groups
      summary: Delete a host group
      description: |+
        Deletes a host group.
        The `names` query parameter is required.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Names'
      responses:
        "200":
          description: OK
          content: {}
    patch:
      tags:
      - Host Groups
      summary: Manage a host group
      description: |+
        Manages a host group.
        The `names` query parameter is required.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Names'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostGroupPatch'
        required: true
        x-codegen-request-body-name: host-group
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostGroupResponse'
      x-codegen-request-body-name: host-group
  /api/2.1/host-groups/hosts:
    get:
      tags:
      - Host Groups
      summary: List host groups that are associated with hosts
      description: |+
        Returns a list of host groups that are associated with hosts.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberNoIdAllGetResponse'
    post:
      tags:
      - Host Groups
      summary: Add a host to a host group
      description: |
        Adds a host to a host group.
        Adding a host to a host group automatically
        connects the host to all volumes associated with the group.
        Multiple hosts can be belong to a host group,
        but a host can only belong to one host group.
        Hosts can be added to host groups at any time.
        The `group_names` and `member_names` parameters are required
        and must be set together, and only one host group can be specified at a time.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_names'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberNoIdAllResponse'
    delete:
      tags:
      - Host Groups
      summary: Remove a host from a host group
      description: |
        Removes a host from a host group.
        Removing a host from a host group automatically
        disconnects the host from all volumes associated with the group.
        Hosts can be removed from host groups at any time.
        The `group_names` and `member_names` parameters are required
        and must be set together, and only one host group can be specified at a time.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_names'
      responses:
        "200":
          description: OK
          content: {}
  /api/2.1/host-groups/performance:
    get:
      tags:
      - Host Groups
      summary: List host group performance data
      description: |+
        Returns real-time and historical performance data,
        real-time latency data, and
        average I/O sizes across all volumes,
        displayed both by host group
        and as a total across all host groups.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePerformanceNoIdGetResponse'
  /api/2.1/host-groups/performance/by-array:
    get:
      tags:
      - Host Groups
      summary: List host group performance data by array
      description: |
        Returns real-time and historical performance data, real-time latency data,
        and average I/O size data.
        The data returned is for each volume that is connected to a host group on the current array and
        for each volume that is connected to a host group on any remote arrays
        that are visible to the current array.
        The data is displayed as a total across all host groups on each array and
        by individual host group.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePerformanceNoIdByArrayGetResponse'
  /api/2.1/host-groups/protection-groups:
    get:
      tags:
      - Host Groups
      summary: List host groups that are members of protection groups
      description: |
        Returns a list of host group members that belong to one or more protection groups.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberNoIdAllGetResponse'
    post:
      tags:
      - Host Groups
      summary: Add a host group to a protection group
      description: |
        Adds a host group member to a protection group.
        Members that are already in the protection group are not affected.
        For asynchronous replication, only members of the same type can belong to a protection group.
        The `group_names` parameter represents the name of the protection group, and
        the `member_names` parameter represents the name of the host group.
        The `group_names` and `member_names` parameters are required and must be set together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_names'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberNoIdAllResponse'
    delete:
      tags:
      - Host Groups
      summary: Remove a host group from a protection group
      description: |
        Removes a host group member from a protection group.
        After the member has been removed, it is no longer protected by the group.
        Any protection group snapshots that were taken before the member was removed
        will not be affected.
        Removing a member from a protection group does not delete the member from the array,
        and the member can be added back to the protection group at any time.
        The `group_names` parameter represents the name of the protection group, and
        the `member_names` parameter represents the name of the host group.
        The `group_names` and `member_names` parameters are required and must be set together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_names'
      responses:
        "200":
          description: OK
          content: {}
  /api/2.1/host-groups/space:
    get:
      tags:
      - Host Groups
      summary: List host group space information
      description: |
        Returns provisioned size and physical storage consumption data
        for each host group.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSpaceNoIdGetResponse'
  /api/2.1/hosts:
    get:
      tags:
      - Hosts
      summary: List hosts
      description: |+
        Returns a list of hosts.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostGetResponse'
    post:
      tags:
      - Hosts
      summary: Create a host
      description: |+
        Creates a host.
        The `names` query parameter is required.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Names'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostPost'
        required: true
        x-codegen-request-body-name: host
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostResponse'
      x-codegen-request-body-name: host
    delete:
      tags:
      - Hosts
      summary: Delete a host
      description: |+
        Deletes an existing host. All volumes that are connected to the host,
        either through private or shared connections,
        must be disconnected from the host before the host can be deleted.
        The `names` query parameter is required.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Names'
      responses:
        "200":
          description: OK
          content: {}
    patch:
      tags:
      - Hosts
      summary: Manage a host
      description: |+
        Manages an existing host, including its storage network addresses, CHAP, host personality, and
        preferred arrays, or associate a host to a host group.
        The `names` query parameter is required.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Names'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostPatch'
        required: true
        x-codegen-request-body-name: host
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostResponse'
      x-codegen-request-body-name: host
  /api/2.1/hosts/host-groups:
    get:
      tags:
      - Hosts
      summary: List hosts that are associated with host groups
      description: |+
        Returns a list of hosts that are associated with host groups.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberNoIdAllGetResponse'
    post:
      tags:
      - Hosts
      summary: Add a host to a host group
      description: |
        Adds a host to a host group.
        Adding a host to a host group automatically
        connects the host to all volumes associated with the group.
        Multiple hosts can be belong to a host group,
        but a host can only belong to one host group.
        Hosts can be added to host groups at any time.
        The `group_names` and `member_names` parameters are required
        and must be set together, and only one host group can be specified at a time.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_names'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberNoIdAllResponse'
    delete:
      tags:
      - Hosts
      summary: Remove a host from a host group
      description: |
        Removes a host from a host group.
        Removing a host from a host group automatically
        disconnects the host from all volumes associated with the group.
        Hosts can be removed from host groups at any time.
        The `group_names` and `member_names` parameters are required
        and must be set together, and only one host group can be specified at a time.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_names'
      responses:
        "200":
          description: OK
          content: {}
  /api/2.1/hosts/performance:
    get:
      tags:
      - Hosts
      summary: List host performance data
      description: |+
        Returns real-time and historical performance data,
        real-time latency data, and
        average I/O sizes across all volumes,
        displayed both by host
        and as a total across all hosts.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePerformanceNoIdGetResponse'
  /api/2.1/hosts/performance/by-array:
    get:
      tags:
      - Hosts
      summary: List host performance data by array
      description: |+
        Returns real-time and historical performance data, real-time latency data,
        and average I/O size data.
        The data returned is for each volume that is connected to a host on the current array and
        for each volume that is connected to a host on any remote arrays
        that are visible to the current array.
        The data is displayed as a total across all hosts on each array and by individual host.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePerformanceNoIdByArrayGetResponse'
  /api/2.1/hosts/protection-groups:
    get:
      tags:
      - Hosts
      summary: List hosts that are members of protection groups
      description: |
        Returns a list of host members that belong to one or more protection groups.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberNoIdAllGetResponse'
    post:
      tags:
      - Hosts
      summary: Add a host to a protection group
      description: |
        Adds a host member to a protection group.
        Members that are already in the protection group are not affected.
        For asynchronous replication, only members of the same type can belong to a protection group.
        The `group_names` parameter represents the name of the protection group, and
        the `member_names` parameter represents the name of the host.
        The `group_names` and `member_names` parameters are required and must be set together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_names'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberNoIdAllResponse'
    delete:
      tags:
      - Hosts
      summary: Remove a host from a protection group
      description: |
        Removes a host member from a protection group.
        After the member has been removed, it is no longer protected by the group.
        Any protection group snapshots that were taken before the member was removed
        will not be affected.
        Removing a member from a protection group does not delete the member from the array,
        and the member can be added back to the protection group at any time.
        The `group_names` parameter represents the name of the protection group, and
        the `member_names` parameter represents the name of the host.
        The `group_names` and `member_names` parameters are required and must be set together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_names'
      responses:
        "200":
          description: OK
          content: {}
  /api/2.1/hosts/space:
    get:
      tags:
      - Hosts
      summary: List host space information
      description: |
        Returns provisioned size and physical storage consumption data
        for each host.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSpaceNoIdGetResponse'
  /api/2.1/login:
    post:
      tags:
      - Authorization
      summary: POST login (placeholder)
      description: |
        Exchange an API token for a session token.
      parameters:
      - name: api-token
        in: header
        description: |
          API token for a user.
        schema:
          type: string
        example: 0f2e2884-9486-c6c2-438c-f50418f2aac3
      - $ref: '#/components/parameters/XRequestId'
      responses:
        "200":
          description: OK
          headers:
            x-auth-token:
              description: Session token for a user.
              schema:
                type: string
                example: 3be3d489-55c6-4643-90ac-a476dbc98812
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResponse'
  /api/2.1/logout:
    post:
      tags:
      - Authorization
      summary: POST logout (placeholder)
      description: |
        Invalidate a session token.
      parameters:
      - name: x-auth-token
        in: header
        description: Session token for a user.
        schema:
          type: string
        example: 3be3d489-55c6-4643-90ac-a476dbc98812
      - $ref: '#/components/parameters/XRequestId'
      responses:
        "200":
          description: OK
          content: {}
  /api/2.1/offloads:
    get:
      tags:
      - Offloads
      summary: List offload targets
      description: Returns a list of offload targets that are connected to the array.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Protocol'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OffloadGetResponse'
    post:
      tags:
      - Offloads
      summary: Connect to an offload target
      description: |
        Connects the array to an offload target.
        Before you can connect to, manage, and replicate to an offload target,
        the respective Purity//FA app must be installed.
        For more information about Purity//FA apps, refer to the Apps section of this guide.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Initialize'
      - $ref: '#/components/parameters/Names'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OffloadPost'
        required: true
        x-codegen-request-body-name: offload
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OffloadResponse'
      x-codegen-request-body-name: offload
    delete:
      tags:
      - Offloads
      summary: Disconnect from an offload target
      description: |
        Disconnects the array from an offload target.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Names'
      responses:
        "200":
          description: OK
          content: {}
  /api/2.1/pods:
    get:
      tags:
      - Pods
      summary: List pods
      description: |
        Returns a list of pods that are stretched to this array.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodGetResponse'
    post:
      tags:
      - Pods
      summary: Create a pod
      description: |
        Creates a pod on the local array.
        Each pod must be given a name that is unique across the arrays to which they are stretched,
        so a pod cannot be stretched to an array that already contains a pod with the same name.
        After a pod has been created, add volumes and protection groups to the pod,
        and then stretch the pod to another (connected) array.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Names'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PodPost'
        required: true
        x-codegen-request-body-name: pod
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodResponse'
      x-codegen-request-body-name: pod
    delete:
      tags:
      - Pods
      summary: Eradicate a pod
      description: |
        Eradicates a pod that has been destroyed and is pending eradication.
        Eradicated pods cannot be recovered. Pods are destroyed through the PATCH method.
        The `ids` or `names` parameter is required, but they cannot be set together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Names'
      responses:
        "200":
          description: OK
          content: {}
    patch:
      tags:
      - Pods
      summary: Manage a pod
      description: |
        Manages the details of a pod.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Names'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PodPatch'
        required: true
        x-codegen-request-body-name: pod
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodResponse'
      x-codegen-request-body-name: pod
  /api/2.1/pods/arrays:
    get:
      tags:
      - Pods
      summary: List pods and their the array members
      description: |
        Returns a list of pods and the local and remote arrays over which the pods are stretched.
        The optional `group_names` parameter represents the name of the pod.
        The optional `member_names` parameter
        represents the name of the array over which the pod is stretched.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Group_ids'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_ids'
      - $ref: '#/components/parameters/Member_names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberGetResponse'
    post:
      tags:
      - Pods
      summary: Stretch a pod to an array
      description: |
        Stretches a pod to an array.
        When a pod is stretched to an array,
        the data in the arrays over which the pod is stretched is synchronously replicated.
        The `group_names` parameter represents the name of the pod to be stretched.
        The `member_names` parameter represents the name of the array over which the pod is
        to be stretched.
        The `group_names` and `member_names` parameters are required and must be set together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_ids'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_ids'
      - $ref: '#/components/parameters/Member_names'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberResponse'
    delete:
      tags:
      - Pods
      summary: Unstretch a pod from an array
      description: |
        Unstretches a pod from an array, collapsing the pod to a single array.
        Unstretch a pod from an array when the volumes within the stretched pod
        no longer need to be synchronously replicated between the two arrays.
        After a pod has been unstretched, synchronous replication stops.
        A destroyed version of the pod with "restretch" appended to the pod name
        is created on the array that no longer has the pod.
        The restretch pod represents a point-in-time snapshot of the pod,
        just before it was unstretched.
        The restretch pod enters an eradication pending period
        starting from the time that the pod was unstretched.
        A restretch can pod can be cloned or destroyed, but it cannot be explicitly recovered.
        The `group_names` parameter represents the name of the pod to be unstretched.
        The `member_names` parameter represents the name of the array from which the pod is
        to be unstretched.
        The `group_names` and `member_names` parameters are required and must be set together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_ids'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_ids'
      - $ref: '#/components/parameters/Member_names'
      - $ref: '#/components/parameters/With_unknown'
      responses:
        "200":
          description: OK
          content: {}
  /api/2.1/pods/performance:
    get:
      tags:
      - Pods
      summary: List pod performance data
      description: |
        Returns real-time and historical performance data, real-time latency data,
        and average I/O sizes across all pods, displayed both by pod and as a total across all pods.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/History_end_time'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/History_resolution'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/History_start_time'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePerformanceGetResponse'
  /api/2.1/pods/performance/by-array:
    get:
      tags:
      - Pods
      summary: List pod performance data by array
      description: |
        Returns real-time and historical performance data, real-time latency data,
        and average I/O size data.
        The data is displayed as a total across all pods on the local array and by individual pod.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/History_end_time'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/History_resolution'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/History_start_time'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePerformanceByArrayGetResponse'
  /api/2.1/pods/space:
    get:
      tags:
      - Pods
      summary: List pod space information
      description: |
        Returns provisioned size and physical storage consumption data
        for each pod on the local array.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/History_end_time'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/History_resolution'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/History_start_time'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSpaceGetResponse'
  /api/2.1/protection-groups:
    get:
      tags:
      - Protection Groups
      summary: List protection groups
      description: |
        Returns a list of protection groups, including their associated
        source arrays, replication targets, hosts, host groups, and volumes.
        The list includes protection groups that were created on the local array
        to replicate snapshot data to other arrays or offload targets,
        created on a remote array and replicated asynchronously to this array,
        or created inside a pod on a remote array and stretched to the local array.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroupGetResponse'
    post:
      tags:
      - Protection Groups
      summary: Create a protection group
      description: |
        Creates a protection group on the local array for asynchronous replication.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Overwrite'
      - $ref: '#/components/parameters/Protection_group_source_names'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroupResponse'
    delete:
      tags:
      - Protection Groups
      summary: Eradicate a protection group
      description: |
        Eradicates a protection group that has been destroyed and is pending eradication.
        Eradicated protection groups cannot be recovered.
        Protection groups are destroyed through the PATCH method.
        The`ids` or `names` parameter is required, but they cannot be set together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Names'
      responses:
        "200":
          description: OK
          content: {}
    patch:
      tags:
      - Protection Groups
      summary: Manage a protection group
      description: |
        Configures the protection group schedules to generate and replicate snapshots
        to another array or to an external storage system.
        Also renames or destroys a protection group.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Names'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionGroup'
        required: true
        x-codegen-request-body-name: protection-group
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroupResponse'
      x-codegen-request-body-name: protection-group
  /api/2.1/protection-groups/hosts:
    get:
      tags:
      - Protection Groups
      summary: List protection groups with host members
      description: Returns a list of protection groups that have host members.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberNoIdAllGetResponse'
    post:
      tags:
      - Protection Groups
      summary: Add a host to a protection group
      description: |+
        Adds a host member to a protection group.
        Members that are already in the protection group are not affected.
        For asynchronous replication, only members of the same type can belong to a protection group.
        The `group_names` parameter represents the name of the protection group, and
        the `member_names` parameter represents the name of the host.
        The `group_names` and `member_names` parameters are required and must be set together.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_names'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberNoIdAllResponse'
    delete:
      tags:
      - Protection Groups
      summary: Remove a host from a protection group
      description: |
        Removes a host member from a protection group.
        After the member has been removed, it is no longer protected by the group.
        Any protection group snapshots that were taken before the member was removed
        will not be affected.
        Removing a member from a protection group does not delete the member from the array,
        and the member can be added back to the protection group at any time.
        The `group_names` parameter represents the name of the protection group, and
        the `member_names` parameter represents the name of the host.
        The `group_names` and `member_names` parameters are required and must be set together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_names'
      responses:
        "200":
          description: OK
          content: {}
  /api/2.1/protection-groups/host-groups:
    get:
      tags:
      - Protection Groups
      summary: List protection groups with host group members
      description: Returns a list of protection groups that have host group members.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberNoIdAllGetResponse'
    post:
      tags:
      - Protection Groups
      summary: Add a host group to a protection group
      description: |
        Adds a host group member to a protection group.
        Members that are already in the protection group are not affected.
        For asynchronous replication, only members of the same type can belong to a protection group.
        The `group_names` parameter represents the name of the protection group, and
        the `member_names` parameter represents the name of the host group.
        The `group_names` and `member_names` parameters are required and must be set together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_names'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberNoIdAllResponse'
    delete:
      tags:
      - Protection Groups
      summary: Remove a host group from a protection group
      description: |
        Removes a host group member from a protection group.
        After the member has been removed, it is no longer protected by the group.
        Any protection group snapshots that were taken before the member was removed
        will not be affected.
        Removing a member from a protection group does not delete the member from the array,
        and the member can be added back to the protection group at any time.
        The `group_names` parameter represents the name of the protection group, and
        the `member_names` parameter represents the name of the host group.
        The `group_names` and `member_names` parameters are required and must be set together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_names'
      responses:
        "200":
          description: OK
          content: {}
  /api/2.1/protection-groups/performance/replication:
    get:
      tags:
      - Protection Groups
      summary: List protection group replication performance data
      description: |+
        Returns the total number of bytes of replication data
        transmitted and received per second.
        The data is grouped by protection group.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/History_end_time'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/History_resolution'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/History_start_time'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroupPerformanceResponse'
  /api/2.1/protection-groups/performance/replication/by-array:
    get:
      tags:
      - Protection Groups
      summary: List protection group replication performance data with array details
      description: |
        Returns the total number of bytes of replication data
        transmitted and received per second.
        The data is grouped by protection group and includes the names of the source array and targets
        for each protection group.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/History_end_time'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/History_resolution'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/History_start_time'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroupPerformanceArrayResponse'
  /api/2.1/protection-groups/space:
    get:
      tags:
      - Protection Groups
      summary: List protection group space information
      description: |+
        Returns provisioned size and physical storage consumption data
        for each protection group.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSpaceNoIdGetResponse'
  /api/2.1/protection-groups/targets:
    get:
      tags:
      - Protection Groups
      summary: List protection groups with targets
      description: Returns a list of protection groups that have target arrays or offload targets.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroupTargetGetResponse'
    post:
      tags:
      - Protection Groups
      summary: Add a target to a protection group
      description: |+
        Adds an array or offload target to a protection group.
        The `group_names` parameter represents the name of the protection group.
        The `member_names` parameter represents the name of the array or offload target
        that is being added to the protection group.
        The `group_names` and `member_names` parameters are required and must be set together.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_names'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroupTargetResponse'
    delete:
      tags:
      - Protection Groups
      summary: Removes a target from a protection group
      description: |+
        Removes an array or offload target from a protection group.
        The `group_names` parameter represents the name of the protection group.
        The `member_names` parameter represents the name of the array or offload target
        that is being removed from the protection group.
        The `group_names` and `member_names` parameters are required and must be set together.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_names'
      responses:
        "200":
          description: OK
          content: {}
    patch:
      tags:
      - Protection Groups
      summary: Manage a protection group target
      description: |+
        Allows the source array to replicate protection group data to the target array,
        or disallows the source array from replicating protection group data to the target array.
        The `allowed` parameter must be set from the target array.
        The `group_names` parameter represents the name of the protection group.
        The `allowed` and `group_names` parameters are required and must be set together.
        Offload targets do not support the `allowed` parameter.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_names'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetProtectionGroupPostPatch'
        required: true
        x-codegen-request-body-name: target
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroupTargetResponse'
      x-codegen-request-body-name: target
  /api/2.1/protection-groups/volumes:
    get:
      tags:
      - Protection Groups
      summary: List protection groups with volume members
      description: Returns a list of protection groups that have volume members.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberNoIdAllGetResponse'
    post:
      tags:
      - Protection Groups
      summary: Add a volume to a protection group
      description: |
        Adds a volume member to a protection group.
        Members that are already in the protection group are not affected.
        For asynchronous replication, only members of the same type can belong to a protection group.
        The `group_names` parameter represents the name of the protection group, and
        the `member_names` parameter represents the name of the volume.
        The `group_names` and `member_names` parameters are required and must be set together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_names'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberNoIdAllResponse'
    delete:
      tags:
      - Protection Groups
      summary: Remove a volume from a protection group
      description: |
        Removes a volume member from a protection group.
        After the member has been removed, it is no longer protected by the group.
        Any protection group snapshots that were taken before the member was removed
        will not be affected.
        Removing a member from a protection group does not delete the member from the array,
        and the member can be added back to the protection group at any time.
        The `group_names` parameter represents the name of the protection group, and
        the `member_names` parameter represents the name of the volume.
        The `group_names` and `member_names` parameters are required and must be set together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_names'
      responses:
        "200":
          description: OK
          content: {}
  /api/2.1/protection-group-snapshots:
    get:
      tags:
      - Protection Group Snapshots
      summary: List protection group snapshots
      description: |
        Returns a list of protection group snapshots, including those pending eradication.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Source_names'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroupSnapshotGetResponse'
    post:
      tags:
      - Protection Group Snapshots
      summary: Generate a protection group snapshot
      description: |+
        Creates a point-in-time snapshot of the contents of a protection group.
        The `source_ids` or `source_names` parameter is required, but they cannot be set together.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Apply_retention'
      - $ref: '#/components/parameters/Source_names'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionGroupSnapshotPost'
        required: false
        x-codegen-request-body-name: protection-group-snapshot
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroupSnapshotResponse'
      x-codegen-request-body-name: protection-group-snapshot
    delete:
      tags:
      - Protection Group Snapshots
      summary: Eradicate a protection group snapshot
      description: "Eradicates a protection group snapshot that has been destroyed and is pending eradication.
        Eradicating a protection group snapshot eradicates all of its protection group snapshots. Eradicated
        protection group snapshots cannot be recovered. Protection group snapshots are destroyed through
        the `PATCH` method. The `ids` or `names` parameter is required, but they cannot be set together."
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Names'
      responses:
        "200":
          description: OK
          content: {}
    patch:
      tags:
      - Protection Group Snapshots
      summary: Manage a protection group snapshot
      description: |
        Destroys a protection group snapshot.
        To destroy a volume, set `destroyed=true`.
        To recover a volume that has been destroyed and is pending eradication, set `destroyed=false`.
        The `names` parameter is required.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Names'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionGroupSnapshotPatch'
        required: true
        x-codegen-request-body-name: protection-group-snapshot
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroupSnapshotResponse'
      x-codegen-request-body-name: protection-group-snapshot
  /api/2.1/protection-group-snapshots/transfer:
    get:
      tags:
      - Protection Group Snapshots
      summary: List protection group snapshots with transfer statistics
      description: Returns a list of protection group snapshots and their transfer statistics.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Source_names'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroupSnapshotTransferGetResponse'
  /api/2.1/remote-pods:
    get:
      tags:
      - Remote Pods
      summary: List remote pods
      description: |
        Returns a list of pods that that are on connected arrays but not stretched to this array.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/On_'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemotePodsResponse'
  /api/2.1/remote-protection-groups:
    get:
      tags:
      - Remote Protection Groups
      summary: List remote protection groups
      description: |
        Returns a list of remote protection groups.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/On_'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteProtectionGroupGetResponse'
    delete:
      tags:
      - Remote Protection Groups
      summary: Eradicate a remote protection group
      description: |
        Eradicates a remote protection group that has been destroyed and is pending eradication.
        Eradicated remote protection groups cannot be recovered.
        Remote protection groups are destroyed through the `PATCH` method.
        The `on` parameter represents the name of the offload target.
        The `ids` or `names` parameter and the `on` parameter are required and must be used together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/OnSingle'
      responses:
        "200":
          description: OK
          content: {}
    patch:
      tags:
      - Remote Protection Groups
      summary: Manage a remote protection group
      description: |
        Configures the snapshot retention schedule of a remote protection group.
        Also destroys a remote protection group from the offload target.
        Before the remote protection group can be destroyed,
        the offload target must first be removed from the protection group via the source array.
        The `on` parameter represents the name of the offload target.
        The `ids` or `names` parameter and the `on` parameter are required and must be used together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/OnSingle'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteProtectionGroup'
        required: true
        x-codegen-request-body-name: remote-protection-group
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteProtectionGroupResponse'
      x-codegen-request-body-name: remote-protection-group
  /api/2.1/remote-protection-group-snapshots:
    get:
      tags:
      - Remote Protection Group Snapshots
      summary: List remote protection group snapshots
      description: |
        Returns a list of remote protection group snapshots.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/On_'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Source_names'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteProtectionGroupSnapshotGetResponse'
    delete:
      tags:
      - Remote Protection Group Snapshots
      summary: Eradicate a remote protection group snapshot
      description: |
        Eradicates a remote protection group snapshot
        that has been destroyed and is pending eradication.
        Eradicated remote protection group snapshots cannot be recovered.
        Remote protection group snapshots are destroyed through the `PATCH` method.
        The `names` parameter represents the name of the protection group snapshot.
        The `on` parameter represents the name of the offload target.
        The `names` and `on` parameters are required and must be used together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/OnSingle'
      responses:
        "200":
          description: OK
          content: {}
    patch:
      tags:
      - Remote Protection Group Snapshots
      summary: Manage a remote protection group
      description: |
        Destroys a remote protection group snapshot from the offload target.
        The `on` parameter represents the name of the offload target.
        The `ids` or `names` parameter and the `on` parameter are required and must be used together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/OnSingle'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_destroyedPatchPost'
        required: true
        x-codegen-request-body-name: remote-protection-group-snapshot
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteProtectionGroupSnapshotResponse'
      x-codegen-request-body-name: remote-protection-group-snapshot
  /api/2.1/remote-protection-group-snapshots/transfer:
    get:
      tags:
      - Remote Protection Group Snapshots
      summary: List remote protection groups with transfer statistics
      description: Returns a list of remote protection groups and their transfer statistics.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/On_'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Source_names'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteProtectionGroupSnapshotTransferGetResponse'
  /api/2.1/remote-volume-snapshots:
    get:
      tags:
      - Remote Volume Snapshots
      summary: List remote volume snapshots
      description: |
        Returns a list of remote volume snapshots.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/On_'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Source_ids'
      - $ref: '#/components/parameters/Source_names'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteVolumeSnapshotGetResponse'
  /api/2.1/remote-volume-snapshots/transfer:
    get:
      tags:
      - Remote Volume Snapshots
      summary: List remote volume snapshots with transfer statistics
      description: |
        Returns a list of remote volume snapshots and their transfer statistics.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/On_'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Source_ids'
      - $ref: '#/components/parameters/Source_names'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteVolumeSnapshotTransferGetResponse'
  /api/2.1/volumes:
    get:
      tags:
      - Volumes
      summary: List volumes
      description: |+
        Returns a list of volumes, including those pending eradication.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGetResponse'
    post:
      tags:
      - Volumes
      summary: Create a volume
      description: |+
        Creates one or more virtual storage volumes of the specified size.
        If `provisioned` is not specified, the size of the new volume defaults to 1 MB in size.
        The `names` query parameter is required.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Overwrite'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumePost'
        required: true
        x-codegen-request-body-name: volume
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeResponse'
      x-codegen-request-body-name: volume
    delete:
      tags:
      - Volumes
      summary: Eradicate a volume
      description: |+
        Eradicates a volume that has been destroyed and is pending eradication.
        Eradicated volumes cannot be recovered.
        Volumes are destroyed through the `PATCH` method.
        The `ids` or `names` parameter is required, but they cannot be set together.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Names'
      responses:
        "200":
          description: OK
          content: {}
    patch:
      tags:
      - Volumes
      summary: Manage a volume
      description: |+
        Renames, destroys, or resizes a volume.
        To rename a volume, set `name` to the new name.
        To destroy a volume, set `destroyed=true`.
        To recover a volume that has been destroyed and is pending eradication, set `destroyed=false`.
        Sets the bandwidth and IOPs limits of a volume
        through the respective `bandwidth_limit` and `iops_limit` parameter.
        Moves the volume into a pod or volume group
        through the respective `pod` or `volume_group` parameter.
        The `ids` or `names` parameter is required, but they cannot be set together.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Truncate'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumePatch'
        required: true
        x-codegen-request-body-name: volume
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeResponse'
      x-codegen-request-body-name: volume
  /api/2.1/volumes/performance:
    get:
      tags:
      - Volumes
      summary: List volume performance data
      description: |+
        Returns real-time and historical performance data,
        real-time latency data, and
        average I/O sizes for each volume and
        and as a total of all volumes across the entire array.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/History_end_time'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/History_resolution'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/History_start_time'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePerformanceGetResponse'
  /api/2.1/volumes/performance/by-array:
    get:
      tags:
      - Volumes
      summary: List volume performance data by array
      description: |+
        Return real-time and historical performance data, real-time latency data,
        and average I/O size data.
        The data returned is for each volume on the current array and for each volume
        on any remote arrays that are visible to the current array.
        The data is grouped by individual volumes
        and as a total across all volumes on each array.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/History_end_time'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/History_resolution'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/History_start_time'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePerformanceByArrayGetResponse'
  /api/2.1/volumes/protection-groups:
    get:
      tags:
      - Volumes
      summary: List volumes that are members of protection groups
      description: |
        Returns a list of volume members that belong to one or more protection groups.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberNoIdAllGetResponse'
    post:
      tags:
      - Volumes
      summary: Add a volume to a protection group
      description: |
        Adds a volume member to a protection group.
        Members that are already in the protection group are not affected.
        For asynchronous replication, only members of the same type can belong to a protection group.
        The `group_names` parameter represents the name of the protection group, and
        the `member_names` parameter represents the name of the volume.
        The `group_names` and `member_names` parameters are required and must be set together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_names'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberNoIdAllResponse'
    delete:
      tags:
      - Volumes
      summary: Remove a volume from a protection group
      description: |
        Removes a volume member from a protection group.
        After the member has been removed, it is no longer protected by the group.
        Any protection group snapshots that were taken before the member was removed
        will not be affected.
        Removing a member from a protection group does not delete the member from the array,
        and the member can be added back to the protection group at any time.
        The `group_names` parameter represents the name of the protection group, and
        the `member_names` parameter represents the name of the volume.
        The `group_names` and `member_names` parameters are required and must be set together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Member_names'
      responses:
        "200":
          description: OK
          content: {}
  /api/2.1/volumes/space:
    get:
      tags:
      - Volumes
      summary: List volume space information
      description: |+
        Returns the provisioned size and physical storage consumption data for each volume.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/History_end_time'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/History_resolution'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/History_start_time'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSpaceGetResponse'
  /api/2.1/volumes/volume-groups:
    get:
      tags:
      - Volumes
      summary: List volumes that are in volume groups
      description: |+
        Returns a list of volumes that are in a volume group.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Group_ids'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_ids'
      - $ref: '#/components/parameters/Member_names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberGetResponse'
  /api/2.1/volume-groups:
    get:
      tags:
      - Volume Groups
      summary: List volume groups
      description: |+
        Returns a list of volume groups, including those pending eradication.


      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGroupGetResponse'
    post:
      tags:
      - Volume Groups
      summary: Create a volume group
      description: |
        Creates a volume group.
        The volume group itself does not contain any meaningful content;
        instead, it acts as a container that is used to organize volumes.
        Once a volume group has been created,
        volumes can be created inside the volume group or moved into and out of the volume group.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Names'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeGroupPost'
        required: true
        x-codegen-request-body-name: volume-group
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGroupResponse'
      x-codegen-request-body-name: volume-group
    delete:
      tags:
      - Volume Groups
      summary: Eradicate a volume group
      description: |
        Eradicates a volume group that has been destroyed and is pending eradication.
        Eradicated volume groups cannot be recovered.
        Volume groups are destroyed through the `PATCH` method.
        The `ids` or `names` parameter is required, but they cannot be set together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Names'
      responses:
        "200":
          description: OK
          content: {}
    patch:
      tags:
      - Volume Groups
      summary: Manage a volume group
      description: |
        Renames, destroys, or sets the QoS limits for the
        To rename a volume group, set `name` to the new name.
        To destroy a volume group, set `destroyed=true`.
        To recover a volume group that has been destroyed and is pending eradication, set
        `destroyed=false`.
        Sets the bandwidth and IOPs limits of a volume group
        through the respective `bandwidth_limit` and `iops_limit` parameter.
        The `ids` or `names` parameter is required, but they cannot be set together.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Names'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeGroup'
        required: true
        x-codegen-request-body-name: volume-group
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGroupResponse'
      x-codegen-request-body-name: volume-group
  /api/2.1/volume-groups/performance:
    get:
      tags:
      - Volume Groups
      summary: List volume group performance data
      description: |
        Returns real-time and historical performance data,
        real-time latency data, and
        average I/O sizes for each volume group and
        and as a total of all volume groups across the entire array.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/History_end_time'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/History_resolution'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/History_start_time'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePerformanceGetResponse'
  /api/2.1/volume-groups/space:
    get:
      tags:
      - Volume Groups
      summary: List volume group space information
      description: |
        Returns the provisioned size and physical storage consumption data
        for each volume group.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/History_end_time'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/History_resolution'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/History_start_time'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSpaceGetResponse'
  /api/2.1/volume-groups/volumes:
    get:
      tags:
      - Volume Groups
      summary: List volume groups with volumes
      description: Returns a list of volume groups that contain volumes.
      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Group_ids'
      - $ref: '#/components/parameters/Group_names'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Member_ids'
      - $ref: '#/components/parameters/Member_names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Total_item_count'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberGetResponse'
  /api/2.1/volume-snapshots:
    get:
      tags:
      - Volume Snapshots
      summary: List volume snapshots
      description: |+
        Return a list of volume snapshots, including those pending eradication.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Continuation_token'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Source_ids'
      - $ref: '#/components/parameters/Source_names'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshotGetResponse'
    post:
      tags:
      - Volume Snapshots
      summary: Generate a volume snapshot
      description: |+
        Create a point-in-time snapshot of the contents of a volume.
        The `source_ids` or `source_names` parameter is required, but they cannot be set together.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/OnSingle'
      - $ref: '#/components/parameters/Source_ids'
      - $ref: '#/components/parameters/Source_names'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeSnapshotPost'
        required: true
        x-codegen-request-body-name: volume-snapshot
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshotResponse'
      x-codegen-request-body-name: volume-snapshot
    delete:
      tags:
      - Volume Snapshots
      summary: Eradicate a volume snapshot
      description: |+
        Eradicate a volume snapshot that has been destroyed and is pending eradication.
        Eradicated volumes snapshots cannot be recovered.
        Volume snapshots are destroyed through the `PATCH` method.
        The `ids` or `names` parameter is required, but they cannot be set together.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Names'
      responses:
        "200":
          description: OK
          content: {}
    patch:
      tags:
      - Volume Snapshots
      summary: Manage a volume snapshot
      description: |+
        Rename, destroy, or recover a volume snapshot.
        To rename the suffix of a volume snapshot, set `name` to the new suffix name.
        To recover a volume snapshot that has been destroyed and is pending eradication,
        set `destroyed=true`.
        The `ids` or `names` parameter is required, but they cannot be set together.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Names'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeSnapshotPatch'
        required: true
        x-codegen-request-body-name: volume-snapshot
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshotResponse'
      x-codegen-request-body-name: volume-snapshot
  /api/2.1/volume-snapshots/transfer:
    get:
      tags:
      - Volume Snapshots
      summary: List volume snapshots with transfer statistics
      description: |+
        Returns a list of volume snapshots and their transfer statistics.

      parameters:
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/XRequestId'
      - $ref: '#/components/parameters/Destroyed'
      - $ref: '#/components/parameters/Filter'
      - $ref: '#/components/parameters/Ids'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Names'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Sort'
      - $ref: '#/components/parameters/Source_ids'
      - $ref: '#/components/parameters/Source_names'
      - $ref: '#/components/parameters/Total_item_count'
      - $ref: '#/components/parameters/Total_only'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshotTransferGetResponse'
components:
  schemas:
    OauthGrantType:
      type: string
      description: |
        The method by which the access token will be obtained.
        The Pure Storage REST API supports the OAuth 2.0 "token exchange" grant type,
        which indicates that a token exchange is being performed.
        Set `grant_type` to `urn:ietf:params:oauth:grant-type:token-exchange`.
      default: urn:ietf:params:oauth:grant-type:token-exchange
    OauthSubjectToken:
      type: string
      description: |+
        An encoded security ID Token representing the identity of the party on behalf of
        whom the request is being made. The token must be issued by a trusted
        identity provider which must be either a registered application in Pure1
        or an enabled API client on the array. The token must be a JSON Web Token
        and must contain the following claims:

        > | JWT claim | Location | API Client Field | Description | Required By |

        > |-|-|-|-|-|

        > | kid | Header | key_id | Key ID of the API client that issues the identity token. | FlashArray
        and FlashBlade only. |

        > | aud | Payload | id | Client ID of the API client that issues the identity token. | FlashArray
        and FlashBlade only. |

        > | sub | Payload | | Login name of the array user for whom the token should be issued.
        This must be a valid user in the system. | FlashArray and FlashBlade only. |

        > | iss | Payload | issuer | Application ID for the Pure1 or API client's trusted identity
        issuer on the array. | All products. |

        > | iat | Payload | | Timestamp of when the identity token was issued.
        Measured in milliseconds since the UNIX epoch. | All products. |

        > | exp | Payload | | Timestamp of when the identity token will expire.
        Measured in milliseconds since the UNIX epoch. | All products. |


        Each token must also be signed with the private key that is paired with the
        API client's public key.

    OauthSubjectTokenType:
      type: string
      description: |
        An identifier that indicates the type of security token specifed in the `subject_token` parameter.
        The Pure Storage REST API supports the JSON Web Token (JWT)
        as the means for requesting the access token.
        Set `subject_token_type` to `urn:ietf:params:oauth:token-type:jwt`.
      default: urn:ietf:params:oauth:token-type:jwt
    ApiClient:
      type: object
      properties:
        access_token_ttl_in_ms:
          description: |
            The requested TTL (Time To Live) length of time for the exchanged access token.
            Measured in milliseconds.
          type: integer
          format: int64
          readOnly: true
          example: 15000
          x-minimum: 1000
          x-maximum: 86400000
        enabled:
          description: |
            If `true`, the API client is permitted to exchange ID Tokens for access tokens.
            API clients are disabled by default.
          type: boolean
          readOnly: true
          example: true
        id:
          description: |
            The unique identifier for the associated API client.
            The ID represents the JWT `aud` (audience) claim in ID Tokens issued for this API client.
          type: string
          readOnly: true
          example: 6207d123-d123-0b5c-5fa1-95fabc5c7123
        issuer:
          description: |
            The name of the identity provider that will be issuing ID Tokens for this API client.
            This string represents the JWT `iss` (issuer) claim in ID Tokens issued for this API client.
          type: string
          readOnly: true
          example: https://purestorage.idp.okta.com
        key_id:
          description: |
            The unique identifier for the associated public key of this API client.
            This string must match the JWT `kid` (key ID) claim in ID Tokens issued for this API client.
          type: string
          readOnly: true
          example: 6207d123-d123-0b5c-5fa1-95fabc5c7123
        max_role:
          description: |
            The maximum role allowed for ID Tokens issued by this API client.
            The bearer of an access token will be authorized to perform actions
            within the intersection of this `max_role` and the role of the array
            user specified as the JWT `sub` (subject) claim.
            Valid `max_role` values are `readonly`, `ops_admin`, `array_admin`, and `storage_admin`.
            Users with the `readonly` (Read Only) role can perform operations that convey the
            state of the array. Read Only users cannot alter the state of the array.
            Users with the `ops_admin` (Ops Admin) role can perform the same operations as
            Read Only users plus enable and disable remote assistance sessions. Ops Admin users cannot
            alter the state of the array.
            Users with the `storage_admin` (Storage Admin) role can perform the same
            operations as Read Only users plus storage related operations, such as administering volumes,
            hosts, and host groups.
            Storage Admin users cannot perform operations that deal with global and system configurations.
            Users with the `array_admin` (Array Admin) role can perform the same
            operations as Storage Admin users plus array-wide changes dealing with global and system
            configurations. In other words, Array Admin users can perform all operations.
          type: string
          readOnly: true
          example: storage_admin
        name:
          description: |
            The API client name.
          type: string
          readOnly: true
          example: NightlyStatsAggregationScript
        public_key:
          description: |
            The API client's PEM formatted (Base64 encoded) RSA public key.
          type: string
          readOnly: true
          example: |
            -----BEGIN PUBLIC KEY-----
            MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEArSe6chh1JzME9svOKjU0
            eKTm8S23Ok3Vr2bWuPri/YHfLrlnRwWoCt+st0/BebKSJ+fQUWOaLlqpZQKpI8oR
            gJ9sWmwGibVG8cTuz7XMkskx9bsm/bjIenuB4W+s3g0BCsi9930mfdKgJgFzY69O
            nLh7d7hAFcmhSJa945PryQZpvJ/U4Ue5F4d+WXgEJ0SoSRaZ6bbeMPhcbMHTzTum
            2ZrPBkK5cqPYitaso6BXeAlqNQPw4Kbu4Ugm0CTogrtImkwoonWDDP34XMOq+u7q
            sNTbJSvDKMTM1RPPrTWCaLiuZkdLVEVesZ9/8+XUMIgBTElwQJDCAQer03MJzqRr
            1eCZGgLfDuYqwMG2MFaAX7kgqBwwyqRTd6MxaQxt2nkdfwiXSY71llzEQ23g3T+1
            64zjwAL5f+dtu8PkGF7IdU2T8P2Qk9bG9pckwZHWYkBK77BAk5jbmSzsKGZgRb2R
            1E+TWDKIaveFhQp251j/C5wkZwMXgjOzN+BOPo+OiLBGUl+jRybWA9f7Vq1MEdf6
            SEdLiqYrXcZERkYBMieLXAfdtaztAIb96cUu+OKMSLDk+D0GHkUfm7lEbDK3ew1+
            D6z+BnxDyH6oqZzz4lS2kPLBLsc+6pdTGuKLf0S9YuLiqJe659AdwU8+X/3KtwNd
            FVJSaxdFbWx0nj3hJqFkIO8CAwEAAQ==
            -----END PUBLIC KEY-----
      x-readOnly: true
    Connection:
      type: object
      properties:
        host:
          description: The host computer that sends and receives I/O requests to and from volumes on the
            FlashArray array.
          title: ReferenceNoId
          allOf:
          - $ref: '#/components/schemas/_referenceNoId'
        host_group:
          description: A virtual collection of hosts with common connectivity to volumes.
          title: ReferenceNoId
          allOf:
          - $ref: '#/components/schemas/_referenceNoId'
        lun:
          description: |
            The logical unit number (LUN) by which the specified hosts are to
            address the specified volume. LUN can be in one of two formats: a simple
            LUN, or a LUN and Sublun with virtual volumes. A LUN and Sublun are
            integers in the range of 1 to 4095.

            The first format is simply the LUN number. The second format is a single
            int64 combining both ((LUN << 32) + Sublun) or (LUN * 4294967296 + Sublun).

            In the FA UI, a combined LUN and Sublun is represented as "LUN:Sublun".
            Example: LUN = 30, Sublun = 2, LUN:Sublun = 30:2
            Combined: (30 * 4294967296 + 2) == 128849018882.
            In REST it will be returned as 128849018882.

            To automatically assign a LUN to a private connection, the system starts
            at LUN '1' and counts up to the maximum LUN '4095', assigning the first
            available LUN to the connection. For shared connections, the system starts
            at LUN '254' and counts down to the minimum LUN '1', assigning the first
            available LUN to the connection. If all LUNs in the '[1...254]' range are
            taken, the system starts at LUN '255' and counts up to the maximum LUN
            '4095', assigning the first available LUN to the connection. The maximum
            int64 LUN:Sublun value is 17587891081215.
          type: integer
          format: int64
          example: 7
        protocol_endpoint:
          description: "A protocol endpoint (also known as a conglomerate volume) which acts as a proxy
            through which virtual volumes are created and then connected to VMware ESXi hosts or host
            groups. The protocol endpoint itself does not serve I/Os; instead, its job is to form connections
            between FlashArray volumes and ESXi hosts and host groups."
          title: Reference
          allOf:
          - $ref: '#/components/schemas/_reference'
        volume:
          description: A container that manages the storage space on the array.
          title: FixedReference
          allOf:
          - $ref: '#/components/schemas/_fixedReference'
    Host:
      allOf:
      - $ref: '#/components/schemas/_resourceNoId'
      - type: object
        properties:
          chap:
            $ref: '#/components/schemas/_chap'
          connection_count:
            description: The number of volumes connected to the specified host.
            type: integer
            format: int64
            readOnly: true
            example: 3
          host_group:
            description: The host group to which the host should be associated.
            title: ReferenceNoId
            allOf:
            - $ref: '#/components/schemas/_referenceNoId'
          iqns:
            description: |
              The iSCSI qualified name (IQN) associated with the host.
            type: array
            items:
              type: string
              example: iqn.2010-06.com.purestorage:linux.393d930077be2977
          is_local:
            description: |
              If set to `true`, the location reference is to the local array.
              If set to `false`, the location reference is to a remote location,
              such as a remote array or offload target.
            type: boolean
            readOnly: true
          nqns:
            description: The NVMe Qualified Name (NQN) associated with the host.
            type: array
            items:
              type: string
              example: nqn.2010-06.com.purestorage:flasharray.512f7bb185978505
          personality:
            description: |
              Determines how the system tunes the array to ensure that it works optimally with the host.
              Set `personality` to the name of the host operating system or virtual memory system.
              Valid values are `aix`, `esxi`, `hitachi-vsp`, `hpux`,
              `oracle-vm-server`, `solaris`, and `vms`.
              If your system is not listed as one of the valid host personalities, do not set the option.
              By default, the personality is not set.
            type: string
          port_connectivity:
            $ref: '#/components/schemas/_host_port_connectivity'
          preferred_arrays:
            description: |
              For synchronous replication configurations, sets a host's preferred array to specify which
              array exposes active/optimized paths to that host.
              Enter multiple preferred arrays in comma-separated format.
              If a preferred array is set for a host,
              then the other arrays in the same pod will expose active/non-optimized paths to that host.
              If the host is in a host group, `preferred_arrays` cannot be set because host groups
              have their own preferred arrays.
              On a preferred array of a certain host, all the paths on all the ports
              (for both the primary and secondary controllers) are set up as A/O (active/optimized) paths,
              while on a non-preferred array, all the paths are A/N (Active/Non-optimized) paths.
            type: array
            items:
              $ref: '#/components/schemas/_reference'
          space:
            description: |
              Displays provisioned size and physical storage consumption
              information for the sum of all volumes connected to the specified host.
            title: Space
            allOf:
            - $ref: '#/components/schemas/_space'
          wwns:
            description: The Fibre Channel World Wide Name (WWN) associated with the host.
            type: array
            items:
              type: string
              example: 52:4A:93:70:4E:E5:68:00
    ResourcePerformance:
      allOf:
      - $ref: '#/components/schemas/_resource'
      - $ref: '#/components/schemas/_performance'
    ResourcePerformanceByArray:
      allOf:
      - $ref: '#/components/schemas/ResourcePerformance'
      - type: object
        properties:
          array:
            description: |
              The array on which the performance metrics were recorded.
            title: Resource
            allOf:
            - $ref: '#/components/schemas/_resource'
    ResourceSpaceNoId:
      allOf:
      - $ref: '#/components/schemas/_builtInResourceNoId'
      - type: object
        properties:
          space:
            description: |
              Displays size and space consumption information.
            title: Space
            allOf:
            - $ref: '#/components/schemas/_space'
          time:
            type: integer
            format: int64
            readOnly: true
        x-readOnly: true
    HostGroup:
      allOf:
      - $ref: '#/components/schemas/_resourceNoId'
      - type: object
        properties:
          connection_count:
            description: The number of volumes connected to the host group.
            type: integer
            format: int64
            readOnly: true
            example: 3
          host_count:
            description: The number of hosts in the host group.
            type: integer
            format: int64
            readOnly: true
            example: 3
          is_local:
            description: Returns a value of `true` if the host or host group belongs to the current array.
              Returns a value of `false` if the host or host group belongs to a remote array.
            type: boolean
            readOnly: true
          space:
            description: |
              Displays size and space consumption information.
            title: Space
            allOf:
            - $ref: '#/components/schemas/_space'
    Member:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/_reference'
        member:
          $ref: '#/components/schemas/_reference'
    MemberNoIdAll:
      type: object
      properties:
        group:
          description: "The resource in which the host, volume, or other item in the environment is a
            member."
          title: ReferenceNoId
          allOf:
          - $ref: '#/components/schemas/_referenceNoId'
        member:
          description: The member of the resource.
          title: ReferenceNoId
          allOf:
          - $ref: '#/components/schemas/_referenceNoId'
    MemberNoIdGroup:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/_referenceNoId'
        member:
          $ref: '#/components/schemas/_reference'
    Offload:
      allOf:
      - $ref: '#/components/schemas/OffloadPost'
      - $ref: '#/components/schemas/_resourceNoId'
      - type: object
        properties:
          protocol:
            description: |
              The type of offload.
              Valid values are `nfs` for Network File System, `s3` for Amazon S3,
              and `azure` for Microsoft Azure.
            type: string
            readOnly: true
          space:
            description: |
              Displays provisioned size and physical storage consumption
              information for the sum of all volumes connected to the specified host.
            title: Space
            allOf:
            - $ref: '#/components/schemas/_space'
          status:
            description: |
              The connection status of the offload target.
              Valid values are `connecting`, `connected`,
              `disconnecting`, `not connected`, and `scanning`.
               If set to `connected`, the array is connected to the offload target
               and is functioning properly.
               If set to `connecting`, the connection between the array and offload target is unhealthy,
               possibly due to network issues. Check the network connectivity between the interfaces,
               disconnect the array from the offload target, and then reconnect. If the issue persists,
               contact Pure Storage Support.
               If set to `not connected`, the offload app is not running and data
               cannot be replicated to the offload targets. Contact Pure Storage Support.
               If set to `scanning`,
               a connection has been established between the array and offload target,
               and the system is determining the state of the offload target.
               Once the scan successfully completes, the status will change to `connected`.
            type: string
            readOnly: true
          target_id:
            description: |
              The unique ID for the offload target.
              When multiple connections to one offload target are created,
              they will each have distinct IDs but share the same target ID.
            type: string
            readOnly: true
    Pod:
      allOf:
      - $ref: '#/components/schemas/_resource'
      - description: |
          A pod is an administrative domain, a data container, and a namespace for
          volumes and protection groups.
        type: object
        properties:
          arrays:
            description: |
              A list of arrays over which the pod is stretched.
              If there are two or more arrays in the stretched pod,
              all data in the pod is synchronously replicated between all of the arrays within the pod.
            type: array
            minItems: 1
            items:
              $ref: '#/components/schemas/_pod_array_status'
          destroyed:
            description: |
              Returns a value of `true` if the pod has been destroyed and is pending eradication.
              The `time_remaining` value displays the amount of time left
              until the destroyed pod is permanently eradicated.
              Before the `time_remaining` period has elapsed, the destroyed pod can be recovered
              by setting `destroyed=false`.
              Once the `time_remaining` period has elapsed,
              the pod is permanently eradicated and can no longer be recovered.
            type: boolean
          failover_preferences:
            description: |
              Determines which array within a stretched pod should be given priority to stay online
              should the arrays ever lose contact with each other. The current array and
              any peer arrays that are connected to the current array for synchronous replication can be
              added to a pod for failover preference.
              By default, `failover_preferences=null`,
              meaning no arrays have been configured for failover preference.
            type: array
            items:
              $ref: '#/components/schemas/_reference'
          footprint:
            description: |
              The maximum amount of physical space the pod would take up on any array,
              ignoring any data shared outside the pod.
              Measured in bytes.
              The footprint metric is mostly used for capacity planning.
            type: integer
            format: int64
            minimum: 0
          mediator:
            description: |
              The URL of the mediator for the pod.
              By default, the Pure1 Cloud Mediator (`purestorage`) serves as the mediator.
            type: string
            example: https://mediator.cloud-support.purestorage.com
          mediator_version:
            description: The mediator version.
            type: string
            example: 1.0.0
          source:
            description: The source pod from where data is cloned to create the new pod.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
          space:
            description: |
              Displays provisioned size and physical storage consumption
              information for the sum of all volumes connected to the specified host.
            title: Space
            allOf:
            - $ref: '#/components/schemas/_space'
          time_remaining:
            description: |
              The amount of time left until the destroyed pod is permanently eradicated.
              Measured in milliseconds.
              Before the `time_remaining` period has elapsed, the destroyed pod can be recovered
              by setting `destroyed=false`.
            type: integer
            format: int64
            readOnly: true
    ResourceSpace:
      allOf:
      - $ref: '#/components/schemas/_builtIn'
      - type: object
        properties:
          space:
            description: |
              Displays size and space consumption information.
            title: Space
            allOf:
            - $ref: '#/components/schemas/_space'
          time:
            description: |
              The timestamp of when the data was taken.
              Measured in milliseconds since the UNIX epoch.
            type: integer
            format: int64
            readOnly: true
        x-readOnly: true
    ProtectionGroup:
      allOf:
      - $ref: '#/components/schemas/_resourceNoId'
      - description: |
          A protection group defines a set of either volumes, hosts, or host groups
          (called members) that are protected together through snapshots with
          point-in-time consistency across the member volumes. The members within the
          protection group have common data protection requirements and share the
          same snapshot, replication, and retention schedules.
        type: object
        properties:
          destroyed:
            description: |
              Has this protection group been destroyed?
              To destroy a protection group, patch to `true`.
              To recover a destroyed protection group, patch to `false`.
              If not specified, defaults to `false`.
            type: boolean
          host_count:
            description: Number of hosts in this protection group.
            type: integer
            format: int64
            readOnly: true
            example: 3
          host_group_count:
            description: Number of host groups in this protection group.
            type: integer
            format: int64
            readOnly: true
            example: 3
          is_local:
            description: |
              If set to `true`, the protection group belongs to the local array.
              If set to `false`, the protection group belongs to the remote array.
            type: boolean
            readOnly: true
          pod:
            description: The pod in which the protection group resides.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
          replication_schedule:
            description: The schedule settings for asynchronous replication.
            title: ReplicationSchedule
            allOf:
            - $ref: '#/components/schemas/_replication_schedule'
          snapshot_schedule:
            description: The schedule settings for protection group snapshots.
            title: SnapshotSchedule
            allOf:
            - $ref: '#/components/schemas/_snapshot_schedule'
          source:
            description: The array or pod on which the protection group was created.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
          source_retention:
            description: |
              The retention policy for the source array of the protection group.
            title: RetentionPolicy
            allOf:
            - $ref: '#/components/schemas/_retentionPolicy'
          space:
            description: |
              Returns provisioned size and physical storage consumption data
              for each protection group.
            title: Space
            allOf:
            - $ref: '#/components/schemas/_space'
          target_count:
            description: The number of targets to where this protection group replicates.
            type: integer
            format: int64
            readOnly: true
            example: 3
          target_retention:
            description: |
              The retention policy for the target(s) of the protection group.
            title: RetentionPolicy
            allOf:
            - $ref: '#/components/schemas/_retentionPolicy'
          time_remaining:
            description: |
              The amount of time left until the destroyed protection group is permanently eradicated.
              Measured in milliseconds.
              Before the `time_remaining` period has elapsed, the destroyed protection group
              can be recovered by setting `destroyed=false`.
            type: integer
            format: int64
            readOnly: true
          volume_count:
            description: The number of volumes in the protection group.
            type: integer
            format: int64
            readOnly: true
            example: 3
    ProtectionGroupPerformance:
      allOf:
      - $ref: '#/components/schemas/_builtInResourceNoId'
      - $ref: '#/components/schemas/_aggregate_replication_performance'
      - type: object
        properties:
          time:
            description: |
              The time when the sample performance data was taken.
              Measured in milliseconds since the UNIX epoch.
            type: integer
            format: int64
            readOnly: true
        x-readOnly: true
    ProtectionGroupPerformanceArray:
      allOf:
      - $ref: '#/components/schemas/_builtInResourceNoId'
      - $ref: '#/components/schemas/_aggregate_replication_performance'
      - type: object
        properties:
          source:
            description: The source array from where the data is replicated.
            type: string
            readOnly: true
          target:
            description: The target to where the data is replicated.
            type: string
            readOnly: true
          time:
            description: |
              The time when the sample performance data was taken.
              Measured in milliseconds since the UNIX epoch.
            type: integer
            format: int64
            readOnly: true
        x-readOnly: true
    ProtectionGroupSnapshot:
      allOf:
      - $ref: '#/components/schemas/_resourceNoId'
      - description: |
          A protection group snapshot is a collection of point-in-time consistent
          volume snapshots, for volumes associated with the protection group when the
          snapshot was taken.
        type: object
        properties:
          created:
            description: |
              The snapshot creation time of the original snapshot source.
              Measured in milliseconds since the UNIX epoch.
            type: integer
            format: int64
            readOnly: true
            example: 1503520993
          destroyed:
            description: |
              Returns a value of `true` if the protection group snapshot
              has been destroyed and is pending eradication.
              The `time_remaining` value displays the amount of time left
              until the destroyed snapshot is permanently eradicated.
              Before the `time_remaining` period has elapsed,
              the destroyed snapshot can be recovered
              by setting `destroyed=false`.
              Once the `time_remaining` period has elapsed,
              the snapshot is permanently eradicated and can no longer be recovered.
            type: boolean
          pod:
            description: The pod in which the protection group of the protection group snapshot resides.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
          source:
            description: |
              The original protection group from which this snapshot was taken.
              For a replicated protection group snapshot being viewed on the
              target side, the `source` is the replica protection group.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
          space:
            description: |
              Returns provisioned size and physical storage consumption data
              for each protection group.
            title: Space
            allOf:
            - $ref: '#/components/schemas/_space'
          suffix:
            description: |
              The name suffix appended to the protection group name
              to make up the full protection group snapshot name
              in the form `PGROUP.SUFFIX`.
              If `suffix` is not specified,
              the protection group name is in the form `PGROUP.NNN`,
              where `NNN` is a unique monotonically increasing number.
              If multiple protection group snapshots are created at a time,
              the suffix name is appended to those snapshots.
            type: string
          time_remaining:
            description: |
              The amount of time left until the destroyed snapshot is permanently eradicated.
              Measured in milliseconds.
              Before the `time_remaining` period has elapsed, the destroyed snapshot can be recovered
              by setting `destroyed=false`.
            type: integer
            format: int64
            readOnly: true
    ProtectionGroupTarget:
      type: object
      properties:
        allowed:
          description: |
            If set to `true`, the target array has allowed the source array
            to replicate protection group data to the target array.
            If set to `false`, the target array has not allowed the source array
            to replicate protection group data to the target.
          type: boolean
        protection_group:
          $ref: '#/components/schemas/_referenceNoId'
        target:
          $ref: '#/components/schemas/_referenceNoId'
    RemoteProtectionGroup:
      allOf:
      - $ref: '#/components/schemas/_builtIn'
      - description: |
          A remote protection group represents a protection group that is replicated
          to an offload target.
        type: object
        properties:
          destroyed:
            description: |
              Returns a value of `true` if the remote protection group has been destroyed
              and is pending eradication.
              The `time_remaining` value displays the amount of time left
              until the destroyed remote protection group is permanently eradicated.
              Before the `time_remaining` period has elapsed,
              the destroyed remote protection group can be recovered by setting `destroyed=false`.
              Once the `time_remaining` period has elapsed,
              the remote protection group is permanently eradicated and can no longer be recovered.
            type: boolean
          is_local:
            description: |
              If set to `true`, the location reference is to the local array.
              If set to `false`, the location reference is to a remote location,
              such as a remote array or offload target.
            type: boolean
            readOnly: true
          remote:
            description: |
              The offload target that the remote protection group is on.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
          source:
            description: |
              The array where the remote protection group is replicated from.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
          target_retention:
            description: The retention policy for the remote protection group.
            title: RetentionPolicy
            allOf:
            - $ref: '#/components/schemas/_retentionPolicy'
          time_remaining:
            description: |
              Milliseconds remaining until eradication, if remote protection group
              has been destroyed.
            type: integer
            format: int64
            readOnly: true
    RemoteProtectionGroupSnapshot:
      allOf:
      - $ref: '#/components/schemas/_builtInResourceNoId'
      - description: |
          A remote protection group snapshot is a collection of point-in-time
          consistent volume snapshots, for volumes associated with the remote
          protection group when the snapshot was taken.
        type: object
        properties:
          created:
            description: |
              Creation time of the snapshot on the original source of the snapshot.
              Measured in milliseconds since the UNIX epoch.
            type: integer
            format: int64
            readOnly: true
            example: 1503520993
          destroyed:
            description: |
              Destroyed and pending eradication? If not specified, defaults to false.
            type: boolean
          is_local:
            description: |
              Whether or not this remote protection group snapshot is replicated from
              the current array.
            type: boolean
            readOnly: true
          remote:
            description: |
              The offload target where the remote protection group snapshot is located.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
          source:
            description: |
              The original protection group from which this snapshot was taken.
            title: FixedReferenceNoId
            allOf:
            - $ref: '#/components/schemas/_fixedReferenceNoId'
          suffix:
            description: |
              The suffix that is appended to the `source_name` value to generate the full
              remote protection group snapshot name in the form `PGROUP.SUFFIX`.
              If the suffix is not specified, the system constructs the snapshot name in the form
              `PGROUP.NNN`, where `PGROUP` is the protection group name, and `NNN` is a monotonically
              increasing number.
            type: string
          time_remaining:
            description: |
              Milliseconds remaining until eradication,
              if the snapshot has been destroyed.
            type: integer
            format: int64
            readOnly: true
    RemoteProtectionGroupSnapshotTransfer:
      allOf:
      - $ref: '#/components/schemas/_resourceNoId'
      - $ref: '#/components/schemas/_transfer'
      - description: |
          The transfer statistics for snapshot replication.
        type: object
    RemoteVolumeSnapshot:
      allOf:
      - $ref: '#/components/schemas/_resource'
      - $ref: '#/components/schemas/_snapshot'
      - description: |
          A volume snapshot on a remote target.
        type: object
        properties:
          remote:
            description: |
              Remote target where this volume snapshot is located.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
    RemoteVolumeSnapshotTransfer:
      allOf:
      - $ref: '#/components/schemas/_resource'
      - $ref: '#/components/schemas/_transfer'
      - description: |
          The transfer statistics for snapshot replication data.
        type: object
    Username:
      type: object
      properties:
        username:
          description: The username of the user.
          type: string
          example: pureuser
    Volume:
      allOf:
      - $ref: '#/components/schemas/_volumeCommon'
      - type: object
        properties:
          pod:
            description: A reference to the pod.
            title: Reference
            allOf:
            - $ref: '#/components/schemas/_reference'
          source:
            description: A reference to the originating volume as a result of a volume copy.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
          subtype:
            description: |
              The type of volume.
              Valid values are `protocol_endpoint` and `regular`.
            type: string
            readOnly: true
          volume_group:
            description: A reference to the volume group.
            title: Reference
            allOf:
            - $ref: '#/components/schemas/_reference'
    VolumeGroup:
      allOf:
      - $ref: '#/components/schemas/_resource'
      - description: |
          Volume groups organize FlashArray volumes into logical groupings.
        type: object
        properties:
          destroyed:
            description: |
              Returns a value of `true` if the volume group has been destroyed and is pending eradication.
              The `time_remaining` value displays the amount of time left
              until the destroyed volume group is permanently eradicated.
              Before the `time_remaining` period has elapsed, the destroyed volume group can be recovered
              by setting `destroyed=false`.
              Once the `time_remaining` period has elapsed,
              the volume group is permanently eradicated and can no longer be recovered.
            type: boolean
          qos:
            $ref: '#/components/schemas/_qos'
          space:
            $ref: '#/components/schemas/_space'
          time_remaining:
            description: |
              The amount of time left until the destroyed volume group is permanently eradicated.
              Measured in milliseconds.
              Before the `time_remaining` period has elapsed, the destroyed volume group can be recovered
              by setting `destroyed=false`.
            type: integer
            format: int64
            readOnly: true
          volume_count:
            description: The number of volumes in the volume group.
            type: integer
            format: int64
            readOnly: true
            example: 3
    VolumeGroupPerformance:
      allOf:
      - $ref: '#/components/schemas/_resource'
      - $ref: '#/components/schemas/_performance'
    VolumePerformance:
      allOf:
      - $ref: '#/components/schemas/_resource'
      - $ref: '#/components/schemas/_performance'
    VolumeSnapshot:
      allOf:
      - $ref: '#/components/schemas/_resource'
      - $ref: '#/components/schemas/_snapshot'
      - description: A point-in-time image of the contents of the volume.
        type: object
        properties:
          serial:
            description: |
              A serial number generated by the system when the snapshot is created.
              The serial number is unique across all arrays.
            type: string
            readOnly: true
          space:
            description: |
              Displays size and space consumption information.
            title: Space
            allOf:
            - $ref: '#/components/schemas/_space'
          volume_group:
            description: |
              The volume group to which the volume that is the source of this volume snapshot belongs.
            title: FixedReference
            allOf:
            - $ref: '#/components/schemas/_fixedReference'
    VolumeSnapshotTransfer:
      allOf:
      - $ref: '#/components/schemas/_resource'
      - $ref: '#/components/schemas/_transfer'
      - description: |
          The transfer statistics for snapshot replication data.
        type: object
    Api_versionResponse:
      type: object
      properties:
        version:
          description: A list of supported API versions.
          type: array
          items:
            type: string
          example:
          - "1.0"
          - "1.1"
          - "1.2"
          - "1.3"
          - "1.4"
          - "1.5"
          - "1.6"
          - "1.7"
          - "1.8"
          - "1.9"
          - "1.10"
          - "1.11"
          - "1.12"
          - "1.13"
          - "1.14"
          - "1.15"
          - "1.16"
          - "1.17"
          - "2.0"
    ApiClientPost:
      type: object
      properties:
        access_token_ttl_in_ms:
          description: |
            The TTL (Time To Live) length of time for the exchanged access token.
            Measured in milliseconds. If not specified, defaults to `86400000`.
          type: integer
          format: int64
          example: 15000
          x-minimum: 1000
          x-maximum: 86400000
        issuer:
          description: |
            The name of the identity provider that will be issuing ID Tokens for this API client.
            The `iss` claim in the JWT issued must match this string.
            If not specified, defaults to the API client name.
          type: string
          example: https://purestorage.idp.okta.com
        max_role:
          description: |
            The maximum role allowed for ID Tokens issued by this API client.
            The bearer of an access token will be authorized to perform actions
            within the intersection of this `max_role` and the role of the array
            user specified as the `sub`.
            Valid values are `array_admin`, `storage_admin`, `ops_admin`, and
            `readonly`.
            Users with the `readonly` (Read Only) role can perform operations that convey the
            state of the array. Read Only users cannot alter the state of the array.
            Users with the `ops_admin` (Ops Admin) role can perform the same operations as
            Read Only users plus enable and disable remote assistance sessions. Ops Admin users cannot
            alter the state of the array.
            Users with the `storage_admin` (Storage Admin) role can perform the same
            operations as Read Only users plus storage related operations, such as administering volumes,
            hosts, and host groups.
            Storage Admin users cannot perform operations that deal with global and system configurations.
            Users with the `array_admin` (Array Admin) role can perform the same
            operations as Storage Admin users plus array-wide changes dealing with global and system
            configurations. In other words, Array Admin users can perform all operations.
          type: string
          example: storage_admin
        public_key:
          description: |
            The API client's PEM formatted (Base64 encoded) RSA public key.
            Include the `-----BEGIN PUBLIC KEY-----` and `-----END PUBLIC KEY-----` lines.
          type: string
          example: |
            -----BEGIN PUBLIC KEY-----
            MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEArSe6chh1JzME9svOKjU0
            eKTm8S23Ok3Vr2bWuPri/YHfLrlnRwWoCt+st0/BebKSJ+fQUWOaLlqpZQKpI8oR
            gJ9sWmwGibVG8cTuz7XMkskx9bsm/bjIenuB4W+s3g0BCsi9930mfdKgJgFzY69O
            nLh7d7hAFcmhSJa945PryQZpvJ/U4Ue5F4d+WXgEJ0SoSRaZ6bbeMPhcbMHTzTum
            2ZrPBkK5cqPYitaso6BXeAlqNQPw4Kbu4Ugm0CTogrtImkwoonWDDP34XMOq+u7q
            sNTbJSvDKMTM1RPPrTWCaLiuZkdLVEVesZ9/8+XUMIgBTElwQJDCAQer03MJzqRr
            1eCZGgLfDuYqwMG2MFaAX7kgqBwwyqRTd6MxaQxt2nkdfwiXSY71llzEQ23g3T+1
            64zjwAL5f+dtu8PkGF7IdU2T8P2Qk9bG9pckwZHWYkBK77BAk5jbmSzsKGZgRb2R
            1E+TWDKIaveFhQp251j/C5wkZwMXgjOzN+BOPo+OiLBGUl+jRybWA9f7Vq1MEdf6
            SEdLiqYrXcZERkYBMieLXAfdtaztAIb96cUu+OKMSLDk+D0GHkUfm7lEbDK3ew1+
            D6z+BnxDyH6oqZzz4lS2kPLBLsc+6pdTGuKLf0S9YuLiqJe659AdwU8+X/3KtwNd
            FVJSaxdFbWx0nj3hJqFkIO8CAwEAAQ==
            -----END PUBLIC KEY-----
    ApiClientPatch:
      type: object
      properties:
        enabled:
          description: |
            Returns a value of `true` if the API client is permitted to exchange ID
            tokens for access tokens.
            API clients are disabled by default.
          type: boolean
          example: true
    ApiClientGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/ApiClientResponse'
    ApiClientResponse:
      type: object
      properties:
        items:
          description: |
            Returns a list of all items after filtering.
            The values are displayed for each name where meaningful.
          type: array
          items:
            $ref: '#/components/schemas/ApiClient'
    ConnectionPost:
      type: object
      properties:
        lun:
          description: |
            The logical unit number (LUN) by which the specified hosts
            are to address the specified volume. If the LUN is not specified,
            the system automatically assigns a LUN to the connection.
            To automatically assign a LUN to a private connection,
            the system starts at LUN `1` and counts up to the maximum LUN `4095`,
            assigning the first available LUN to the connection.
            For shared connections, the system starts at LUN `254` and
            counts down to the minimum LUN `1`, assigning the first available LUN
            to the connection. If all LUNs in the `[1...254]` range are taken,
            the system starts at LUN `255` and counts up to the maximum LUN `4095`,
            assigning the first available LUN to the connection.
          type: integer
          format: int32
          minimum: 1
          maximum: 4095
          example: 7
        protocol_endpoint:
          description: |
            A protocol endpoint (also known as a conglomerate volume) which acts as a proxy through which
            virtual volumes are created and then connected to VMware ESXi hosts or host groups.
            The protocol endpoint itself does not serve I/Os; instead,
            its job is to form connections between FlashArray volumes and ESXi hosts and host groups.
          title: Reference
          allOf:
          - $ref: '#/components/schemas/_reference'
    ConnectionGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/ConnectionResponse'
    ConnectionResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Connection'
    HostGroupPatch:
      allOf:
      - $ref: '#/components/schemas/_newName'
    HostGroupGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/HostGroupResponse'
    HostGroupResponse:
      type: object
      properties:
        items:
          description: |
            Returns a list of all items after filtering.
            The values are displayed for each name where meaningful.
          type: array
          items:
            $ref: '#/components/schemas/HostGroup'
    MemberNoIdAllGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/MemberNoIdAllResponse'
    MemberNoIdAllResponse:
      type: object
      properties:
        items:
          description: |
            Returns a list of all items after filtering.
            The values are displayed for each name where meaningful.
          type: array
          items:
            $ref: '#/components/schemas/MemberNoIdAll'
    ResourcePerformanceNoIdGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - type: object
        properties:
          items:
            description: |
              Performance data.
              If `total_only=true`, the `items` list will be empty.
            type: array
            items:
              $ref: '#/components/schemas/ResourcePerformanceNoId'
          total:
            description: |
              The aggregate value of all items after filtering.
              Where it makes more sense, the average value is displayed instead.
              The values are displayed for each field where meaningful.
            type: array
            items:
              $ref: '#/components/schemas/ResourcePerformanceNoId'
    ResourcePerformanceNoIdByArrayGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - type: object
        properties:
          items:
            description: |
              Performance data, broken down by array.
              If `total_only=true`, the `items` list will be empty.
            type: array
            items:
              $ref: '#/components/schemas/ResourcePerformanceNoIdByArray'
          total:
            description: |
              The aggregate value of all items after filtering.
              Where it makes more sense, the average value is displayed instead.
              The values are displayed for each field where meaningful.
            type: array
            items:
              $ref: '#/components/schemas/ResourcePerformanceNoIdByArray'
    ResourceSpaceNoIdGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/ResourceSpaceNoId'
    HostPost:
      type: object
      properties:
        chap:
          $ref: '#/components/schemas/_chap'
        iqns:
          description: |
            The iSCSI qualified name (IQN) associated with the host.
          type: array
          items:
            type: string
            example: iqn.2010-06.com.purestorage:linux.393d930077be2977
        nqns:
          description: The NVMe Qualified Name (NQN) associated with the host.
          type: array
          items:
            type: string
            example: nqn.2010-06.com.purestorage:flasharray.512f7bb185978505
        personality:
          description: |
            Determines how the system tunes the array to ensure that it works optimally with the host.
            Set `personality` to the name of the host operating system or virtual memory system.
            Valid values are `aix`, `esxi`, `hitachi-vsp`, `hpux`,
            `oracle-vm-server`, `solaris`, and `vms`.
            If your system is not listed as one of the valid host personalities, do not set the option.
            By default, the personality is not set.
          type: string
        preferred_arrays:
          description: |
            For synchronous replication configurations, sets a host's preferred array to specify which
            array exposes active/optimized paths to that host.
            Enter multiple preferred arrays in comma-separated format.
            If a preferred array is set for a host,
            then the other arrays in the same pod will expose active/non-optimized paths to that host.
            If the host is in a host group, `preferred_arrays` cannot be set because host groups
            have their own preferred arrays.
            On a preferred array of a certain host, all the paths on all the ports
            (for both the primary and secondary controllers) are set up as A/O (active/optimized) paths,
            while on a non-preferred array, all the paths are A/N (Active/Non-optimized) paths.
          type: array
          items:
            $ref: '#/components/schemas/_reference'
        wwns:
          description: The Fibre Channel World Wide Name (WWN) associated with the host.
          type: array
          items:
            type: string
            example: 52:4A:93:70:4E:E5:68:00
    HostPatch:
      allOf:
      - $ref: '#/components/schemas/_newName'
      - type: object
        properties:
          add_iqns:
            description: |
              Adds the specified iSCSI Qualified Names (IQNs)
              to those already associated with the specified host.
            type: array
            items:
              type: string
              description: IQNs to add.
              example: iqn.2010-06.com.purestorage:linux.393d930077be2977
          add_nqns:
            description: |
              Adds the specified NVMe Qualified Names (NQNs)
              to those already associated with the specified host.
            type: array
            items:
              type: string
              description: NQNs to add.
              example: nqn.2010-06.com.purestorage:flasharray.512f7bb185978505
          add_wwns:
            description: |
              Adds the specified Fibre Channel World Wide Names (WWNs)
              to those already associated with the specified host.
            type: array
            items:
              type: string
              description: WWNs to add.
              example: 52:4A:93:70:4E:E5:68:00
          chap:
            $ref: '#/components/schemas/_chap'
          host_group:
            description: The host group to which the host should be associated.
            title: ReferenceNoId
            allOf:
            - $ref: '#/components/schemas/_referenceNoId'
          iqns:
            description: |
              The iSCSI qualified name (IQN) associated with the host.
            type: array
            items:
              type: string
              example: iqn.2010-06.com.purestorage:linux.393d930077be2977
          nqns:
            description: The NVMe Qualified Name (NQN) associated with the host.
            type: array
            items:
              type: string
              example: nqn.2010-06.com.purestorage:flasharray.512f7bb185978505
          personality:
            description: |
              Determines how the system tunes the array to ensure that it works optimally with the host.
              Set `personality` to the name of the host operating system or virtual memory system.
              Valid values are `aix`, `esxi`, `hitachi-vsp`, `hpux`,
              `oracle-vm-server`, `solaris`, and `vms`.
              If your system is not listed as one of the valid host personalities, do not set the option.
              By default, the personality is not set.
            type: string
          preferred_arrays:
            description: |
              For synchronous replication configurations, sets a host's preferred array to specify which
              array exposes active/optimized paths to that host.
              Enter multiple preferred arrays in comma-separated format.
              If a preferred array is set for a host,
              then the other arrays in the same pod will expose active/non-optimized paths to that host.
              If the host is in a host group, `preferred_arrays` cannot be set because host groups
              have their own preferred arrays.
              On a preferred array of a certain host, all the paths on all the ports
              (for both the primary and secondary controllers) are set up as A/O (active/optimized) paths,
              while on a non-preferred array, all the paths are A/N (Active/Non-optimized) paths.
            type: array
            items:
              $ref: '#/components/schemas/_reference'
          remove_iqns:
            description: |
              Disassociates the specified iSCSI Qualified Names (IQNs) from the specified host.
            type: array
            items:
              type: string
              description: IQNs to remove.
              example: iqn.2010-06.com.purestorage:linux.393d930077be2977
          remove_nqns:
            description: |
              Disassociates the specified NVMe Qualified Names (NQNs) from the specified host.
            type: array
            items:
              type: string
              description: NQNs to remove.
              example: nqn.2010-06.com.purestorage:flasharray.512f7bb185978505
          remove_wwns:
            description: |
              Disassociates the specified Fibre Channel World Wide Names (WWNs) from the specified host.
            type: array
            items:
              type: string
              description: WWNs to remove.
              example: 52:4A:93:70:4E:E5:68:00
          wwns:
            description: The Fibre Channel World Wide Name (WWN) associated with the host.
            type: array
            items:
              type: string
              example: 52:4A:93:70:4E:E5:68:00
    HostGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/HostResponse'
    HostResponse:
      type: object
      properties:
        items:
          description: |
            Returns a list of all items after filtering.
            The values are displayed for each name where meaningful.
          type: array
          items:
            $ref: '#/components/schemas/Host'
    UsernameResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Username'
    OffloadPost:
      type: object
      properties:
        azure:
          description: The Microsoft Azure Blob storage settings.
          title: OffloadAzure
          allOf:
          - $ref: '#/components/schemas/_offload_azure'
        nfs:
          description: |-
            The NFS storage settings.
            Deprecated from version 6.6.0 onwards - Contact support for additional information.
          title: OffloadNfs
          allOf:
          - $ref: '#/components/schemas/_offload_nfs'
        s3:
          description: The Amazon S3 storage settings.
          title: OffloadS3
          allOf:
          - $ref: '#/components/schemas/_offload_s3'
    OffloadGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/OffloadResponse'
      - type: object
        properties:
          total:
            description: |
              The aggregate value of all items after filtering.
              Where it makes more sense, the average value is displayed instead.
              The values are displayed for each field where meaningful.
            type: array
            items:
              $ref: '#/components/schemas/Offload'
    OffloadResponse:
      type: object
      properties:
        items:
          description: |
            Returns a list of all items after filtering.
            The values are displayed for each name where meaningful.
          type: array
          items:
            $ref: '#/components/schemas/Offload'
    PodPost:
      allOf:
      - $ref: '#/components/schemas/_builtIn'
      - description: |
          A pod is an administrative domain, a data container, and a namespace for
          volumes and protection groups.
        type: object
        properties:
          failover_preferences:
            description: |
              Determines which array within a stretched pod should be given priority to stay online
              should the arrays ever lose contact with each other. The current array and
              any peer arrays that are connected to the current array for synchronous replication can be
              added to a pod for failover preference.
              By default, `failover_preferences=null`,
              meaning no arrays have been configured for failover preference.
              Enter multiple arrays in comma-separated format.
              To clear the list of failover preferences, set to an empty list `[]`.
            type: array
            items:
              $ref: '#/components/schemas/_reference'
          source:
            description: The source pod from where data is cloned to create the new pod.
            title: Reference
            allOf:
            - $ref: '#/components/schemas/_reference'
    PodPatch:
      allOf:
      - $ref: '#/components/schemas/_resource'
      - description: |
          A pod is an administrative domain, a data container, and a namespace for
          volumes and protection groups.
        type: object
        properties:
          destroyed:
            description: |
              If set to `true`, the pod has been destroyed and is pending eradication.
              The `time_remaining` value displays the amount of time left
              until the destroyed pod is permanently eradicated.
              A pod can only be destroyed if it is empty, so before destroying a pod,
              ensure all volumes and protection groups inside the pod
              have been either moved out of the pod or destroyed.
              A stretched pod cannot be destroyed unless you unstretch it first.
              Before the `time_remaining` period has elapsed, the destroyed pod can be recovered
              by setting `destroyed=false`.
              Once the `time_remaining` period has elapsed,
              the pod is permanently eradicated and can no longer be recovered.
            type: boolean
          failover_preferences:
            description: |
              Determines which array within a stretched pod should be given priority to stay online
              should the arrays ever lose contact with each other. The current array and
              any peer arrays that are connected to the current array for synchronous replication can be
              added to a pod for failover preference.
              By default, `failover_preferences=null`,
              meaning no arrays have been configured for failover preference.
              Enter multiple arrays in comma-separated format.
            type: array
            items:
              $ref: '#/components/schemas/_reference'
          mediator:
            description: |
              Sets the URL of the mediator for this pod, replacing the URL of the current mediator.
              By default, the Pure1 Cloud Mediator (`purestorage`) serves as the mediator.
            type: string
            example: https://mediator.cloud-support.purestorage.com
    PodGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/PodResponse'
      - type: object
        properties:
          total:
            description: |
              The aggregate value of all items after filtering.
              Where it makes more sense, the average value is displayed instead.
              The values are displayed for each field where meaningful.
            type: array
            items:
              $ref: '#/components/schemas/Pod'
    PodResponse:
      type: object
      properties:
        items:
          description: |
            Returns a list of all items after filtering.
            The values are displayed for each name where meaningful.
          type: array
          items:
            $ref: '#/components/schemas/Pod'
    MemberGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/MemberResponse'
    MemberResponse:
      type: object
      properties:
        items:
          description: |
            Returns a list of all items after filtering.
            The values are displayed for each name where meaningful.
            If `total_only=true`, the `items` list will be empty.
          type: array
          items:
            $ref: '#/components/schemas/Member'
    ResourcePerformanceGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - type: object
        properties:
          items:
            description: |
              Performance data.
              If `total_only=true`, the `items` list will be empty.
            type: array
            items:
              $ref: '#/components/schemas/ResourcePerformance'
          total:
            description: |
              The aggregate value of all items after filtering.
              Where it makes more sense, the average value is displayed instead.
              The values are displayed for each field where meaningful.
            type: array
            items:
              $ref: '#/components/schemas/ResourcePerformance'
    ResourcePerformanceByArrayGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - type: object
        properties:
          items:
            description: |
              Performance data, broken down by array.
              If `total_only=true`, the `items` list will be empty.
            type: array
            items:
              $ref: '#/components/schemas/ResourcePerformanceByArray'
          total:
            description: |
              The aggregate value of all items after filtering.
              Where it makes more sense, the average value is displayed instead.
              The values are displayed for each field where meaningful.
            type: array
            items:
              $ref: '#/components/schemas/ResourcePerformanceByArray'
    ResourceSpaceGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - type: object
        properties:
          items:
            description: |
              Returns a list of all items after filtering.
              The values are displayed for each name where meaningful.
              If `total_only=true`, the `items` list will be empty.
            type: array
            items:
              $ref: '#/components/schemas/ResourceSpace'
          total:
            description: |
              The aggregate value of all items after filtering.
              Where it makes more sense, the average value is displayed instead.
              The values are displayed for each field where meaningful.
            type: array
            items:
              $ref: '#/components/schemas/ResourceSpace'
    ProtectionGroupGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/ProtectionGroupResponse'
      - type: object
        properties:
          total:
            description: |
              The aggregate value of all items after filtering.
              Where it makes more sense, the average value is displayed instead.
              The values are displayed for each field where meaningful.
            type: array
            items:
              $ref: '#/components/schemas/ProtectionGroup'
    ProtectionGroupResponse:
      type: object
      properties:
        items:
          description: |
            Returns a list of all items after filtering.
            The values are displayed for each name where meaningful.
            If `total_only=true`, the `items` list will be empty.
          type: array
          items:
            $ref: '#/components/schemas/ProtectionGroup'
    ProtectionGroupPerformanceResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - type: object
        properties:
          items:
            description: A list of protection group performance objects.
            type: array
            items:
              $ref: '#/components/schemas/ProtectionGroupPerformance'
    ProtectionGroupPerformanceArrayResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - type: object
        properties:
          items:
            description: |
              List performance data, broken down by array.
            type: array
            items:
              $ref: '#/components/schemas/ProtectionGroupPerformanceArray'
    TargetProtectionGroupPostPatch:
      type: object
      properties:
        allowed:
          description: |
            If set to `true`, the target array has allowed the source array
            to replicate protection group data to the target array.
            If set to `false`, the target array has not allowed the source array
            to replicate protection group data to the target. target-protection-group
          type: boolean
          example: true
        protection_group:
          $ref: '#/components/schemas/_fixedReferenceNoId'
        target:
          $ref: '#/components/schemas/_fixedReferenceNoId'
    ProtectionGroupTargetGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/ProtectionGroupTargetResponse'
    ProtectionGroupTargetResponse:
      type: object
      properties:
        items:
          description: |
            Returns a list of all items after filtering.
            The values are displayed for each name where meaningful.
          type: array
          items:
            $ref: '#/components/schemas/TargetProtectionGroup'
    ProtectionGroupSnapshotPost:
      allOf:
      - $ref: '#/components/schemas/_builtIn'
      - $ref: '#/components/schemas/ProtectionGroupSnapshot'
      - type: object
        properties:
          destroyed:
            type: boolean
            readOnly: true
    ProtectionGroupSnapshotPatch:
      allOf:
      - $ref: '#/components/schemas/ProtectionGroupSnapshot'
      - type: object
        properties:
          suffix:
            type: string
            readOnly: true
    ProtectionGroupSnapshotGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/ProtectionGroupSnapshotResponse'
      - type: object
        properties:
          total:
            description: |
              The aggregate value of all items after filtering.
              Where it makes more sense, the average value is displayed instead.
              The values are displayed for each field where meaningful.
            type: array
            items:
              $ref: '#/components/schemas/ProtectionGroupSnapshot'
    ProtectionGroupSnapshotResponse:
      type: object
      properties:
        items:
          description: |
            Returns a list of all items after filtering.
            The values are displayed for each name where meaningful.
          type: array
          items:
            $ref: '#/components/schemas/ProtectionGroupSnapshot'
    ProtectionGroupSnapshotTransferGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/ProtectionGroupSnapshotTransferResponse'
      - type: object
        properties:
          total:
            description: |
              The aggregate value of all items after filtering.
              Where it makes more sense, the average value is displayed instead.
              The values are displayed for each field where meaningful.
            type: array
            items:
              $ref: '#/components/schemas/ProtectionGroupSnapshotTransfer'
    RemotePodsResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - type: object
        properties:
          items:
            description: |
              Returns a list of all items after filtering.
              The values are displayed for each name where meaningful.
            type: array
            items:
              $ref: '#/components/schemas/RemotePod'
    RemoteProtectionGroupGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/RemoteProtectionGroupResponse'
    RemoteProtectionGroupResponse:
      type: object
      properties:
        items:
          description: |
            Returns a list of all items after filtering.
            The values are displayed for each name where meaningful.
          type: array
          items:
            $ref: '#/components/schemas/RemoteProtectionGroup'
    _destroyedPatchPost:
      type: object
      properties:
        destroyed:
          description: |
            If set to `true`, destroys a resource. Once set to `true`,
            the `time_remaining` value will display the amount of time left
            until the destroyed resource is permanently eradicated.
            Before the `time_remaining` period has elapsed, the destroyed resource
            can be recovered by setting `destroyed=false`.
            Once the `time_remaining` period has elapsed,
            the resource is permanently eradicated and can no longer be recovered.
          type: boolean
    RemoteProtectionGroupSnapshotGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/RemoteProtectionGroupSnapshotResponse'
    RemoteProtectionGroupSnapshotResponse:
      type: object
      properties:
        items:
          description: |
            Returns a list of all items after filtering.
            The values are displayed for each name where meaningful.
          type: array
          items:
            $ref: '#/components/schemas/RemoteProtectionGroupSnapshot'
    RemoteProtectionGroupSnapshotTransferGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/RemoteProtectionGroupSnapshotTransferResponse'
      - type: object
        properties:
          total:
            description: |
              The aggregate value of all items after filtering.
              Where it makes more sense, the average value is displayed instead.
              The values are displayed for each field where meaningful.
            type: array
            items:
              $ref: '#/components/schemas/RemoteProtectionGroupSnapshotTransfer'
    RemoteVolumeSnapshotGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/RemoteVolumeSnapshotResponse'
    RemoteVolumeSnapshotTransferGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/RemoteVolumeSnapshotTransferResponse'
      - type: object
        properties:
          total:
            description: |
              The aggregate value of all items after filtering.
              Where it makes more sense, the average value is displayed instead.
              The values are displayed for each field where meaningful.
            type: array
            items:
              $ref: '#/components/schemas/RemoteVolumeSnapshotTransfer'
    VolumePost:
      allOf:
      - $ref: '#/components/schemas/_destroyedPatchPost'
      - type: object
        properties:
          provisioned:
            description: |
              Sets the virtual size of the volume. Measured in bytes.
            type: integer
            format: int64
            maximum: 4503599627370496
          qos:
            description: |
              Sets QoS limits.
            title: Qos
            allOf:
            - $ref: '#/components/schemas/_qos'
          source:
            description: The source volume of a volume copy.
            title: Reference
            allOf:
            - $ref: '#/components/schemas/_reference'
          subtype:
            description: |
              The type of volume.
              Valid values are `protocol_endpoint` and `regular`.
            type: string
    VolumePatch:
      allOf:
      - $ref: '#/components/schemas/_destroyedPatchPost'
      - $ref: '#/components/schemas/_newName'
      - type: object
        properties:
          pod:
            description: Moves the volume into the specified pod.
            title: Reference
            allOf:
            - $ref: '#/components/schemas/_reference'
          provisioned:
            description: |
              Updates the virtual size of the volume. Measured in bytes.
            type: integer
            format: int64
            maximum: 4503599627370496
          qos:
            description: |
              Sets QoS limits.
            title: Qos
            allOf:
            - $ref: '#/components/schemas/_qos'
          volume_group:
            description: Adds the volume to the specified volume group.
            title: Reference
            allOf:
            - $ref: '#/components/schemas/_reference'
    VolumeGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/VolumeResponse'
      - type: object
        properties:
          total:
            description: |
              The aggregate value of all items after filtering.
              Where it makes more sense, the average value is displayed instead.
              The values are displayed for each field where meaningful.
            type: array
            items:
              $ref: '#/components/schemas/Volume'
    VolumeResponse:
      type: object
      properties:
        items:
          description: |
            Returns a list of all items after filtering.
            The values are displayed for each name where meaningful.
            If `total_only=true`, the `items` list will be empty.
          type: array
          items:
            $ref: '#/components/schemas/Volume'
    VolumeGroupPost:
      allOf:
      - $ref: '#/components/schemas/_builtIn'
      - $ref: '#/components/schemas/VolumeGroup'
      - type: object
        properties:
          destroyed:
            description: |
              Has this volume group been destroyed? To destroy a volume group, patch
              to `true`. To recover a destroyed volume group, patch to `false`. If not
              specified, defaults to `false`.
            type: boolean
            readOnly: true
    VolumeGroupGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/VolumeGroupResponse'
      - type: object
        properties:
          total:
            description: |
              The aggregate value of all items after filtering.
              Where it makes more sense, the average value is displayed instead.
              The values are displayed for each field where meaningful.
            type: array
            items:
              $ref: '#/components/schemas/VolumeGroup'
    VolumeGroupResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/VolumeGroup'
    VolumeSnapshotPost:
      allOf:
      - $ref: '#/components/schemas/_destroyedPatchPost'
      - type: object
        properties:
          suffix:
            description: |
              The suffix that is appended to the `source_name` value to generate the
              full volume snapshot name in the form `VOL.SUFFIX`.
              If the suffix is not specified, the system constructs the snapshot name
              in the form `VOL.NNN`, where `VOL` is the volume name, and `NNN` is a
              monotonically increasing number.
            type: string
    VolumeSnapshotPatch:
      allOf:
      - $ref: '#/components/schemas/_destroyedPatchPost'
      - $ref: '#/components/schemas/_newName'
    VolumeSnapshotGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/VolumeSnapshotResponse'
      - type: object
        properties:
          total:
            description: |
              The aggregate value of all items after filtering.
              Where it makes more sense, the average value is displayed instead.
              The values are displayed for each field where meaningful.
            type: array
            items:
              $ref: '#/components/schemas/VolumeSnapshot'
    VolumeSnapshotResponse:
      type: object
      properties:
        items:
          description: |
            Returns a list of all items after filtering.
            The values are displayed for each name where meaningful.
            If `total_only=true`, the `items` list will be empty.
          type: array
          items:
            $ref: '#/components/schemas/VolumeSnapshot'
    VolumeSnapshotTransferGetResponse:
      allOf:
      - $ref: '#/components/schemas/PageInfo'
      - $ref: '#/components/schemas/VolumeSnapshotTransferResponse'
      - type: object
        properties:
          total:
            description: |
              The aggregate value of all items after filtering.
              Where it makes more sense, the average value is displayed instead.
              The values are displayed for each field where meaningful.
            type: array
            items:
              $ref: '#/components/schemas/VolumeSnapshotTransfer'
    _referenceNoId:
      type: object
      properties:
        name:
          description: |
            The resource name, such as volume name, pod name, snapshot name, and so on.
          type: string
    _reference:
      type: object
      properties:
        id:
          description: |
            A globally unique, system-generated ID.
            The ID cannot be modified.
          type: string
        name:
          description: |
            The resource name,
            such as volume name, pod name, snapshot name, and so on.
          type: string
    _fixedReference:
      type: object
      properties:
        id:
          description: |
            A globally unique, system-generated ID.
            The ID cannot be modified.
          type: string
          readOnly: true
        name:
          description: |
            The resource name,
            such as volume name, pod name, snapshot name, and so on.
          type: string
          readOnly: true
      x-readOnly: true
    _resource:
      description: |
        An ordinary (as opposed to built-in) resource that can be created, named,
        renamed or deleted by the user. This might be a virtual resource (e.g., a
        volume), or correspond to something in the environment, like a host or a
        server.
      type: object
      properties:
        id:
          description: |
            A globally unique, system-generated ID.
            The ID cannot be modified and cannot refer to another resource.
          type: string
          readOnly: true
        name:
          description: |
            A user-specified name.
            The name must be locally unique and can be changed.
          type: string
    _performance:
      type: object
      properties:
        bytes_per_mirrored_write:
          description: |
            The average I/O size per mirrored write, measured in bytes.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        bytes_per_op:
          description: |
            The average I/O size for both read and write (all) operations.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        bytes_per_read:
          description: "The average I/O size per read, measured in bytes."
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        bytes_per_write:
          description: "The average I/O size per write, measured in bytes."
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        mirrored_write_bytes_per_sec:
          description: |
            The number of mirrored bytes written per second.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        mirrored_writes_per_sec:
          description: |
            The number of mirrored writes per second.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        qos_rate_limit_usec_per_mirrored_write_op:
          description: |
            The average time it takes the array to process a mirrored I/O write request,
            measured in microseconds.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        qos_rate_limit_usec_per_read_op:
          description: |
            The average time spent waiting due to QoS rate limiting for a read request,
            measured in microseconds.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        qos_rate_limit_usec_per_write_op:
          description: |
            The average time that a write I/O request spends waiting
            as a result of the volume reaching its QoS bandwidth limit,
            measured in microseconds.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        queue_usec_per_mirrored_write_op:
          description: |
            The average time that a mirrored write I/O request spends in the array waiting to be served,
            measured in microseconds.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        queue_usec_per_read_op:
          description: |
            The average time that a read I/O request spends in the array waiting to be served,
            measured in microseconds.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        queue_usec_per_write_op:
          description: |
            The average time that a write I/O request spends in the array waiting to be served,
            measured in microseconds.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        read_bytes_per_sec:
          description: The number of bytes read per second.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        reads_per_sec:
          description: The number of read requests processed per second.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        san_usec_per_mirrored_write_op:
          description: |
            The average time required to transfer data
            from the initiator to the array for a mirrored write request,
            measured in microseconds.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        san_usec_per_read_op:
          description: |
            The average time required to transfer data from the array to the initiator for a read request,
            measured in microseconds.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        san_usec_per_write_op:
          description: |
            The average time required to transfer data
            from the initiator to the array for a write request,
            measured in microseconds.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        service_usec_per_mirrored_write_op:
          description: |
            The average time required for the array to service a mirrored write request,
            measured in microseconds.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        service_usec_per_read_op:
          description: |
            The average time required for the array to service a read request,
            measured in microseconds.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        service_usec_per_write_op:
          description: |
            The average time required for the array to service a write request,
            measured in microseconds.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        time:
          description: |
            The time when the sample performance data was taken,
            measured in milliseconds since the UNIX epoch.
          type: integer
          format: int64
          readOnly: true
        usec_per_mirrored_write_op:
          description: |
            The average time it takes the array to process a mirrored I/O write request,
            measured in microseconds.
            Beginning in Purity 6.3.14 and 6.4.10 and later,
            including later major versions (6.5.x, 6.6.x and beyond),
            queue time is included.
            The average time does not include SAN time or QoS rate limit time.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        usec_per_read_op:
          description: |
            The average time it takes the array to process an I/O read request,
            measured in microseconds.
            Beginning in Purity 6.3.14 and 6.4.10 and later,
            including later major versions (6.5.x, 6.6.x and beyond),
            queue time is included.
            The average time does not include SAN time or QoS rate limit time.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        usec_per_write_op:
          description: |
            The average time it takes the array to process an I/O write request,
            measured in microseconds.
            Beginning in Purity 6.3.14 and 6.4.10 and later,
            including later major versions (6.5.x, 6.6.x and beyond),
            queue time is included.
            The average time does not include SAN time or QoS rate limit time.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        write_bytes_per_sec:
          description: The number of bytes written per second.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        writes_per_sec:
          description: The number of write requests processed per second.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
      x-readOnly: true
    _builtInResourceNoId:
      description: |
        A built-in resource. Many are singletons predefined by Purity (e.g., support
        settings). Some correspond to a piece of software, like an app, or hardware,
        like a controller. Others are created by the system in response to some event
        (e.g., alerts, audit records).

        Typically, a user can't create, delete or rename a built-in resource. A few
        can be created or deleted, but not renamed because the names are meaningful
        to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      type: object
      properties:
        name:
          description: |
            A locally unique, system-generated name. The name cannot be modified.
          type: string
          readOnly: true
    _space:
      type: object
      properties:
        data_reduction:
          description: |
            The ratio of mapped sectors within a volume versus
            the amount of physical space the data occupies after data compression and deduplication.
            The data reduction ratio does not include thin provisioning savings.
            For example, a data reduction ratio of 5&#58;1 means that
            for every 5 MB the host writes to the array, 1 MB is stored on the array's flash modules.
          type: number
          format: float
          readOnly: true
        shared:
          description: |
            The physical space occupied by deduplicated data, meaning that the space is shared with other
            volumes and snapshots as a result of data deduplication.
            Measured in bytes.
            On Evergreen//One arrays, this is the effective space contributed by data that is not unique
            to a specific volume, managed directory, or snapshot, measured in bytes.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
          example: 111863360624
        snapshots:
          description: |
            The physical space occupied by data unique to one or more snapshots.
            Measured in bytes.
            On Evergreen//One arrays, this is the effective space contributed by data unique to one or
            more snapshots, measured in bytes.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        system:
          description: |
            The physical space occupied by internal array metadata. Measured in bytes.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        thin_provisioning:
          description: |
            The percentage of volume sectors that do not contain host-written data
            because the hosts have not written data to them or the sectors have been explicitly trimmed.
          type: number
          format: float
          minimum: 0
          maximum: 1
          readOnly: true
        total_physical:
          description: |
            The total physical space occupied by system, shared space, volume, and snapshot data.
            Measured in bytes.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        total_provisioned:
          description: |
            For a single volume, the provisioned size of the volume.
            For all other resources, the total provisioned size of all volumes
            that are connected to or are inside the resource.
            Represents storage capacity reported to hosts.
            Measured in bytes.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
          example: 19937690345472
        total_reduction:
          description: |+
            The ratio of provisioned sectors within a volume versus
            the amount of physical space the data occupies
            after reduction via data compression and deduplication
            and with thin provisioning savings.
            Total reduction is data reduction with thin provisioning savings.
            For example, a total reduction ratio of 10&#58;1 means that
            for every 10 MB of provisioned space,
            1 MB is stored on the array's flash modules.

          type: number
          format: float
          readOnly: true
        unique:
          description: |
            The unique physical space occupied by customer data.
            Unique physical space does not include shared space, snapshots, and internal array metadata.
            Measured in bytes.
            On Evergreen//One arrays, this is the effective space contributed by unique customer data,
            measured in bytes.
            Unique data does not include shared space, snapshots, and internal array metadata.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
        virtual:
          description: |
            The amount of logically written data that a volume or a snapshot references.
            Measured in bytes.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
    _resourceNoId:
      description: |
        An ordinary (as opposed to built-in) resource that can be created, named,
        renamed or deleted by the user. This might be a virtual resource (e.g., a
        volume), or correspond to something in the environment, like a host or a
        server.
      type: object
      properties:
        name:
          description: |
            A user-specified name.
            The name must be locally unique and can be changed.
          type: string
    _pod_array_status:
      allOf:
      - $ref: '#/components/schemas/_reference'
      - type: object
        properties:
          frozen_at:
            description: |
              The timestamp of when the data on the pod was frozen when the array went offline.
              Measured in milliseconds since the UNIX epoch.
              Also known as the recovery point.
              If the pod is in sync, a value of `null` will be returned.
            type: integer
            format: int64
            readOnly: true
            example: 1492662000
          mediator_status:
            description: |
              The status of the mediator,
              which determines whether it is available to mediate a high availability event.
              Valid values are `flummoxed`, `online`, `unknown`, and `unreachable`.
              Only mediators in the `online` status can mediate high availability events.
              If set to `flummoxed`, the array can reach a mediator, but it is talking to the wrong one.
              Verify that the DNS in the environment is properly configured.
              This status might also appear if the pod has been offline on one array
              for an extended period of time and the peer array is unreachable.
              If set to `online`, the array is successfully communicating with the mediator,
              and the mediator is available to mediate a high availability event.
              If set to `unreachable`, the array cannot reach the mediator,
              either due to network issues or because the mediator is down.
              When a mediator is unreachable, synchronous replication continues to function
              provided all arrays are healthy and communicating,
              but a high availability event without mediator access can result in an outage.
            type: string
            readOnly: true
          pre_elected:
            description: |
              If set to `true`, the array has been pre-elected to remain online
              in the rare event that the mediator is inaccessible on both arrays within the stretched pod,
              and then later, the arrays within the stretched pod become disconnected from each other.
              If set to `false`, either the array has been pre-elected to remain offline
              while its peer array remains online, or pre-election is not in effect.
              One and only one array within each pod is pre-elected at a given point in time,
              so while a pre-elected array is keeping the pod online,
              the pod on its non-elected peer array remains offline during the
              communication failure. Users cannot pre-elect arrays.
            type: boolean
            readOnly: true
          progress:
            description: |
              The percentage progress of the pod resyncing process for this array.
              The percentage is displayed as a decimal value, starting at 0.00 and ending at 1.00.
            type: number
            format: float
            readOnly: true
            example: 0.66
          status:
            description: |
              The status of the array within the stretched pod.
              Valid values are `offline`, `online`, `resyncing`, `suspended`, and `unknown`.
              If set to `offline`, the array is experiencing problems
              and may not have the latest pod data.
              The array cannot handle I/O to the pod and cannot take over
              during a high availability event.
              If set to `online`, the array is online and has the latest pod data.
              The array can handle I/O to the pod and take over during a high availability event.
              If set to `suspended`, the array is experiencing a short connection glitch of the pod.
              This is a temporary status and would transition to either `online` or `offline` soon.
              `suspended` is a new status that is exposed, starting from version 6.6.0.
              If set to `resyncing`, the array is actively getting the latest pod data
              so that it becomes fully synchronized with its peer array.
              During the resyncing process, the array cannot handle I/O to the pod.
              Once the arrays are fully synchronized, the array changes to `online` status.
              If set to `unknown`, the status of the peer array is unknown
              because this array is offline and cannot determine the state of the pod on the peer array.
              Only the peer array can ever be in unknown status; this unknown status
              is unique to the local array and will differ when viewed from its peer array.
            type: string
            readOnly: true
            example: resyncing
        x-readOnly: true
    _builtIn:
      description: |
        A built-in resource. Many are singletons predefined by Purity (e.g., support
        settings). Some correspond to a piece of software, like an app, or hardware,
        like a controller. Others are created by the system in response to some event
        (e.g., alerts, audit records).

        Typically, a user can't create, delete or rename a built-in resource. A few
        can be created or deleted, but not renamed because the names are meaningful
        to Purity (e.g., VIFs).
      type: object
      properties:
        id:
          description: |
            A globally unique, system-generated ID.
            The ID cannot be modified and cannot refer to another resource.
          type: string
          readOnly: true
        name:
          description: |
            A locally unique, system-generated name. The name cannot be modified.
          type: string
          readOnly: true
    _replication_schedule:
      allOf:
      - $ref: '#/components/schemas/_snapshot_schedule'
      - description: |
          The schedule of a replication action.
        type: object
        properties:
          blackout:
            description: |
              The range of time when to suspend replication.
              To clear the blackout period, set to an empty string ("").
            title: TimeWindow
            allOf:
            - $ref: '#/components/schemas/_time_window'
    _snapshot_schedule:
      description: The replication or snapshot schedule.
      type: object
      properties:
        at:
          description: |
            The time of day the snapshot is scheduled to be taken
            and retained on the local array or immediately replicated to the target(s).
            Measured in seconds since midnight.
            The `at` value is only used if the `frequency` parameter is in days
            (e.g., `259200000`, which is equal to 3 days).
          type: integer
          format: int64
          example: 7200
          x-minimum: 0
          x-maximum: 86399
        enabled:
          description: "If set to `true`, the policy is enabled."
          type: boolean
          example: false
        frequency:
          description: The frequency of the scheduled action. Measured in milliseconds.
          type: integer
          format: int64
          example: 259200000
          x-minimum: 300000
          x-maximum: 34560000000
    _retentionPolicy:
      description: The snapshot retention policy.
      type: object
      properties:
        all_for_sec:
          description: |
            The length of time to keep the specified snapshots. Measured in seconds.
            Prior to 6.8.2 the range of 60 to 34560000 is accepted.
            In 6.8.2 and onwards the range of 60 to 2147483647 is accepted.
          type: integer
          format: int32
          example: 86400
        days:
          description: |
            The number of days to keep the snapshots after the `all_for_sec` period has passed.
            Prior to 6.6.4 the range of 0 to 4000 is accepted.
            In 6.6.4 and onwards the range of 0 to 2147483647 is accepted.
          type: integer
          format: int32
          example: 7
        per_day:
          description: |
            The number of snapshots to keep per day after the `all_for_sec` period has passed.
            Prior to 6.8.2 the range of 0 to 1440 is accepted.
            In 6.8.2 and onwards the range of 0 to 2147483647 is accepted.
          type: integer
          format: int32
          example: 3
    _aggregate_replication_performance:
      type: object
      properties:
        bytes_per_sec:
          description: The total number of bytes of replication data transmitted and received per second.
          type: integer
          format: int64
          minimum: 0
          readOnly: true
      x-readOnly: true
    _fixedReferenceNoId:
      type: object
      properties:
        name:
          description: |
            The resource name,
            such as volume name, pod name, snapshot name, and so on.
          type: string
          readOnly: true
      x-readOnly: true
    _transfer:
      type: object
      properties:
        completed:
          description: |
            The timestamp of when the snapshot replication process completed.
            Measured in milliseconds since the UNIX epoch.
          type: integer
          format: int64
          readOnly: true
        data_transferred:
          description: |
            The number of bytes transferred from the source to the target
            as part of the replication process.
            Measured in bytes.
          type: integer
          format: int64
          readOnly: true
        destroyed:
          description: |
            Returns a value of `true` if the snapshot has been destroyed and is pending eradication.
            The destroyed snapshot can be recovered by setting `destroyed=false`.
            Once the eradication pending period has elapsed,
            the snapshot is permanently eradicated and can no longer be recovered.
          type: boolean
        physical_bytes_written:
          description: |
            The amount of physical/logical data written to the target due to replication.
            Measured in bytes.
          type: integer
          format: int64
          readOnly: true
        progress:
          description: |
            The percentage progress of the snapshot transfer from the source array to the target.
            Displayed in decimal format.
          type: number
          format: float
          readOnly: true
          example: 0.66
        started:
          description: |
            The timestamp of when the snapshot replication process started.
            Measured in milliseconds since the UNIX epoch.
          type: integer
          format: int64
          readOnly: true
    _snapshot:
      type: object
      properties:
        created:
          description: |
            The snapshot creation time. Measured in milliseconds since the UNIX epoch.
          type: integer
          format: int64
          readOnly: true
        destroyed:
          description: |
            Returns a value of `true` if the snapshot has been destroyed and is pending eradication.
            The `time_remaining` value displays the amount of time left
            until the destroyed volume snapshot is permanently eradicated.
            Before the `time_remaining` period has elapsed, the destroyed volume snapshot can be recovered
            by setting `destroyed=false`.
            Once the `time_remaining` period has elapsed,
            the volume snapshot is permanently eradicated and can no longer be recovered.
          type: boolean
        pod:
          description: |
            A reference to the pod.
          title: FixedReference
          allOf:
          - $ref: '#/components/schemas/_fixedReference'
        provisioned:
          description: |
            The provisioned space of the snapshot. Measured in bytes. The minimum size is 1048576 (1MB),
            the maximum size is 4503599627370496 (4PB)
          type: integer
          format: int64
          readOnly: true
        source:
          description: |
            The volume from which this snapshot was taken.
            For a replicated snapshot being viewed on the target side, the
            `source` is the replica volume.
          title: FixedReference
          allOf:
          - $ref: '#/components/schemas/_fixedReference'
        suffix:
          description: |
            The suffix that is appended to the `source_name` value to generate the full
            volume snapshot name in the form `VOL.SUFFIX`.
            If the suffix is not specified, the system constructs the snapshot name in the form `VOL.NNN`,
            where `VOL` is the volume name, and `NNN` is a monotonically increasing number.
          type: string
        time_remaining:
          description: |
            The amount of time left until the destroyed snapshot is permanently eradicated.
            Measured in milliseconds.
            Before the `time_remaining` period has elapsed, the destroyed snapshot can be recovered
            by setting `destroyed=false`.
          type: integer
          format: int64
          readOnly: true
    _volumeCommon:
      allOf:
      - $ref: '#/components/schemas/_resource'
      - description: |
          A disk-like random access virtual storage device that a FlashArray
          system exports to hosts via a logical unit number (LUN). To a host,
          a volume contains a number of 512-byte sectors in which data can be
          written and from which it can be read.
        type: object
        properties:
          connection_count:
            description: |
              The total number of hosts and host groups connected to the volume.
            type: integer
            format: int64
            readOnly: true
          created:
            description: The volume creation time. Measured in milliseconds since the UNIX epoch.
            type: integer
            format: int64
            readOnly: true
          destroyed:
            description: |
              Returns a value of `true` if the volume has been destroyed and is pending eradication.
              The `time_remaining` value displays the amount of time left
              until the destroyed volume is permanently eradicated.
              Before the `time_remaining` period has elapsed, the destroyed volume can be recovered
              by setting `destroyed=false`.
              Once the `time_remaining` period has elapsed,
              the volume is permanently eradicated and can no longer be recovered.
            type: boolean
          host_encryption_key_status:
            description: |
              The host encryption key status for this volume.
              Possible values include `none`, `detected`, and `fetched`.
            type: string
            readOnly: true
            example: detected
          provisioned:
            description: |
              The virtual size of the volume. Measured in bytes
              and must be a multiple of 512. The maximum size is
              4503599627370496 (4PB)
            type: integer
            format: int64
          qos:
            description: |
              Displays QoS limit information.
            title: Qos
            allOf:
            - $ref: '#/components/schemas/_qos'
          serial:
            description: |
              A globally unique serial number generated by the system when the volume is created.
            type: string
            readOnly: true
          space:
            description: |
              Displays size and space consumption information.
            title: Space
            allOf:
            - $ref: '#/components/schemas/_space'
          time_remaining:
            description: |
              The amount of time left until the destroyed volume is permanently eradicated.
              Measured in milliseconds.
              Before the `time_remaining` period has elapsed, the destroyed volume can be recovered
              by setting `destroyed=false`.
            type: integer
            format: int64
            readOnly: true
    _qos:
      type: object
      properties:
        bandwidth_limit:
          description: |
            The maximum QoS bandwidth limit for the volume.
            Whenever throughput exceeds the bandwidth limit, throttling occurs.
            Measured in bytes per second. Maximum limit is 512 GB/s.
          type: integer
          format: int64
          minimum: 1048576
          maximum: 549755813888
        iops_limit:
          description: |
            The QoS IOPs limit for the volume.
          type: integer
          format: int64
          minimum: 100
          maximum: 100000000
    PageInfo:
      type: object
      properties:
        continuation_token:
          description: |
            Continuation token that can be provided in the `continuation_token`
            query param to get the next page of data.
            If you use the continuation token to page through data you
            are guaranteed to get all items exactly once regardless of
            how items are modified. If an item is added or deleted during
            the pagination then it may or may not be returned.
            The continuation token is generated if the limit is less
            than the remaining number of items, and the default sort is used
            (no sort is specified).
          type: string
        more_items_remaining:
          description: |
            Returns a value of `true` if subsequent items can be retrieved.
          type: boolean
          example: false
        total_item_count:
          description: |
            The total number of records after applying all filter query parameters.
            The `total_item_count` will be calculated if and only if the corresponding
            query parameter `total_item_count` is set to `true`. If this query parameter
            is not set or set to `false`, a value of `null` will be returned.
          type: integer
          format: int32
    _newName:
      type: object
      properties:
        name:
          description: The new name for the resource.
          type: string
    ResourcePerformanceNoId:
      allOf:
      - $ref: '#/components/schemas/_resourceNoId'
      - $ref: '#/components/schemas/_performance'
    ResourcePerformanceNoIdByArray:
      allOf:
      - $ref: '#/components/schemas/ResourcePerformanceNoId'
      - type: object
        properties:
          array:
            description: |
              The array on which the performance metrics were recorded.
            title: Resource
            allOf:
            - $ref: '#/components/schemas/_resource'
    _chap:
      description: Challenge-Handshake Authentication Protocol (CHAP).
      type: object
      properties:
        host_password:
          description: |
            The host password for CHAP authentication.
            The password must be between 12 and 255 characters (inclusive)
            and cannot be the same as the target password.
          type: string
        host_user:
          description: The host username for CHAP authentication.
          type: string
        target_password:
          description: |
            The target password for CHAP authentication.
            The password must be between 12 and 255 characters (inclusive)
            and cannot be the same as the host password.
          type: string
        target_user:
          description: The target username for CHAP authentication.
          type: string
    _offload_nfs:
      type: object
      properties:
        address:
          description: "The hostname or IP address of the NFS server to where the data will be offloaded.
            An array can be connected to one offload target at a time, while multiple arrays can be connected
            to the same offload target. If the protection group is in a stretched pod, for high availability,
            connect both arrays in the stretched pod to the offload target."
          type: string
        mount_options:
          description: "The custom mount options on the NFS server. Enter multiple mount options in comma-separated
            format. Valid values include `port`, `rsize`, `wsize`, `nfsvers`, and `tcp` or `udp`. These
            mount options are common to all NFS file systems."
          type: string
        mount_point:
          description: "The mount point of the NFS export on the NFS server. For example, `/mnt`. The
            `access_key_id`, `secret_access_key`, and `bucket` parameters must be set together."
          type: string
    _offload_s3:
      type: object
      properties:
        access_key_id:
          description: |
            The access key ID of the AWS account used to create a connection between the array and
            an Amazon S3 offload target.
            The access key ID is 20 characters in length and is only accepted
            when creating the connection between the array and the S3 offload target.
            The `access_key_id`, `secret_access_key`, and `bucket` parameters must be set together.
          type: string
        bucket:
          description: |
            The name of the Amazon S3 bucket to where the data will be offloaded.
            Grant basic read and write ACL permissions to the bucket,
            and enable default (server-side) encryption for the bucket.
            Also verify that the bucket is empty of all objects and does not have any lifecycle policies.
            The `access_key_id`, `secret_access_key`, and `bucket` parameters must be set together.
          type: string
        placement_strategy:
          description: |
            The storage placement strategy used for the dynamic placement of data
            in an Amazon S3 offload target.
            Valid values are `aws-intelligent-tiering`, `aws-standard-class`, and `retention-based`.
            If set to `aws-intelligent-tiering`, data is stored in the
            Amazon S3 INTELLIGENT_TIERING storage class regardless of the retention period.
            If set to `aws-standard-access`, the data is stored in the
            Amazon S3 STANDARD storage class regardless of the retention period.
            If set to `retention-based`, the data for protection groups with longer retention periods
            is placed in the Amazon S3 STANDARD_IA
            (infrequently accessed, more cost-effective) storage class.
            All other data is placed in the STANDARD storage class.
            When the array is initially connected to an S3 offload target,
            `placement_strategy` is automatically set to `retention-based`.
            The `placement_strategy` or `uri` parameter is required, but they cannot be set together.
          type: string
        secret_access_key:
          description: |
            The secret access key that goes with the access key ID (`access_key_id`) of the AWS account.
            The secret access key is 40 characters in length is only accepted
            when creating the connection between the array and the S3 offload target.
            The `access_key_id`, `secret_access_key`, and `bucket` parameters must be set together.
          type: string
        uri:
          description: |
            The URI used to create a connection between the array and a non-AWS S3 offload target.
            Storage placement strategies are not supported for non-AWS S3 offload targets.
            Both the HTTP and HTTPS protocols are allowed.
          type: string
    _offload_azure:
      type: object
      properties:
        account_name:
          description: |
            The name of the existing Azure Blob storage account.
          type: string
        container_name:
          description: |
            The name of the container in the Azure Blob storage account
            to where the data will be offloaded.
            The name must be a valid DNS name. If not specified, defaults to `offload`.
          type: string
        secret_access_key:
          description: |
            The secret access key that goes with the account name (`account_name`) of the Azure Blob
            storage account.
            The secret access key is only accepted
            when creating the connection between the array and the Azure Blob storage account.
            The `account_name` and `container_name`, and `secret_access_key` parameters must be set
            together.
          type: string
    TargetProtectionGroup:
      type: object
      properties:
        allowed:
          description: |
            If set to `true`, the target array has allowed the source array
            to replicate protection group data to the target array.
            If set to `false`, the target array has not allowed the source array
            to replicate protection group data to the target.
          type: boolean
          example: true
        group:
          $ref: '#/components/schemas/_referenceNoId'
        member:
          $ref: '#/components/schemas/_referenceNoId'
    ProtectionGroupSnapshotTransferResponse:
      type: object
      properties:
        items:
          description: |
            Returns a list of all items after filtering.
            The values are displayed for each name where meaningful.
          type: array
          items:
            $ref: '#/components/schemas/ProtectionGroupSnapshotTransfer'
    ProtectionGroupSnapshotTransfer:
      allOf:
      - $ref: '#/components/schemas/_resourceNoId'
      - $ref: '#/components/schemas/_transfer'
      - description: |
          The transfer statistics for snapshot replication data.
        type: object
    RemotePod:
      allOf:
      - $ref: '#/components/schemas/_resource'
      - description: |
          Remote pod that's not directly stretched to this array.
        type: object
        properties:
          arrays:
            type: array
            minItems: 1
            items:
              $ref: '#/components/schemas/_resource'
    RemoteProtectionGroupSnapshotTransferResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/RemoteProtectionGroupSnapshotTransfer'
    RemoteVolumeSnapshotResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/RemoteVolumeSnapshot'
    RemoteVolumeSnapshotTransferResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/RemoteVolumeSnapshotTransfer'
    VolumeSnapshotTransferResponse:
      type: object
      properties:
        items:
          description: |
            Returns a list of all items after filtering.
            The values are displayed for each name where meaningful.
            If `total_only=true`, the `items` list will be empty.
          type: array
          items:
            $ref: '#/components/schemas/VolumeSnapshotTransfer'
    _host_port_connectivity:
      description: |
        The connectivity status between the host and the ports on each controller.
      type: object
      properties:
        details:
          description: |
            The host connection status.
            Values include `Redundant`, `N/A`,
            `Redundant-Failover`, `Uneven`, `Unused Port`,
            `Single Controller`, `Single Controller-Failover`, and `None`.
          type: string
          readOnly: true
          example: Redundant
        status:
          description: |
            The host connection health status.
            Values include `healthy`, `unhealthy`, and `critical`.
          type: string
          readOnly: true
          example: healthy
      x-readOnly: true
    _time_window:
      type: object
      properties:
        end:
          description: "The window end time. Measured in milliseconds since midnight. The time must be
            set on the hour. (e.g., `28800000`, which is equal to 8:00 AM)."
          type: integer
          format: int64
          example: 46800000
        start:
          description: "The window start time. Measured in milliseconds since midnight. The time must
            be set on the hour. (e.g., `18000000`, which is equal to 5:00 AM)."
          type: integer
          format: int64
          example: 3600000
  responses:
    OauthToken200:
      description: OK
      content:
        application/json:
          schema:
            title: oauth_token_response
            type: object
            properties:
              access_token:
                description: |
                  The serialized OAuth 2.0 Bearer token used to perform authenticated requests.
                  The access token must be added to the Authorization header of all API calls.
                type: string
                example: "eyJraWQiOiJqTlBzL1Ria2c4U2Vua3F3ZmkvbnI4bWxxQ3NPIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJhdWQiOiI5NDcyMTkwOC1mNzkyLTcxMmUtYTYzOS0wODM5ZmE4MzA5MjIiLCJzdWIiOiJqb2UiLCJyb2xlIjoic3RvcmFnZV9hZG1pbiIsImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3Q6OTAwMCIsImlhdCI6MTU0NDAzNjA1MiwiZXhwIjoxNTQ0MDcyMDUyLCJqdGkiOiJjOTg0MjgyNS1mNGM3LTRiNGUtODdkNy03OWFiZmIxYTUzNDgifQ.pnuYAx0CkmkIG0LDrMAQGRr5Ci4-t5yMto3A7BkmyKnAVHBXG5ZIWwvNkWDLhqbA4YjmG7LZmWHrCVehLy2zy2vRLahFURsd3GTnOaWSyWFIyrwpoO81jQRtOQATtseweuMT_-C8o3oa4MgBNBsuKrhwKQS3oDDpeRPaCRTGev1_xRDxh_K6CWJBTAeOP2pcR4LW6zIJkCLzzkMuyL4aTJWWUjSbl04mcFbyw8r8W1GURrmaDVOvvpT634Hk9-GGh9OMIRlS6OOq7cJKc-RRWn18IK2Gs53V_KYshXTBbnRr990Y_qOX8MaTWOJTqgzsojY02MSVuJ9XDJWoIU3TQytr4K1vM2EvwDZDgl7LuUYUn7vWhbKktFzpeZyyhOjq3eX-ViugYKpIjBcG2f_-fcTPceEWGV82rd6TyVNB5A-v9u2kxCdW198t_kesgVQfuupDeS02cZe0ABLCzEHPiVF17JfiVr6sjkciioxN7Wj_j18ga4U0mdSukauT8yhbgCW1ijTVTFu1VwWebW0s8z3BWMtXdTtZ3BhcZVAdKRF8bOq7nfEbUQGhTn9g7dK-yF050winjtp-VTL2oUtkF5j1v_N8vPNiN9ZdkGJZr7VVZ-qeOJZcjdaRbxL6YB__yT1wkTcKPh8RHz6GUq7Jbyw8VIlcBE2nvJ63d0tH9C4"
              expires_in:
                description: |
                  The duration after which the access token will expire.
                  Measured in seconds. This differs from other duration
                  fields that are expressed in milliseconds.
                type: integer
                format: uint32
                example: 35999
              issued_token_type:
                description: |
                  The type of token that is issued.
                  The Pure Storage REST API supports OAuth 2.0 access tokens.
                type: string
                example: urn:ietf:params:oauth:token-type:access_token
              token_type:
                description: |
                  Indicates how the API client can use the access token issued.
                  The Pure Storage REST API supports the `Bearer` token.
                type: string
                example: Bearer
    OauthToken400:
      description: BAD REQUEST
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: invalid_request
              error_description:
                type: string
                example: "Unsupported subject_token_type: urn:ietf:params:oauth:token-"
    OauthToken401:
      description: UNAUTHORIZED
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: invalid_client
              error_description:
                type: string
                example: "Invalid identity: JWT validation failed."
  parameters:
    XRequestId:
      name: X-Request-ID
      in: header
      description: |
        Supplied by client during request or generated by server.
      schema:
        type: string
    Authorization:
      name: Authorization
      in: header
      description: |
        Access token (in JWT format) required to use any API
        endpoint (except `/oauth2`, `/login`, and `/logout`)
      schema:
        type: string
    Filter:
      name: filter
      in: query
      description: |
        Narrows down the results to only the response objects
        that satisfy the filter criteria.
      schema:
        type: string
    Ids:
      name: ids
      in: query
      description: |
        Performs the operation on the unique resource IDs specified.
        Enter multiple resource IDs in comma-separated format.
        The `ids` or `names` parameter is required, but they cannot be set together.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    Limit:
      name: limit
      in: query
      description: |
        Limits the size of the response to the specified number of objects on each page.
        To return the total number of resources, set `limit=0`.
        The total number of resources is returned as a `total_item_count` value.
        If the page size requested is larger than the system maximum limit,
        the server returns the maximum limit, disregarding the requested page size.
      schema:
        type: integer
        format: int32
        minimum: 0
      example: 10
    Names:
      name: names
      in: query
      description: |
        Performs the operation on the unique name specified.
        Enter multiple names in comma-separated format.
        For example, `name01,name02`.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    Offset:
      name: offset
      in: query
      description: |
        The starting position based on the results of the query
        in relation to the full set of response objects returned.
      schema:
        type: integer
        format: int32
        minimum: 0
      example: 10
    Sort:
      name: sort
      in: query
      description: |
        Returns the response objects in the order specified.
        Set `sort` to the name in the response by which to sort.
        Sorting can be performed on any of the names in the response,
        and the objects can be sorted in ascending or descending order.
        By default, the response objects are sorted in ascending order.
        To sort in descending order, append the minus sign (`-`) to the name.
        A single request can be sorted on multiple objects.
        For example, you can sort all volumes from largest to smallest volume size,
        and then sort volumes of the same size in ascending order by volume name.
        To sort on multiple names, list the names as comma-separated values.
      style: form
      explode: false
      schema:
        type: array
        items:
          pattern: "^[a-z]+(_[a-z]+)*-?"
          type: string
    Total_item_count:
      name: total_item_count
      in: query
      description: |
        If set to `true`, the `total_item_count` matching the
        specified query parameters is calculated and returned in
        the response. If set to `false`, the `total_item_count`
        is `null` in the response. This may speed up queries
        where the `total_item_count` is large. If not specified,
        defaults to `false`.
      schema:
        type: boolean
    Continuation_token:
      name: continuation_token
      in: query
      description: |
        A token used to retrieve the next page of data
        with some consistency guaranteed.
        The token is a Base64 encoded value.
        Set `continuation_token` to the system-generated token taken from the `x-next-token`
        header field of the response.
        A query has reached its last page when the response does not include a token.
        Pagination requires the `limit` and `continuation_token`
        query parameters.
      schema:
        type: string
    Host_group_names:
      name: host_group_names
      in: query
      description: |
        Performs the operation on the host group specified.
        Enter multiple names in comma-separated format.
        A request cannot include a mix of multiple objects with multiple names.
        For example, a request cannot include a mix of multiple host group names and volume names;
        instead, at least one of the objects (e.g., `host_group_names`) must be set to only one name
        (e.g., `hgroup01`).
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    Host_names:
      name: host_names
      in: query
      description: |
        Performs the operation on the hosts specified.
        Enter multiple names in comma-separated format.
        For example, `host01,host02`.
        A request cannot include a mix of multiple objects with multiple names.
        For example, a request cannot include a mix of multiple host names and volume names;
        instead, at least one of the objects (e.g., `host_names`) must be set to only one name
        (e.g., `host01`).
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    Protocol_endpoint_names:
      name: protocol_endpoint_names
      in: query
      description: |
        Performs the operation on the protocol endpoints specified.
        Enter multiple names in comma-separated format.
        For example, `pe01,pe02`.
        A request cannot include a mix of multiple objects with multiple names.
        For example, a request cannot include a mix of multiple protocol endpoint names and host names;
        instead, at least one of the objects (e.g., `protocol_endpoint_names`) must be set to one name
        (e.g., `pe01`).
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    Volume_names:
      name: volume_names
      in: query
      description: |
        Performs the operation on the volume specified.
        Enter multiple names in comma-separated format.
        For example, `vol01,vol02`.
        A request cannot include a mix of multiple objects with multiple names.
        For example, a request cannot include a mix of multiple volume names and host names;
        instead, at least one of the objects (e.g., `volume_names`) must be set to only one name
        (e.g., `vol01`).
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    Group_names:
      name: group_names
      in: query
      description: |+
        Performs the operation on the unique group name specified.
        Examples of groups include host groups, pods, protection groups, and volume groups.
        Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`.

      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    Member_names:
      name: member_names
      in: query
      description: |
        Performs the operation on the unique member name specified.
        Examples of members include volumes, hosts, host groups, and directories.
        Enter multiple names in comma-separated format. For example, `vol01,vol02`.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    Total_only:
      name: total_only
      in: query
      description: |
        If set to `true`, returns the aggregate value of all items after filtering.
        Where it makes more sense, the average value is displayed instead.
        The values are displayed for each name where meaningful.
        If `total_only=true`, the `items` list will be empty.
      schema:
        type: boolean
    Protocol:
      name: protocol
      in: query
      description: |
        Protocol type. Valid values are `nfs`, `s3`, and `azure`.
      schema:
        type: string
    Initialize:
      name: initialize
      in: query
      description: |
        If set to `true`, initializes the Amazon S3 or Azure Blob container
        in preparation for offloading. The parameter must be set to `true`
        if this is the first time the array is connecting to the offload target.
      schema:
        type: boolean
    Destroyed:
      name: destroyed
      in: query
      description: |
        If set to `true`, lists only destroyed objects
        that are in the eradication pending state.
        If set to `false`, lists only objects that are not destroyed.
        For destroyed objects, the time remaining is displayed in milliseconds.
      schema:
        type: boolean
    Group_ids:
      name: group_ids
      in: query
      description: |
        A comma-separated list of group IDs.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    Member_ids:
      name: member_ids
      in: query
      description: |
        Performs the operation on the unique member IDs specified.
        Enter multiple member IDs in comma-separated format.
        The `member_ids` or `member_names` parameter is required, but they cannot be set together.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    With_unknown:
      name: with_unknown
      in: query
      description: |
        If set to `true`, unstretches the specified pod from the specified array by force.
        Use the `with_unknown` parameter in the following rare event&#58; the local array goes offline
        while the pod is still stretched across two arrays,
        the status of the remote array becomes unknown,
        and there is no guarantee that the pod is online elsewhere.
      schema:
        type: boolean
    History_end_time:
      name: end_time
      in: query
      description: |+
        Displays historical performance data for the specified time window,
        where `start_time` is the beginning of the time window,
        and `end_time` is the end of the time window.
        The `start_time` and `end_time` parameters
        are specified in milliseconds since the UNIX epoch.
        If `start_time` is not specified,
        the start time will default to one resolution before the end time,
        meaning that the most recent sample of performance data will be displayed.
        If `end_time`is not specified, the end time will default to the current time.
        Include the `resolution` parameter to display the performance data at the specified resolution.
        If not specified, `resolution` defaults to the lowest valid resolution.

      schema:
        type: integer
        format: int64
    History_resolution:
      name: resolution
      in: query
      description: |
        The number of milliseconds between samples of historical data.
        For array-wide performance metrics (`/arrays/performance` endpoint),
        valid values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),
        `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and `86400000` (24 hours).
        For performance metrics on storage objects (`<object name>/performance` endpoint),
        such as volumes,
        valid values are `30000` (30 seconds), `300000` (5 minutes), `1800000` (30 minutes),
        `7200000` (2 hours), `28800000` (8 hours), and `86400000` (24 hours).
        For space metrics, (`<object name>/space` endpoint),
        valid values are `300000` (5 minutes), `1800000` (30 minutes), `7200000` (2 hours),
        `28800000` (8 hours), and `86400000` (24 hours).
        Include the `start_time` parameter to display the performance data
        starting at the specified start time.
        If `start_time` is not specified,
        the start time will default to one resolution before the end time,
        meaning that the most recent sample of performance data will be displayed.
        Include the `end_time` parameter to display the performance data until the specified end time.
        If `end_time`is not specified, the end time will default to the current time.
        If the `resolution` parameter is not specified
        but either the `start_time` or `end_time` parameter is,
        then `resolution` will default to the lowest valid resolution.
      schema:
        type: integer
        format: int64
        minimum: 0
      example: 30000
    History_start_time:
      name: start_time
      in: query
      description: |+
        Displays historical performance data for the specified time window,
        where `start_time` is the beginning of the time window,
        and `end_time` is the end of the time window.
        The `start_time` and `end_time` parameters
        are specified in milliseconds since the UNIX epoch.
        If `start_time` is not specified,
        the start time will default to one resolution before the end time,
        meaning that the most recent sample of performance data will be displayed.
        If `end_time`is not specified, the end time will default to the current time.
        Include the `resolution` parameter to display the performance data at the specified resolution.
        If not specified, `resolution` defaults to the lowest valid resolution.

      schema:
        type: integer
        format: int64
    Protection_group_source_names:
      name: source_names
      in: query
      description: |
        The name of the protection group or protection group snapshot to be copied
        into a new or existing protection group. If the destination protection group
        and all of its volumes already exist, include the `overwrite` parameter to
        overwrite all of the existing volumes with the snapshot contents.
        If including the `overwrite` parameter, the names of the volumes that are
        being overwritten must match the names of the volumes that are being restored.
        If the source is a protection group, the latest snapshot of the protection group
        will be used as the source during the copy operation.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    Overwrite:
      name: overwrite
      in: query
      description: |
        If set to `true`,
        overwrites an existing object during an object copy operation.
        If set to `false` or not set at all and the target name is an existing object,
        the copy operation fails.
        Required if the `source` body parameter is set
        and the source overwrites an existing object during the copy operation.
      schema:
        type: boolean
    Source_names:
      name: source_names
      in: query
      description: |
        Performs the operation on the source name specified.
        Enter multiple source names in comma-separated format. For example, `name01,name02`.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    Apply_retention:
      name: apply_retention
      in: query
      description: |
        If `true`, applies the local and remote retention policy to the snapshots.
      schema:
        type: boolean
    On_:
      name: "on"
      in: query
      description: |
        Performs the operation on the target name specified.
        Enter multiple target names in comma-separated format.
        For example, `targetName01,targetName02`.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    OnSingle:
      name: "on"
      in: query
      description: |
        Performs the operation on the target name specified.
        For example, `targetName01`.
      schema:
        type: string
    Source_ids:
      name: source_ids
      in: query
      description: |
        Performs the operation on the source ID specified.
        Enter multiple source IDs in comma-separated format.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    Truncate:
      name: truncate
      in: query
      description: |
        If set to `true`, reduces the size of a volume
        during a volume resize operation.
        When a volume is truncated, Purity automatically takes an undo snapshot,
        providing a 24-hour window during which the previous contents
        can be retrieved. After truncating a volume,
        its provisioned size can be subsequently increased,
        but the data in truncated sectors cannot be retrieved.
        If set to `false` or not set at all and the volume is being reduced in size,
        the volume copy operation fails.
        Required if the `provisioned` parameter is set to a volume size
        that is smaller than the original size.
      schema:
        type: boolean
x-original-swagger-version: "2.0"
