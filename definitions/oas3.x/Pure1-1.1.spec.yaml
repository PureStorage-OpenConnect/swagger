openapi: 3.0.1
info:
  title: Pure1 Public REST API
  description: |-
    Pure1 Public REST API, developed by [Pure Storage, Inc.](https://www.purestorage.com)

    The Pure1 REST API 2.0 offers one single form of authentication: OAuth 2.0 via the [Token Exchange protocol](https://datatracker.ietf.org/doc/draft-ietf-oauth-token-exchange).

    OAuth 2.0 is an open protocol to allow secure authorization in a simple and standard method from web, mobile, desktop and background applications.

    Note that the [Authentication](#section/Authentication) section below mentions 'API Key' as the security scheme type. This is solely for the purpose of allowing testing this API with [Swagger UI](https://static.pure1.purestorage.com/api-swagger/index.html).

    [Knowledge base reference documentation](https://support.purestorage.com/Pure1/Pure1_Manage/Pure1_Manage_-_REST_API/Pure1_Manage_-_REST_API__Reference)
  version: "1.1"
  x-logo:
    url:
      $ref: ../redoc/PS-LogoBase64-P1.txt
    backgroundColor: "#fff"
    altText: Pure Storage logo
servers:
- url: https://api-staging.pure1.purestorage.com/
security:
- AuthorizationHeader: []
tags:
- name: Authorization
  description: |
    Handles authorization access to other API endpoints through OAuth 2.0 Token Exchange.
- name: Alerts
  description: |
    Provides access to capacity, health, and hardware related array alerts.
- name: Arrays
  description: |
    Provides information about FlashArray and FlashBlade appliances.
- name: Audits
  description: |
    Provides access to CLI audit logs from FlashArray and FlashBlade appliances.
- name: Blades
  description: |
    Provides information about FlashBlade blades.
- name: Buckets
  description: |
    Provides information about FlashBlade buckets.
- name: Bucket Replica Links
  description: |
    Provides information about replica links between buckets.
- name: Controllers
  description: |
    Provides information about FlashArray controllers.
- name: Directories
  description: |
    Provides information about FlashArray directories.
- name: Drives
  description: |
    Provides information about FlashArray drives.
- name: File Systems
  description: |
    Provides information about FlashArray and FlashBlade file systems.
- name: File System Replica Links
  description: |
    Provides information about replica links between FlashBlade file systems.
- name: File System Snapshots
  description: |
    Provides information about FlashBlade file system snapshots.
- name: Hardware
  description: |
    Provides information about hardware components.
- name: Hardware Connectors
  description: |
    Provides information about FlashBlade hardware connectors.
- name: Invoices
  description: |
    Provides information about Pure1 subscription invoices.
- name: Metrics
  description: |
    Provides information about historical metrics for arrays, buckets, directories,
    file systems, pods, subscription licenses, and volumes.
- name: Network Interfaces
  description: |
    Provides information about network interfaces available on arrays.
- name: Object Store Accounts
  description: |
    Provides information about object store accounts.
- name: Pods
  description: |
    Provides information about FlashArray pods. A pod is the pairing
    of two arrays that replicate some volumes with each other.
- name: Pod Replica Links
  description: |
    Provides information about replica links between FlashArray pods.
- name: Policies
  description: |
    Provides information about FlashBlade policies and the members
    they apply to.
- name: Ports
  description: |
    Provides information about FlashArray ports.
- name: Subscriptions
  description: |
    Provides information about Pure1 subscription offerings.
- name: Sustainability
  description: |
    Provides information about energy consumption and sustainability.
- name: Targets
  description: |
    Provides information about FlashBlade external replication targets.
- name: Volumes
  description: |
    Provides information about block storage volumes on FlashArray arrays.
- name: Volume Snapshots
  description: |+
    Provides information about snapshots of block storage volumes
    on FlashArray arrays.

paths:
  /oauth2/1.0/token:
    post:
      tags:
      - Authorization
      summary: Get access token
      description: |
        Exchanges an ID Token for an OAuth 2.0 access token.
      parameters:
      - $ref: "#/components/parameters/XRequestId.TEx-v1"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - grant_type
              - subject_token
              - subject_token_type
              type: object
              properties:
                grant_type:
                  $ref: "#/components/schemas/formData_OauthGrantType"
                subject_token:
                  $ref: "#/components/schemas/formData_OauthSubjectToken"
                subject_token_type:
                  $ref: "#/components/schemas/formData_OauthSubjectTokenType"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/OauthToken200"
        "400":
          $ref: "#/components/responses/OauthToken400"
        "401":
          $ref: "#/components/responses/OauthToken401"
      security: []
    x-sourced-from: paths/TEx-v2/oauth-token.path.yaml
  /api/1.1/alerts:
    get:
      tags:
      - Alerts
      summary: Get alerts
      description: |
        Retrieves information about alerts generated by Pure1-monitored appliances.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertsGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/alerts.path.yaml
  /api/1.1/arrays:
    get:
      tags:
      - Arrays
      summary: Get arrays
      description: |
        Retrieves information about FlashArray and FlashBlade storage appliances.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Fqdns"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/arrays.path.yaml
  /api/1.1/arrays/support-contracts:
    get:
      tags:
      - Arrays
      summary: Get array support contracts
      description: |
        Retrieves the support contracts associated with arrays.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Resource_ids"
      - $ref: "#/components/parameters/Resource_fqdns"
      - $ref: "#/components/parameters/Resource_names"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupportContractGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/arrays-support-contracts.path.yaml
  /api/1.1/arrays/tags:
    get:
      tags:
      - Arrays
      summary: Get array tags
      description: |
        Retrieves the tags associated with specified arrays.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Keys"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Namespaces"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Resource_ids"
      - $ref: "#/components/parameters/Resource_names"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    delete:
      tags:
      - Arrays
      summary: Delete array tags
      description: |
        Deletes array tags from Pure1.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Keys"
      - $ref: "#/components/parameters/Namespaces"
      - $ref: "#/components/parameters/Resource_idsRequired"
      - $ref: "#/components/parameters/Resource_namesRequired"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content: {}
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.0/arrays-tags.path.yaml
  /api/1.1/arrays/tags/batch:
    put:
      tags:
      - Arrays
      summary: |
        Create or update array tags
      description: |
        Creates or updates array tags contextual to Pure1 only.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Namespaces"
      - $ref: "#/components/parameters/Resource_idsRequired"
      - $ref: "#/components/parameters/Resource_namesRequired"
      requestBody:
        $ref: "#/components/requestBodies/TagBatchRequired"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.0/arrays-tags-batch.path.yaml
  /api/1.1/assessment/sustainability/arrays:
    get:
      tags:
      - Sustainability
      summary: Get appliance sustainability information.
      description: |
        Retrieves information about FlashArray and FlashBlade size,
        power consumption, heat generation and its sustainability assessment.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Fqdns"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SustainabilityArrayGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/sustainability-arrays.path.yaml
  /api/1.1/assessment/sustainability/insights/arrays:
    get:
      tags:
      - Sustainability
      summary: Get appliance sustainability insights information.
      description: |
        Retrieves information about FlashArray and FlashBlade insights
        connected to sustainability assessment.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SustainabilityInsightArrayGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/sustainability-insights-arrays.path.yaml
  /api/1.1/audits:
    get:
      tags:
      - Audits
      summary: Get audits
      description: |
        Retrieves audit objects.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuditsGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/audits.path.yaml
  /api/1.1/blades:
    get:
      tags:
      - Blades
      summary: Get blades
      description: |
        Retrieves information about FlashBlade blades.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BladeGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/blades.path.yaml
  /api/1.1/buckets:
    get:
      tags:
      - Buckets
      summary: Get buckets
      description: |
        Retrieves buckets.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BucketGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/buckets.path.yaml
  /api/1.1/bucket-replica-links:
    get:
      tags:
      - Bucket Replica Links
      summary: Get bucket replica links
      description: |
        Retrieves information about bucket replica links.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Member_ids_plus"
      - $ref: "#/components/parameters/Member_names_plus"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      - $ref: "#/components/parameters/Source_ids_plus"
      - $ref: "#/components/parameters/Source_names_plus"
      - $ref: "#/components/parameters/Target_ids_plus"
      - $ref: "#/components/parameters/Target_names_plus"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BucketReplicaLinkGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/bucket-replica-links.path.yaml
  /api/1.1/controllers:
    get:
      tags:
      - Controllers
      summary: Get controllers
      description: |
        Retrieves information about controllers.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControllerGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/controllers.path.yaml
  /api/1.1/directories:
    get:
      tags:
      - Directories
      summary: Get managed directories
      description: |
        Retrieves information about FlashArray managed directory objects.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/File_system_ids"
      - $ref: "#/components/parameters/File_system_names"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/directories.path.yaml
  /api/1.1/drives:
    get:
      tags:
      - Drives
      summary: Get drives
      description: |
        Retrieves information about FlashArray drives.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriveGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/drives.path.yaml
  /api/1.1/file-systems:
    get:
      tags:
      - File Systems
      summary: Get FlashArray and FlashBlade file systems
      description: |
        Retrieves information about FlashArray and FlashBlade file system objects.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileSystemGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/file-systems.path.yaml
  /api/1.1/file-systems/policies:
    get:
      tags:
      - File Systems
      summary: Get FlashBlade file system / policy pairs
      description: |
        Retrieves pairs of FlashBlade file system members and their policies.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Member_ids"
      - $ref: "#/components/parameters/Member_names"
      - $ref: "#/components/parameters/Policy_ids"
      - $ref: "#/components/parameters/Policy_names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyMembersGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.0/file-systems-policies.path.yaml
  /api/1.1/file-system-replica-links:
    get:
      tags:
      - File System Replica Links
      summary: Get FlashBlade file system replica links
      description: |
        Retrieves information about FlashBlade file system replica links.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Member_ids_plus"
      - $ref: "#/components/parameters/Member_names_plus"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      - $ref: "#/components/parameters/Source_ids_plus"
      - $ref: "#/components/parameters/Source_names_plus"
      - $ref: "#/components/parameters/Target_ids_plus"
      - $ref: "#/components/parameters/Target_names_plus"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileSystemReplicaLinkGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/file-system-replica-links.path.yaml
  /api/1.1/file-system-replica-links/policies:
    get:
      tags:
      - File System Replica Links
      summary: Get FlashBlade file system replica link / policy pairs
      description: |
        Retrieves pairs of FlashBlade file system replica link members and their policies.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Member_ids"
      - $ref: "#/components/parameters/Member_names"
      - $ref: "#/components/parameters/Policy_ids"
      - $ref: "#/components/parameters/Policy_names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyMembersGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.0/file-system-replica-links-policies.path.yaml
  /api/1.1/file-system-snapshots:
    get:
      tags:
      - File System Snapshots
      summary: Get FlashBlade file system snapshots
      description: |
        Retrieves snapshots of FlashBlade file systems.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      - $ref: "#/components/parameters/Source_ids"
      - $ref: "#/components/parameters/Source_names"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileSystemSnapshotGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/file-system-snapshots.path.yaml
  /api/1.1/file-system-snapshots/policies:
    get:
      tags:
      - File System Snapshots
      summary: Get FlashBlade file system snapshot / policy pairs
      description: |
        Retrieves pairs of FlashBlade file system snapshot members and their policies.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Member_ids"
      - $ref: "#/components/parameters/Member_names"
      - $ref: "#/components/parameters/Policy_ids"
      - $ref: "#/components/parameters/Policy_names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyMembersGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.0/file-system-snapshots-policies.path.yaml
  /api/1.1/hardware:
    get:
      tags:
      - Hardware
      summary: Get hardware
      description: |
        Retrieves information about hardware components.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HardwareGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/hardware.path.yaml
  /api/1.1/hardware-connectors:
    get:
      tags:
      - Hardware Connectors
      summary: Get hardware connectors
      description: |
        Retrieves information about FlashBlade hardware connectors.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HardwareConnectorGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/hardware-connectors.path.yaml
  /api/1.1/invoices:
    get:
      tags:
      - Invoices
      summary: Get invoices
      description: |
        Retrieves information about Pure1 subscription invoices.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      - $ref: "#/components/parameters/Partner_purchase_orders"
      - $ref: "#/components/parameters/Subscription_ids"
      - $ref: "#/components/parameters/Subscription_names"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvoiceGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/invoices.path.yaml
  /api/1.1/metrics:
    get:
      tags:
      - Metrics
      summary: Get metrics
      description: |
        Retrieves information about metrics that can be queried for.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Resource_types"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.0/metrics.path.yaml
  /api/1.1/metrics/history:
    get:
      tags:
      - Metrics
      summary: Get metrics history
      description: |
        Retrieves historical metric data for resources. This endpoint supports batching: Up to 32 time series can be retrieved in one call. It can be multiple metrics for one resource, (e.g., load and bandwidth for one array - 2 time series), one metric for multiple resource (e.g., load for arrayA and arrayB - 2 time series), or a combination of both, multiple metrics for multiple resources, (e.g., load and bandwidth for arrayA and arrayB - 4 time series).
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/AggregationRequired"
      - $ref: "#/components/parameters/End_timeRequired"
      - $ref: "#/components/parameters/IdsRequired"
      - $ref: "#/components/parameters/NamesRequired"
      - $ref: "#/components/parameters/ResolutionRequired"
      - $ref: "#/components/parameters/Resource_idsRequired"
      - $ref: "#/components/parameters/Resource_namesRequired"
      - $ref: "#/components/parameters/Start_timeRequired"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricHistoryGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/metrics-history.path.yaml
  /api/1.1/network-interfaces:
    get:
      tags:
      - Network Interfaces
      summary: Get network interfaces
      description: |
        Retrieves information about physical and virtual network interface objects.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkInterfaceGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/network-interfaces.path.yaml
  /api/1.1/object-store-accounts:
    get:
      tags:
      - Object Store Accounts
      summary: Get object store accounts
      description: |
        Retrieves object store accounts.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectStoreAccountGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/object-store-accounts.path.yaml
  /api/1.1/pods:
    get:
      tags:
      - Pods
      summary: Get pods
      description: |
        Retrieves information about pod objects.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PodGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/pods.path.yaml
  /api/1.1/pod-replica-links:
    get:
      tags:
      - Pod Replica Links
      summary: Get pod replica links
      description: |
        Retrieves information about pod replica links.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Member_ids_plus"
      - $ref: "#/components/parameters/Member_names_plus"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      - $ref: "#/components/parameters/Source_ids_plus"
      - $ref: "#/components/parameters/Source_names_plus"
      - $ref: "#/components/parameters/Target_ids_plus"
      - $ref: "#/components/parameters/Target_names_plus"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PodReplicaLinkGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/pod-replica-links.path.yaml
  /api/1.1/policies:
    get:
      tags:
      - Policies
      summary: Get policies
      description: |
        Retrieves policies and their rules.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/policies.path.yaml
  /api/1.1/policies/file-systems:
    get:
      tags:
      - Policies
      summary: Get policy / FlashBlade file system pairs
      description: |
        Retrieves pairs of policy references and their FlashBlade file system members.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Member_ids"
      - $ref: "#/components/parameters/Member_names"
      - $ref: "#/components/parameters/Policy_ids"
      - $ref: "#/components/parameters/Policy_names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyMembersGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.0/policies-file-systems.path.yaml
  /api/1.1/policies/file-system-replica-links:
    get:
      tags:
      - Policies
      summary: Get policy / FlashBlade file system replica link pairs
      description: |
        Retrieves pairs of policy references and their FlashBlade file system replica link members.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Member_ids"
      - $ref: "#/components/parameters/Member_names"
      - $ref: "#/components/parameters/Policy_ids"
      - $ref: "#/components/parameters/Policy_names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyMembersGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.0/policies-file-system-replica-links.path.yaml
  /api/1.1/policies/file-system-snapshots:
    get:
      tags:
      - Policies
      summary: Get policy / FlashBlade file system snapshot pairs
      description: |
        Retrieves pairs of policy references and their FlashBlade file system snapshot members.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Member_ids"
      - $ref: "#/components/parameters/Member_names"
      - $ref: "#/components/parameters/Policy_ids"
      - $ref: "#/components/parameters/Policy_names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyMembersGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.0/policies-file-system-snapshots.path.yaml
  /api/1.1/policies/members:
    get:
      tags:
      - Policies
      summary: Get policy / member pairs
      description: |
        Retrieves pairs of policy references and their members.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Member_ids"
      - $ref: "#/components/parameters/Member_names"
      - $ref: "#/components/parameters/Policy_ids"
      - $ref: "#/components/parameters/Policy_names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyMembersGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.0/policies-members.path.yaml
  /api/1.1/ports:
    get:
      tags:
      - Ports
      summary: Get ports
      description: |
        Retrieves information about FlashArray ports.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PortGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/ports.path.yaml
  /api/1.1/subscriptions:
    get:
      tags:
      - Subscriptions
      summary: Get subscriptions
      description: |
        Retrieves information about Pure1 subscriptions.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.0/subscriptions.path.yaml
  /api/1.1/subscription-licenses:
    get:
      tags:
      - Subscriptions
      summary: Get subscription licenses
      description: |
        Retrieves information about Pure1 subscription licenses.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Marketplace_partner_reference_ids"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      - $ref: "#/components/parameters/Subscription_ids"
      - $ref: "#/components/parameters/Subscription_names"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionLicenseGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/subscription-licenses.path.yaml
  /api/1.1/targets:
    get:
      tags:
      - Targets
      summary: Get targets
      description: |
        Retrieves information about targets.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/targets.path.yaml
  /api/1.1/volumes:
    get:
      tags:
      - Volumes
      summary: Get volumes
      description: |
        Retrieves information about FlashArray volume objects.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VolumeGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/volumes.path.yaml
  /api/1.1/volume-snapshots:
    get:
      tags:
      - Volume Snapshots
      summary: Get volume snapshots
      description: |
        Retrieves information about snapshots of volumes.
      parameters:
      - $ref: "#/components/parameters/Authorization"
      - $ref: "#/components/parameters/XRequestId"
      - $ref: "#/components/parameters/Continuation_token"
      - $ref: "#/components/parameters/Filter"
      - $ref: "#/components/parameters/Ids"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Names"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Sort"
      - $ref: "#/components/parameters/Source_ids"
      - $ref: "#/components/parameters/Source_names"
      responses:
        "200":
          description: OK
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Remaining-second:
              description: |
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: |
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VolumeSnapshotGetResponse"
        "400":
          $ref: "#/components/responses/Error400"
        "403":
          $ref: "#/components/responses/Error403"
        "404":
          $ref: "#/components/responses/Error404"
        "429":
          $ref: "#/components/responses/Error429"
        "500":
          $ref: "#/components/responses/Error500"
    x-sourced-from: paths/Pure1-1.1/volume-snapshots.path.yaml
components:
  schemas:
    formData_OauthGrantType:
      type: string
      description: |
        The method by which the access token will be obtained.
        The Pure Storage REST API supports the OAuth 2.0 "token exchange" grant type,
        which indicates that a token exchange is being performed.
        Set `grant_type` to `urn:ietf:params:oauth:grant-type:token-exchange`.
      default: urn:ietf:params:oauth:grant-type:token-exchange
      x-sourced-from: queries/TEx-v1/oauth-grant-type.query.yaml
    formData_OauthSubjectToken:
      type: string
      description: |+
        An encoded security ID Token representing the identity of the party on behalf of
        whom the request is being made. The token must be issued by a trusted
        identity provider which must be either a registered application in Pure1
        or an enabled API client on the array. The token must be a JSON Web Token
        and must contain the following claims:

        > | JWT claim | Location | API Client Field | Description | Required By |

        > |-|-|-|-|-|

        > | kid | Header | key_id | Key ID of the API client that issues the identity token. | FlashArray
        and FlashBlade only. |

        > | aud | Payload | id | Client ID of the API client that issues the identity token. | FlashArray
        and FlashBlade only. |

        > | sub | Payload | | Login name of the array user for whom the token should be issued.
        This must be a valid user in the system. | FlashArray and FlashBlade only. |

        > | iss | Payload | issuer | Application ID for the Pure1 or API client's trusted identity
        issuer on the array. | All products. |

        > | iat | Payload | | Timestamp of when the identity token was issued.
        Measured in milliseconds since the UNIX epoch. | All products. |

        > | exp | Payload | | Timestamp of when the identity token will expire.
        Measured in milliseconds since the UNIX epoch. | All products. |


        Each token must also be signed with the private key that is paired with the
        API client's public key.

      x-sourced-from: queries/TEx-v1/oauth-subject-token.query.yaml
    formData_OauthSubjectTokenType:
      type: string
      description: |
        An identifier that indicates the type of security token specifed in the `subject_token` parameter.
        The Pure Storage REST API supports the JSON Web Token (JWT)
        as the means for requesting the access token.
        Set `subject_token_type` to `urn:ietf:params:oauth:token-type:jwt`.
      default: urn:ietf:params:oauth:token-type:jwt
      x-sourced-from: queries/TEx-v1/oauth-subject-token-type.query.yaml
    Alert:
      allOf:
      - $ref: "#/components/schemas/_arraysResource"
      - type: object
        properties:
          actual:
            type: string
            description: Actual condition at the time of the alert.
            example: empty
          category:
            type: string
            description: |
              Category of the alert. Valid values are `array`, `hardware`, and
              `software`.
            example: array
          closed:
            type: integer
            description: |
              Time when the alert was closed, in milliseconds since UNIX epoch.
            format: int64
            example: 1502729489760
          code:
            type: integer
            description: Code associated with the alert.
            example: 100
          component_name:
            type: string
            description: Name of the component alerted about.
            example: drive1
          component_type:
            type: string
            description: Type of the component alerted about.
            example: drive
          created:
            type: integer
            description: |
              Time when the alert was created, in milliseconds since UNIX epoch.
            format: int64
            example: 1502729489760
          description:
            type: string
            description: Short description of the alert.
            example: Some sort of failure.
          expected:
            type: string
            description: Expected state/threshold under normal conditions.
            example: healthy
          knowledge_base_url:
            type: string
            description: URL of the relevant Knowledge Base page.
            example: https://support.purestorage.com/
          notified:
            type: integer
            description: |
              Time when the user was notified of the alert, in milliseconds since
              UNIX epoch.
            format: int64
            example: 1502729489760
          origin:
            type: string
            description: Origin of the alert. Valid values are `array` and `Pure1`.
            example: array
          severity:
            type: string
            description: |
              Current severity level. Valid values are `info`, `warning`, `critical`,
              and `hidden`.
            example: critical
          state:
            type: string
            description: |
              Current state of the alert. Valid values are `open`, `closing`,
              and `closed`.
            example: open
          summary:
            type: string
            description: Summary of the alert.
            example: Test alert.
          updated:
            type: integer
            description: |
              Time when the alert was last updated, in milliseconds since UNIX epoch.
            format: int64
            example: 1502729489760
        description: |
          An alert from an array.
      x-sourced-from: models/Pure1-1.1/alert.yaml
    Array:
      allOf:
      - $ref: "#/components/schemas/_builtInAsOf"
      - type: object
        properties:
          model:
            type: string
            description: Model of the array.
            readOnly: true
            example: FA-m70r2
          os:
            type: string
            description: |
              Valid values are `Elasticity`, `Purity`, `Purity//FA` and `Purity//FB`.
            readOnly: true
            example: Purity//FA
          version:
            type: string
            readOnly: true
            example: 5.0.0
          fqdn:
            type: string
            description: The fully qualified domain name of the array.
            readOnly: true
            example: https://array01.dc1.example.com
        description: |
          A FlashArray or FlashBlade storage appliance.
      x-sourced-from: models/Pure1-1.1/array.yaml
    Audit:
      allOf:
      - $ref: "#/components/schemas/_arraysResource"
      - type: object
        properties:
          arguments:
            type: string
            description: Arguments provided to the command.
            example: --args
          command:
            type: string
            description: The command that was executed.
            example: purevol
          origin:
            type: string
            description: Origin of the action. Valid values are `array` and `Pure1`.
            example: array
          subcommand:
            type: string
            description: The subcommand that was executed.
            example: snap
          time:
            type: integer
            description: |
              Time at which the command was run in milliseconds since UNIX epoch.
            format: int64
            example: 1502729489760
          user:
            type: string
            description: The user who ran the command.
            example: pureuser
        description: |
          An audit of an action executed on an array or in Pure1.
      x-sourced-from: models/Pure1-1.1/audit.yaml
    Blade:
      allOf:
      - $ref: "#/components/schemas/_builtInAsOf"
      - type: object
        properties:
          arrays:
            minItems: 1
            type: array
            description: |
              A list of arrays that contain this blade.
              Each blade should only exist on one array.
            items:
              $ref: "#/components/schemas/_bladeArrayStatus"
          details:
            type: string
            description: |
              Extra details about the blade. Will be `null` if none exist.
            readOnly: true
          raw_capacity:
            type: number
            description: |
              The raw storage capacity of the blade.
            format: int64
            readOnly: true
          status:
            type: string
            description: |
              Valid values are `critical`, `evacuated`, `evacuating`, `healthy`,
              `identifying`, `unclaimed`, `unhealthy`, `unknown`, `unrecognized`.
            readOnly: true
            example: healthy
        description: |
          A FlashBlade blade.
      x-sourced-from: models/Pure1-1.1/blade.yaml
    Bucket:
      allOf:
      - $ref: "#/components/schemas/_arraysResource"
      - type: object
        properties:
          account:
            $ref: "#/components/schemas/_fixedReference"
          created:
            type: integer
            description: "Creation time of the bucket, in milliseconds since Unix\
              \ epoch."
            format: int64
            readOnly: true
            example: 1502729489760
          destroyed:
            type: boolean
            description: |
              Returns a value of `true` if the bucket is destroyed, but not yet eradicated.
          object_count:
            type: integer
            description: The number of objects contained within the bucket.
            format: int64
            readOnly: true
            example: 15
          versioning:
            type: string
            description: |
              The versioning state for objects within the bucket.
              Valid values are `none`, `enabled`, and `suspended`.
      x-sourced-from: models/Pure1-1.1/bucket.yaml
    BucketReplicaLink:
      description: A replica link between two buckets.
      allOf:
      - $ref: "#/components/schemas/_replicaLink"
      - type: object
        properties:
          recovery_point:
            type: integer
            description: |
              Time when the last piece of data was replicated, in milliseconds since
              the UNIX epoch, and the recovery point of the bucket.
            format: int64
            readOnly: true
            example: 1565034592494
          status_details:
            type: string
            description: |
              Detailed information about the status of the replica link when it is
              `unhealthy`.
          members:
            type: array
            description: The union of source and target buckets in the replica link.
            items:
              $ref: "#/components/schemas/_resourceWithLocation"
          sources:
            type: array
            description: The source buckets in the replica link.
            items:
              $ref: "#/components/schemas/_resourceWithLocation"
          targets:
            type: array
            description: The target buckets in the replica link.
            items:
              $ref: "#/components/schemas/_resourceWithLocation"
        description: A replica link between two buckets.
      x-sourced-from: models/Pure1-1.1/bucket-replica-link.yaml
    Controller:
      allOf:
      - $ref: "#/components/schemas/_arraysBuiltIn"
      - type: object
        properties:
          mode:
            type: string
            description: |
              Mode of the controller.
              Values include `not present`, `offline`, `primary`, and `secondary`.
            example: primary
          model:
            type: string
            description: Model of the controller.
            example: FA-m50
          status:
            type: string
            description: |
              Status of the controller. Values include `not ready`, `ready`, `unknown`, and `updating`.
            example: ready
          type:
            type: string
            description: |
              Type of the controller. Values include `array_controller` and `shelf_controller`.
            example: array_controller
          version:
            type: string
            description: Version of the controller.
            example: 5.0.0
        description: |
          A platform that runs the Purity//FA Operating Environment.
      x-sourced-from: models/Pure1-1.1/controller.yaml
    Directory:
      allOf:
      - $ref: "#/components/schemas/_arraysBuiltIn"
      - type: object
        properties:
          created:
            type: integer
            description: Creation time in milliseconds since UNIX epoch.
            format: int64
            readOnly: true
            example: 1502729489760
          destroyed:
            type: boolean
            description: |
              Is the managed directory destroyed?
            example: false
          directory_name:
            type: string
            description: |
              The managed directory name without the file system name prefix.
              A managed directory full name is constructed in the form of `FILE_SYSTEM:DIR` where
              `FILE_SYSTEM` is the file system name and `DIR` is the value of this field.
              On FlashArray versions below `6.0.2`, the value is always `null`.
            readOnly: true
          file_system:
            type: object
            description: |
              The file system that this managed directory is in.
            allOf:
            - $ref: "#/components/schemas/_fixedReference"
          path:
            type: string
            description: |
              Absolute path of the managed directory in the file system.
            readOnly: true
        description: |
          A managed directory on an array.
      x-sourced-from: models/Pure1-1.1/directory.yaml
    Drive:
      allOf:
      - $ref: "#/components/schemas/_builtInAsOf"
      - type: object
        properties:
          arrays:
            minItems: 1
            type: array
            description: |
              A list of arrays that contain this drive.
              Each drive should only exist on one array.
            items:
              $ref: "#/components/schemas/_driveArrayStatus"
          capacity:
            type: number
            description: |
              Physical storage capacity of the module (in bytes).
            format: int64
            readOnly: true
            example: 494927872
          details:
            type: string
            description: |
              Details about the status of the module if status is not `healthy`.
            readOnly: true
            example: Slow link speed.
          protocol:
            type: string
            description: |
              Storage protocol of the module. Values include `NVMe` and `SAS`.
            readOnly: true
            example: SAS
          status:
            type: string
            description: |
              Current status of the module. Values include `empty`, `failed`,
              `healthy`, `identifying`, `missing`, `recovering`, `unadmitted`,
              `unhealthy`, `unrecognized`, and `updating`.
            readOnly: true
            example: healthy
          type:
            type: string
            description: |
              The type of the module. Values include `cache`, `NVRAM`, `SSD`,
              and `virtual`.
            readOnly: true
            example: SSD
        description: |
          Information about a flash, NVRAM, or cache module.
      x-sourced-from: models/Pure1-1.1/drive.yaml
    FileSystem:
      allOf:
      - $ref: "#/components/schemas/_arraysBuiltIn"
      - type: object
        properties:
          created:
            type: integer
            description: Creation time in milliseconds since UNIX epoch.
            format: int64
            readOnly: true
            example: 1502729489760
          destroyed:
            type: boolean
            description: |
              Is the file system destroyed?
            example: false
          fast_remove_directory_enabled:
            type: boolean
            description: |
              On a FlashBlade file system, returns the value of `true` if fast remove directory
              is enabled and `false` if it is not.
              On a FlashArray file system, the value is always `null`.
            example: false
          hard_limit_enabled:
            type: boolean
            description: |
              On a FlashBlade file system, returns the value of `true` if the file system's size
              is a hard limit quota and `false` if it is not.
              On a FlashArray file system, the value is always `null`.
            example: false
          http:
            type: object
            description: "HTTP configuration. On a FlashArray file system, the value\
              \ is always `null`."
            allOf:
            - $ref: "#/components/schemas/_http"
          nfs:
            type: object
            description: "NFS configuration. On a FlashArray file system, the value\
              \ is always `null`."
            allOf:
            - $ref: "#/components/schemas/_nfs"
          provisioned:
            type: integer
            description: |
              The provisioned size of the file system in bytes. A value of 0 means
              unlimited. On a FlashArray file system, the value is always `null`.
            format: int64
            example: 1099511627776
          smb:
            type: object
            description: "SMB configuration. On a FlashArray file system, the value\
              \ is always `null`."
            allOf:
            - $ref: "#/components/schemas/_smb"
          snapshot_directory_enabled:
            type: boolean
            description: |
              On a FlashBlade file system, returns the value of `true` if snapshot directory is enabled
              and `false` if it is not.
              On a FlashArray file system, the value is always `null`.
            example: false
        description: |
          A file system on an array, including both FlashArray and FlashBlade file systems.
      x-sourced-from: models/Pure1-1.1/file-system.yaml
    FileSystemReplicaLink:
      description: A replica link between two FlashBlade file systems.
      allOf:
      - $ref: "#/components/schemas/_replicaLink"
      - type: object
        properties:
          recovery_point:
            type: integer
            description: |
              Time when the last replicated snapshot was created, in milliseconds
              since the UNIX epoch. (i.e. the recovery point if the file system is
              promoted.)
            format: int64
            readOnly: true
            example: 1565034592494
          status_details:
            type: string
            description: |
              Detailed information about the status of the replica link when it is
              `unhealthy`.
          members:
            type: array
            description: |
              The union of source and target file systems in the replica link.
            items:
              $ref: "#/components/schemas/_resourceWithLocation"
          sources:
            type: array
            description: The source file systems in the replica link.
            items:
              $ref: "#/components/schemas/_resourceWithLocation"
          targets:
            type: array
            description: The target file systems in the replica link.
            items:
              $ref: "#/components/schemas/_resourceWithLocation"
        description: A replica link between two FlashBlade file systems.
      x-sourced-from: models/Pure1-1.1/file-system-replica-link.yaml
    FileSystemSnapshot:
      description: |
        A point-in-time image of the contents of a FlashBlade file system.
      allOf:
      - $ref: "#/components/schemas/_arraysBuiltIn"
      - type: object
        properties:
          created:
            type: integer
            description: Creation time in milliseconds since UNIX epoch.
            format: int64
            example: 1502729489760
          destroyed:
            type: boolean
            description: |
              Indicates if this snapshot has been destroyed and is pending
              eradication.
            example: false
          "on":
            $ref: "#/components/schemas/_fixedReferenceFqdn"
          source:
            type: object
            description: |
              A reference to the file system that the snapshot was taken from.
            allOf:
            - $ref: "#/components/schemas/_fixedReference"
          suffix:
            type: string
            description: Indicates the suffix of the snapshot.
            example: checkpoint_2018_01_01
      x-sourced-from: models/Pure1-1.1/file-system-snapshot.yaml
    Hardware:
      allOf:
      - $ref: "#/components/schemas/_arraysBuiltIn"
      - type: object
        properties:
          details:
            type: string
            description: |
              Details about the component if `status` is not `healthy`.
            example: Temperature too high
          identify_enabled:
            type: boolean
            description: "If true, the ID light is lit to visually identify the component."
            example: true
          model:
            type: string
            description: |
              Model number of the hardware component.
            example: DFSC1
          serial:
            type: string
            description: |
              Serial number of the hardware component.
            example: PSMFL1717009B
          slot:
            type: integer
            description: |
              Slot number occupied by the PCI Express card that hosts the component.
            format: int32
            example: 16
          speed:
            type: integer
            description: |
              Speed (in bytes per second) at which the component is operating.
            format: int64
            example: 24000000000
          status:
            type: string
            description: |
              Component status. Values include `critical`, `healthy`, `identifying`,
              `unhealthy`, `unclaimed`, `unknown`, `unrecognized`, and `unused`.
            example: critical
          temperature:
            type: integer
            description: |
              Temperature (in degrees Celsius) reported by the component.
            format: int32
            example: 25
          type:
            type: string
            description: |
              Type of the hardware component. Values include `am`, `chassis`, `controller`, `cooling`,
              `drive_bay`, `eth_port`, `fan`, `fc_port`, `flash_blade`, `ib_port`, `mgmt_port`,
              `nvram_bay`, `power_supply`, `sas_module`, `sas_port`, `storage_shelf`, and `temp_sensor`.
            example: controller
          voltage:
            type: integer
            description: |
              Voltage (in Volts) reported by the component.
            format: int32
            example: 206
        description: |
          A hardware component.
      x-sourced-from: models/Pure1-1.1/hardware.yaml
    HardwareConnector:
      allOf:
      - $ref: "#/components/schemas/_arraysBuiltIn"
      - type: object
        properties:
          connector_type:
            type: string
            description: Form-factor of the interface. Values include `QSFP` and `RJ-45`.
            example: QSFP
          lane_speed:
            type: number
            description: Configured speed of each lane in the connector in bits per
              second.
            format: int64
            example: 10000000000
          port_count:
            type: number
            description: Configured number of ports in the connector.
            format: int64
            example: 1.0
          transceiver_type:
            type: string
            description: |
              Type of transceiver plugged into the connector port.
              If the type cannot be auto-detected and the internal user has not
              specified a type, the value will be `Unknown`.
              If nothing is plugged into the QSFP port, the value will be `Unused`.
              Transceiver type is not applicable for RJ-45 connectors.
            example: 40GBASE-LR4
        description: |
          Details about the array's connection ports.
      x-sourced-from: models/Pure1-1.1/hardware-connector.yaml
    Invoice:
      type: object
      properties:
        id:
          type: string
          description: "The invoice number, a globally unique identifier for this\
            \ invoice."
          example: INV123456
        date:
          type: integer
          description: |
            The issuance date.
            Represented as a timestamp of 00:00 on that date in UTC, in milliseconds since UNIX epoch.
          format: int64
          example: 1672531200000
        status:
          type: string
          description: The invoice status. Values include `open` and `paid`.
          example: open
        amount:
          type: number
          description: "The total invoice amount, expressed in the currency defined\
            \ in `currency`."
          format: double
          example: 1070.0
        currency:
          type: string
          description: |
            The currency of the invoice in ISO 4217 format.
            This currency applies to the total invoice amount as well as all amounts in line items.
          example: USD
        due_date:
          type: integer
          description: |
            The payment due date.
            Represented as a timestamp of 00:00 on that date in UTC, in milliseconds since UNIX epoch.
          format: int64
          example: 1672531200000
        payment_terms:
          type: string
          description: The invoice payment terms.
          example: Net 45
        ship_date:
          type: integer
          description: |
            The invoice shipment date.
            Represented as a timestamp of 00:00 on that date in UTC, in milliseconds since UNIX epoch.
          format: int64
          example: 1672531200000
        sales_representative:
          type: string
          description: The sales representative that issued the invoice.
          example: John Doe
        partner_purchase_order:
          type: string
          description: The partner purchase order number.
          example: 123456-1
        end_user_purchase_order:
          type: string
          description: The end user customer purchase order number.
          example: 415Tib/400Tib/123456
        end_user_name:
          type: string
          description: The end user customer name.
          example: Pure Storage
        lines:
          type: array
          description: A list of invoice line items.
          items:
            $ref: "#/components/schemas/InvoiceLine"
        subscription:
          type: object
          description: A reference to which subscription this invoice belongs.
          allOf:
          - $ref: "#/components/schemas/_fixedReference"
      x-sourced-from: models/Pure1-1.1/invoice.yaml
    Metric:
      description: |
        A type of measurement recorded on a resource.
      allOf:
      - $ref: "#/components/schemas/_builtInAsOf"
      - type: object
        properties:
          availabilities:
            type: array
            description: |
              The available resolutions, aggregations and retentions of this metric.
            readOnly: true
            items:
              $ref: "#/components/schemas/_metricAvailability"
          description:
            type: string
            description: The additional description for the the metric.
            readOnly: true
          resource_types:
            type: array
            description: |
              The type of resource (as described by their endpoints) that this metric
              is available at. NOTE that a metric could be available for a combination
              of resource types, e.g. mirrored writes from "arrays" to "pods".
            readOnly: true
            items:
              type: string
              description: |
                Valid values are `arrays`, `pods`, and `volumes`.
              example: example_resource_type
          unit:
            type: string
            description: The unit of the metric.
            readOnly: true
            example: B/s
        x-readOnly: true
      x-sourced-from: models/Pure1-1.0/metric.yaml
    MetricHistory:
      allOf:
      - $ref: "#/components/schemas/_builtInAsOf"
      - type: object
        properties:
          aggregation:
            type: string
            description: The aggregation of the metric data.
            readOnly: true
            example: avg
          data:
            type: array
            description: |
              The data points of the metric corresponding to the time window,
              resolution and aggregation. The points are returned in a nested array
              of 2-element arrays. For each of the 2-element array, the 1st element
              is the UTC millisecond epoch, and the 2nd element is the value,
              e.g. [[1519362000000, 11], [1519362030000, 21], ...].
            readOnly: true
            items:
              type: array
              example:
              - 1502729489760
              - 123
              items:
                type: number
          resolution:
            type: integer
            description: The resolution of the metric data in milliseconds.
            format: int64
            readOnly: true
            example: 30000
          resources:
            type: array
            description: |
              The references to the resources that the metric data is for.
              For example, write-iops metric for an array will have one element in
              this list referencing the array entity. the write-iops from an array to
              a pod will contain two elements in this list - first element pointing
              to the array, and second element pointing to the pod.
            readOnly: true
            items:
              $ref: "#/components/schemas/_fixedReferenceFqdn"
          unit:
            type: string
            description: The unit of the metric data.
            readOnly: true
            example: B/s
        description: |
          Historical time-series data of a given metric on a resource.
        x-readOnly: true
      x-sourced-from: models/Pure1-1.1/metric-history.yaml
    NetworkInterface:
      allOf:
      - $ref: "#/components/schemas/_arraysBuiltIn"
      - type: object
        properties:
          address:
            type: string
            description: IP address of this network interface.
            example: 10.11.12.13
          enabled:
            type: boolean
            example: true
          gateway:
            type: string
            example: 10.20.30.40
          hwaddr:
            type: string
            description: Hardware address.
            example: 90:ef:ba:80:70:dc
          mtu:
            type: integer
            description: Maximum transmission unit.
            format: int32
            example: 9000
          netmask:
            type: string
            example: 255.255.255.0
          services:
            type: array
            description: Services and protocols that are enabled on the interface.
            items:
              type: string
              description: |
                Valid values are `iscsi`, `management`, `nvme/fc`, `nvme/roce`,
                  and `replication`.
              example: iscsi
          speed:
            type: integer
            description: Speed in bytes per second.
            format: int64
            example: 10000000000
          subinterfaces:
            type: array
            items:
              type: string
              example: ct0.eth0
        description: |
          A point of interconnection between the appliance and a private or public
          network. May be associated with a physical device or a representation of
          a virtual interface.
      x-sourced-from: models/Pure1-1.1/network-interface.yaml
    Pod:
      description: |
        An administrative domain, a data container, and a namespace for
        volumes and protection groups.
      allOf:
      - $ref: "#/components/schemas/_arraysResource"
      - type: object
        properties:
          mediator:
            type: string
            description: The URL of the mediator for this pod.
            example: purestorage
          source:
            type: object
            description: A reference to the source pod of a pod clone.
            allOf:
            - $ref: "#/components/schemas/_fixedReference"
      x-sourced-from: models/Pure1-1.1/pod.yaml
    PodReplicaLink:
      description: A replica link between two pods.
      allOf:
      - $ref: "#/components/schemas/_replicaLink"
      - type: object
        properties:
          members:
            type: array
            description: The union of source and target pods in the replica link.
            items:
              $ref: "#/components/schemas/_resourceWithLocations"
          recovery_point:
            type: integer
            description: |
              Time when the last piece of data was replicated, in milliseconds since
              the UNIX epoch, and the recovery point if the target pod is promoted.
              If the pod is currently baselining then the value is `null`.
          sources:
            type: array
            description: The source pods in the replica link.
            items:
              $ref: "#/components/schemas/_resourceWithLocations"
          status:
            type: string
            description: |
              Status of the replica link. Values include `replicating`, `idle`,
              `baselining`, `paused`, `quiescing`, `quiesced`, and `unhealthy`.
            example: replicating
          targets:
            type: array
            description: The target pods in the replica link.
            items:
              $ref: "#/components/schemas/_resourceWithLocations"
        description: A replica link between two pods.
      x-sourced-from: models/Pure1-1.1/pod-replica-link.yaml
    Policy:
      allOf:
      - $ref: "#/components/schemas/_arraysBuiltIn"
      - type: object
        properties:
          enabled:
            type: boolean
            description: Returns `true` if this policy is enabled.
            example: true
          rules:
            type: array
            items:
              $ref: "#/components/schemas/_policy_rule"
        description: |
          A set of rules that can be applied to resources.
      x-sourced-from: models/Pure1-1.1/policy.yaml
    PolicyMember:
      description: An association between a policy and a member.
      allOf:
      - $ref: "#/components/schemas/_timeAware"
      - type: object
        properties:
          policy:
            $ref: "#/components/schemas/_fixedReference"
          member:
            $ref: "#/components/schemas/_fixedReference"
      x-sourced-from: models/Pure1-1.0/policy-member.yaml
    Port:
      allOf:
      - $ref: "#/components/schemas/_arraysBuiltIn"
      - type: object
        properties:
          iqn:
            type: string
            description: "The iSCSI Qualified Name if the port is iSCSI, `null` otherwise."
            example: iqn.2010-06.com.purestorage:flasharray.393d930077be2977
          nqn:
            type: string
            description: "The NVMe Qualified Name if the port is NVMe-oF, `null` otherwise."
            example: nqn.2010-06.com.purestorage:flasharray.512f7bb185978505
          wwn:
            type: string
            description: "The Fibre Channel World Wide Name if the port is Fibre Channel,\
              \ `null` otherwise."
            example: 52:4A:93:70:4E:E5:68:00
          portal:
            type: string
            description: "The IP and port number if the port is iSCSI or NVMe-oF,\
              \ `null` otherwise."
            example: 10.16.200.27:3260
          failover:
            type: string
            description: |
              If the array port has failed over, returns the
              name of the port to which this port has failed over.
            example: CT0.ETH2
        description: A Purity//FA port.
      x-sourced-from: models/Pure1-1.1/port.yaml
    Subscription:
      description: |
        A Pure1 subscription.
      allOf:
      - $ref: "#/components/schemas/_builtInAsOf"
      - type: object
        properties:
          expiration_date:
            type: integer
            description: |
              Date when the subscription expires.
              Represented as a timestamp of 00:00 on that date in UTC, in
              milliseconds since UNIX epoch.
            format: int64
            example: 1636238104000
          service:
            type: string
            description: |
              The service type of the subscription. Values include
              `Evergreen//One`,
              `Evergreen//Flex`,
              `FlashStack as a Service`,
              `Storage as a Service`,
              `PaaS (Block Storage Service)`,
              `PaaS (File and Object Storage Service)`,
              `PaaS (Data Protection Service)`,
              and
              `Pure1 Subscription`.
            example: PaaS (Block Storage Service)
          start_date:
            type: integer
            description: |
              Date when the subscription starts.
              Represented as a timestamp of 00:00 on that date in UTC, in
              milliseconds since UNIX epoch.
            format: int64
            example: 1604702243000
          status:
            type: string
            description: |
              Current status of the subscription. Values include `active`,
              `terminated`, `poc-expired`, and `signed`.
            example: active
      x-sourced-from: models/Pure1-1.0/subscription.yaml
    SubscriptionLicense:
      allOf:
      - $ref: "#/components/schemas/_builtInAsOf"
      - type: object
        properties:
          average_on_demand:
            type: object
            description: |
              Estimated daily on-demand usage of the license from the current calendar
              quarter to date.
            allOf:
            - $ref: "#/components/schemas/_current_metric"
          expiration_date:
            type: integer
            description: |
              Date when the license expires.
              Represented as a timestamp of 00:00 on that date in UTC, in
              milliseconds since UNIX epoch.
            format: int64
            example: 1636238104000
          marketplace_partner:
            type: object
            description: |
              Reference information about the marketplace partner of this license.
            allOf:
            - $ref: "#/components/schemas/_marketplace_partner"
          reservation:
            type: object
            description: |
              Current reservation amount of the license.
            allOf:
            - $ref: "#/components/schemas/_current_metric"
          resources:
            type: array
            description: |
              References to the resources that operate under this license.
            items:
              $ref: "#/components/schemas/_license_resource_reference"
          service_tier:
            type: string
            description: |
              The tier of the service for the license.
            example: //Block - Ultra
          start_date:
            type: integer
            description: |
              Date when the license starts.
              Represented as a timestamp of 00:00 on that date in UTC, in
              milliseconds since UNIX epoch.
            format: int64
            example: 1604702243000
          subscription:
            type: object
            description: |
              A reference to which subscription this license belongs.
            allOf:
            - $ref: "#/components/schemas/_fixedReference"
          usage:
            type: object
            description: |
              Usage of the license, averaged over the last day.
            allOf:
            - $ref: "#/components/schemas/_current_metric"
        description: |
          A license belonging to a Pure1 subscription.
      x-sourced-from: models/Pure1-1.1/subscription-license.yaml
    SupportContract:
      type: object
      properties:
        start_date:
          type: integer
          description: |
            Date when the support contract started.
            Represented as a timestamp of 00:00 on that date in UTC, in milliseconds since UNIX epoch.
          format: int64
          example: 1550966400000
        end_date:
          type: integer
          description: |
            Date when the support contract ended.
            Represented as a timestamp of 00:00 on that date in UTC, in milliseconds since UNIX epoch.
          format: int64
          example: 1582502400000
        resource:
          $ref: "#/components/schemas/_fixedReferenceFqdn"
      x-sourced-from: models/Pure1-1.1/support-contract.yaml
    SustainabilityArray:
      description: |+
        A single FlashArray/FlashBlade appliance Sustainability assessment information.

      allOf:
      - $ref: "#/components/schemas/_builtInAsOf"
      - type: object
        properties:
          install_address:
            type: object
            description: |
              The address where the array is installed. This address is also where
              replacement parts will be shipped to.
            allOf:
            - $ref: "#/components/schemas/_install_address"
          reporting_status:
            type: string
            description: |
              Enum value that describes what is the status of the latest assessment. Valid values include:
              not_enough_data - There was not enough data
                to calculate assessment level of the appliance.
              unsupported_purity_version - The appliance is running
                an unsupported version of Purity operating system.
                It is an old Purity version which does not provide
                enough data for assessing the sustainability metrics.
              not_phoning_home - The appliance has not phoned home
                for more than 7 days so the assessment level was not calculated
              assessment_ready - Assessment is ready and it is available under `assessment` field.
            readOnly: true
            example: assessment_ready
          assessment:
            $ref: "#/components/schemas/SustainabilityAssessment"
      x-sourced-from: models/Pure1-1.1/sustainability-array.yaml
    SustainabilityInsightArray:
      description: |
        A single FlashArray/FlashBlade appliance Sustainability assessment insights information.
        The _as_of is the time when the computation happened.
        Only the data from the given time interval was used for the computation of insight.
        Typically the last week of data is used for the computation of insights.
      allOf:
      - $ref: "#/components/schemas/_timeAware"
      - $ref: "#/components/schemas/_time_interval"
      - type: object
        properties:
          resource:
            $ref: "#/components/schemas/_fixedReferenceFqdn"
          type:
            type: string
            description: |
              The type of the insight.
            readOnly: true
            example: upgrade_purity_version_for_array_wide
          severity:
            type: string
            description: |
              The severity of the insight.
              Should be one of medium, high.
            readOnly: true
            example: medium
          additional_data:
            type: object
            properties: {}
            description: |
              The arbitrary data associated with the insight.
            readOnly: true
            example:
              required_version: 6.3.0
      x-sourced-from: models/Pure1-1.1/sustainability-insight-array.yaml
    Tag:
      type: object
      properties:
        key:
          type: string
          description: Key of the tag.
          example: example_key
        namespace:
          type: string
          description: |
            Namespace of the tag.
            Namespace identifies the category of the tag.
          example: pure1
        resource:
          $ref: "#/components/schemas/_fixedReference"
        tag_organization_id:
          type: integer
          description: Org id of the tag.
          format: int64
          example: 101
        value:
          type: string
          description: Value of the tag.
          example: value123
      x-sourced-from: models/Pure1-1.0/tag.yaml
    Target:
      allOf:
      - $ref: "#/components/schemas/_arraysBuiltIn"
      - type: object
        properties:
          address:
            type: string
            description: IP address or FQDN of the target system.
            example: example_name.dc1.example.com
          status:
            type: string
            description: |
              Status of the connection. Values include `connected` and `connecting`.
            readOnly: true
            example: connected
          status_details:
            type: string
            description: |
              Additional information describing any issues encountered when
              connecting, or `null` if the `status` is `connected`.
            readOnly: true
        description: |
          An external target system.
      x-sourced-from: models/Pure1-1.1/target.yaml
    Volume:
      allOf:
      - $ref: "#/components/schemas/_arraysResource"
      - type: object
        properties:
          created:
            type: integer
            description: Creation time in milliseconds since UNIX epoch.
            format: int64
            readOnly: true
            example: 1502729489760
          destroyed:
            type: boolean
            description: Whether this volume has been destroyed or not.
            readOnly: true
            example: false
          eradicated:
            type: boolean
            description: Whether this volume has been eradicated or not.
            readOnly: true
            example: false
          pod:
            type: object
            description: |
              A reference to the pod this volume belongs to, if applicable.
            allOf:
            - $ref: "#/components/schemas/_fixedReference"
          provisioned:
            maximum: 4503599627370496
            minimum: 1048576
            type: integer
            description: Provisioned size of the volume in bytes.
            format: int64
            example: 2048576
          serial:
            type: string
            description: |
              Serial number generated by Purity when the volume was created.
            readOnly: true
            example: C68B5DCF2C1A4C9400012F92
          source:
            type: object
            description: |
              A reference to the volume this volume was cloned from, if applicable.
            allOf:
            - $ref: "#/components/schemas/_fixedReference"
        description: |
          A disk-like random access virtual storage device that a FlashArray
          system exports to hosts via a logical unit number (LUN). For a host,
          a volume contains a number of 512-byte sectors in which data can be
          written and from which it can be read.
      x-sourced-from: models/Pure1-1.1/volume.yaml
    VolumeSnapshot:
      description: |
        A point-in-time image of the contents of a volume.
      allOf:
      - $ref: "#/components/schemas/_arraysBuiltIn"
      - type: object
        properties:
          created:
            type: integer
            description: Creation time in milliseconds since UNIX epoch.
            format: int64
            example: 1502729489760
          destroyed:
            type: boolean
            description: |
              Indicates if this snapshot has been destroyed and is pending
              eradication.
            example: false
          "on":
            type: object
            description: |
              A reference to the array or the offload where the snapshot is stored.
            allOf:
            - $ref: "#/components/schemas/_fixedReferenceFqdn"
          pod:
            type: object
            description: |
              A reference to the pod the source volume belongs to, if applicable.
            allOf:
            - $ref: "#/components/schemas/_fixedReference"
          provisioned:
            type: integer
            description: |
              Indicates the size (in bytes) of the volume when the snapshot was taken.
            format: int64
            example: 2048576
          serial:
            type: string
            description: |
              Serial number generated by Purity when the snapshot was created.
            example: C68B5DCF2C1A4C9400012F92
          snapshot_group:
            type: object
            description: |
              A reference to a consistency group snapshot that this snapshot is
              part of.
            allOf:
            - $ref: "#/components/schemas/_fixedReference"
          source:
            type: object
            description: |
              A reference to the volume that the snapshot was taken from.
            allOf:
            - $ref: "#/components/schemas/_fixedReference"
          suffix:
            type: string
            description: |
              Suffix added to the source volume name used to generate the
              volume snapshot name.
            example: checkpoint_2018_01_01
      x-sourced-from: models/Pure1-1.1/volume-snapshot.yaml
    AlertsGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/AlertsResponse"
      x-sourced-from: responses/Pure1-1.1/alerts-get-response.yaml
    ArrayGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/ArrayResponse"
      x-sourced-from: responses/Pure1-1.1/array-get-response.yaml
    SupportContractGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/SupportContractResponse"
      x-sourced-from: responses/Pure1-1.1/support-contract-get-response.yaml
    TagGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/TagResponse"
      x-sourced-from: responses/Pure1-1.0/tag-get-response.yaml
    TagResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Tag"
      x-sourced-from: responses/Pure1-1.0/tag-response.yaml
    SustainabilityArrayGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/SustainabilityArrayResponse"
      x-sourced-from: responses/Pure1-1.1/sustainability-array-get-response.yaml
    SustainabilityInsightArrayGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/SustainabilityInsightArrayResponse"
      x-sourced-from: responses/Pure1-1.1/sustainability-insight-array-get-response.yaml
    AuditsGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/AuditsResponse"
      x-sourced-from: responses/Pure1-1.1/audits-get-response.yaml
    BladeGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/BladeResponse"
      x-sourced-from: responses/Pure1-1.1/blade-get-response.yaml
    BucketGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/BucketResponse"
      x-sourced-from: responses/Pure1-1.1/bucket-get-response.yaml
    BucketReplicaLinkGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/BucketReplicaLinkResponse"
      x-sourced-from: responses/Pure1-1.1/bucket-replica-link-get-response.yaml
    ControllerGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/ControllerResponse"
      x-sourced-from: responses/Pure1-1.1/controller-get-response.yaml
    DirectoryGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/DirectoryResponse"
      x-sourced-from: responses/Pure1-1.1/directory-get-response.yaml
    DriveGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/DriveResponse"
      x-sourced-from: responses/Pure1-1.1/drive-get-response.yaml
    FileSystemGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/FileSystemResponse"
      x-sourced-from: responses/Pure1-1.1/file-system-get-response.yaml
    PolicyMembersGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/PolicyMembersResponse"
      x-sourced-from: responses/Pure1-1.0/policy-members-get-response.yaml
    FileSystemReplicaLinkGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/FileSystemReplicaLinkResponse"
      x-sourced-from: responses/Pure1-1.1/file-system-replica-link-get-response.yaml
    FileSystemSnapshotGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/FileSystemSnapshotResponse"
      x-sourced-from: responses/Pure1-1.1/file-system-snapshot-get-response.yaml
    HardwareGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/HardwareResponse"
      x-sourced-from: responses/Pure1-1.1/hardware-get-response.yaml
    HardwareConnectorGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/HardwareConnectorResponse"
      x-sourced-from: responses/Pure1-1.1/hardware-connector-get-response.yaml
    InvoiceGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/InvoiceResponse"
      x-sourced-from: responses/Pure1-1.1/invoice-get-response.yaml
    MetricGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/MetricResponse"
      x-sourced-from: responses/Pure1-1.0/metric-get-response.yaml
    MetricHistoryGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/MetricHistoryResponse"
      x-sourced-from: responses/Pure1-1.1/metric-history-get-response.yaml
    NetworkInterfaceGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/NetworkInterfaceResponse"
      x-sourced-from: responses/Pure1-1.1/network-interface-get-response.yaml
    ObjectStoreAccountGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/ObjectStoreAccountResponse"
      x-sourced-from: responses/Pure1-1.1/object-store-account-get-response.yaml
    PodGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/PodResponse"
      x-sourced-from: responses/Pure1-1.1/pod-get-response.yaml
    PodReplicaLinkGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/PodReplicaLinkResponse"
      x-sourced-from: responses/Pure1-1.1/pod-replica-link-get-response.yaml
    PolicyGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/PolicyResponse"
      x-sourced-from: responses/Pure1-1.1/policy-get-response.yaml
    PortGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/PortResponse"
      x-sourced-from: responses/Pure1-1.1/port-get-response.yaml
    SubscriptionGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/SubscriptionResponse"
      x-sourced-from: responses/Pure1-1.0/subscription-get-response.yaml
    SubscriptionLicenseGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/SubscriptionLicenseResponse"
      x-sourced-from: responses/Pure1-1.1/subscription-license-get-response.yaml
    TargetGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/TargetResponse"
      x-sourced-from: responses/Pure1-1.1/target-get-response.yaml
    VolumeGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/VolumeResponse"
      x-sourced-from: responses/Pure1-1.1/volume-get-response.yaml
    VolumeSnapshotGetResponse:
      allOf:
      - $ref: "#/components/schemas/PageInfo"
      - $ref: "#/components/schemas/VolumeSnapshotResponse"
      x-sourced-from: responses/Pure1-1.1/volume-snapshot-get-response.yaml
    _arraysResource:
      description: |
        A built-in resource that exists on one or multiple arrays.
      allOf:
      - $ref: "#/components/schemas/_resource"
      - $ref: "#/components/schemas/_arrays"
      x-sourced-from: models/Pure1-1.1/_arrays-resource.yaml
    _bladeArrayStatus:
      allOf:
      - $ref: "#/components/schemas/_fixedReference"
      - type: object
        properties:
          used_blades:
            type: integer
            description: |
              Count of used blade slots in the array.
            format: int64
            example: 10
          total_blades:
            type: integer
            description: |
              Count of total blade slots in the array.
            format: int64
            example: 15
          fqdn:
            type: string
            description: |
              The fully qualified domain name of the appliance when `resource_type` is `arrays`,
              `null` otherwise.
            readOnly: true
            example: example_name.dc1.example.com
      x-sourced-from: models/Pure1-1.1/_blade-array-status.yaml
    _resourceWithLocation:
      description: |
        An ordinary resource that exists in one location.
      allOf:
      - $ref: "#/components/schemas/_fixedReference"
      - type: object
        properties:
          location:
            $ref: "#/components/schemas/_fixedReferenceFqdn"
      x-sourced-from: models/Pure1-1.1/_resource-with-location.yaml
    _arraysBuiltIn:
      description: |
        A built-in resource that exists on one or multiple arrays.
      allOf:
      - $ref: "#/components/schemas/_builtInAsOf"
      - $ref: "#/components/schemas/_arrays"
      x-sourced-from: models/Pure1-1.1/_arrays-built-in.yaml
    _driveArrayStatus:
      allOf:
      - $ref: "#/components/schemas/_fixedReference"
      - type: object
        properties:
          drive_count:
            type: integer
            description: |
              Count of drives in the array.
            format: int64
            example: 24
          total_capacity:
            type: integer
            description: |
              The total capacity of all drives in the array.
            format: int64
            example: 7625244672
          fqdn:
            type: string
            description: |
              The fully qualified domain name of the appliance when `resource_type` is `arrays`,
              `null` otherwise.
            readOnly: true
            example: example_name.dc1.example.com
      x-sourced-from: models/Pure1-1.1/_drive-array-status.yaml
    _fixedReferenceFqdn:
      allOf:
      - $ref: "#/components/schemas/_fixedReference"
      - type: object
        properties:
          fqdn:
            type: string
            description: |
              The fully qualified domain name of the appliance when `resource_type` is `arrays`,
              `null` otherwise.
            readOnly: true
            example: example_name.dc1.example.com
      x-sourced-from: models/Pure1-1.1/_fixed-reference-fqdn.yaml
    _fixedReference:
      type: object
      properties:
        id:
          type: string
          description: The opaque and unique id of this resource.
          readOnly: true
          example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
        name:
          type: string
          description: The name of this resource.
          readOnly: true
          example: example_name
        resource_type:
          type: string
          description: |
            The type of this resource represented by the name of its REST endpoint.
            For example, "arrays", "network-interfaces", and "metrics".
            The value may be `null` if the resource is not represented.
          readOnly: true
          example: example_resource_type
      x-readOnly: true
      x-sourced-from: models/Pure1-1.0/_fixed-reference.yaml
    InvoiceLine:
      type: object
      properties:
        item:
          type: string
          description: The name of invoice item.
          example: "SS-DFM-15TB 1MO,ADV,GOLD"
        quantity:
          minimum: 0
          type: integer
          description: The quantity of current invoice item.
          format: int64
          example: 2
        description:
          type: string
          example: "SS-DFM-15TB 1 Month Evergreen Forever Subscription, NBD Delivery,\
            \ 24/7 Support"
        start_date:
          type: integer
          description: |
            The invoice item start date.
            Represented as a timestamp of 00:00 on that date in UTC, in milliseconds since UNIX epoch.
          format: int64
          example: 1672531200000
        end_date:
          type: integer
          description: |
            The invoice item end date.
            Represented as a timestamp of 00:00 on that date in UTC, in milliseconds since UNIX epoch.
          format: int64
          example: 1672531200000
        components:
          type: array
          description: The sub-components of current invoice item.
          items:
            $ref: "#/components/schemas/InvoiceLineComponent"
        unit_price:
          type: number
          description: "The unit price of current invoice item, currency is specified\
            \ in invoice currency."
          format: double
          example: 500.0
        amount:
          type: number
          description: "The total price of current invoice item, currency is specified\
            \ in invoice currency."
          format: double
          example: 1000.0
        tax:
          $ref: "#/components/schemas/_tax"
      x-sourced-from: models/Pure1-1.1/invoice-line.yaml
    _builtInAsOf:
      description: |+
        A built-in resource. Many are singletons predefined by Purity (e.g., support
        settings). Some correspond to a piece of software, like an app, or hardware,
        like a controller. Others are created by the system in response to some event
        (e.g., alerts, audit records).

        Typically, a user can't create, delete or rename a built-in resource. A few
        can be created or deleted, but not renamed because the names are meaningful
        to Purity (e.g., VIFs).

      allOf:
      - $ref: "#/components/schemas/_timeAware"
      - type: object
        properties:
          id:
            type: string
            description: "A non-modifiable, globally unique ID chosen by the system."
            readOnly: true
            example: 01c2889a-4124-49ff-8cbd-c33405ede123
          name:
            type: string
            description: "A non-modifiable, locally unique name chosen by the system."
            readOnly: true
            example: example_name
      x-sourced-from: models/Pure1-1.0/_built-in-as-of.yaml
    _metricAvailability:
      type: object
      properties:
        aggregations:
          type: array
          description: "Available aggregations for this metric at the given resolution,\
            \ e.g. 'avg', 'max'."
          readOnly: true
          items:
            type: string
            description: |
              Valid values are `avg` and `max`.
            example: avg
        resolution:
          type: integer
          description: An available resolution of this metric in milliseconds.
          format: int64
          readOnly: true
          example: 30000
        retention:
          type: integer
          description: The retention at this given resolution in milliseconds.
          format: int64
          readOnly: true
          example: 2592000000
      x-readOnly: true
      x-sourced-from: models/Pure1-1.0/_metric-availability.yaml
    _resourceWithLocations:
      description: |
        A resource that may relate to multiple locations.
      allOf:
      - $ref: "#/components/schemas/_fixedReference"
      - type: object
        properties:
          locations:
            type: array
            items:
              $ref: "#/components/schemas/_fixedReferenceFqdn"
      x-sourced-from: models/Pure1-1.1/_resource-with-locations.yaml
    _timeAware:
      type: object
      properties:
        _as_of:
          type: integer
          description: The freshness of the data (timestamp in millis since epoch).
          format: int64
          readOnly: true
          example: 1502729489760
      x-sourced-from: models/Pure1-1.0/_time-aware.yaml
    _license_resource_reference:
      allOf:
      - $ref: "#/components/schemas/_fixedReferenceFqdn"
      - type: object
        properties:
          activation_time:
            type: integer
            description: |
              Time when the resource is activated under the license, in
              milliseconds since UNIX epoch.
            format: int64
            example: 1604702243000
          usage:
            type: object
            description: |
              Current usage of the resource under the license.
            allOf:
            - $ref: "#/components/schemas/_current_metric"
      x-sourced-from: models/Pure1-1.1/_license_resource_reference.yaml
    SustainabilityAssessment:
      description: |
        A FlashArray or FlashBlade Sustainability assessment information.
        The _as_of is the time when the computation happened.
        Only the data from the given time interval was used for the aggregation.
        Typically the last week of data is used for the aggregation.
      allOf:
      - $ref: "#/components/schemas/_timeAware"
      - $ref: "#/components/schemas/_time_interval"
      - type: object
        properties:
          shelves:
            type: integer
            description: |
              The number of expansion shelves of the FlashArray appliance.
              It is always zero for FlashBlade appliances.
            readOnly: true
            example: 1
          chassis:
            type: integer
            description: |
              The number of chassis of the appliance, always one for FlashArray appliances.
            readOnly: true
            example: 1
          blades:
            type: integer
            description: |
              The number of blades of the FlashBlade appliance, always zero for FlashArray appliances.
            readOnly: true
            example: 15
          rack_units:
            type: integer
            description: The total number of rack units occupied by the appliance.
            readOnly: true
            example: 4
          capacity_utilization:
            type: number
            description: |
              The percentage of the used capacity.
              Average over the assessment window.
            readOnly: true
            example: 0.68
          array_data_reduction:
            type: number
            description: |
              The data reduction ratio of the appliance.
              Average over the assessment window.
            readOnly: true
            example: 2.5
          array_total_load:
            type: number
            description: |
              The load percentage.
              Average over the assessment window.
            readOnly: true
            example: 0.23
          power_typical_spec:
            type: number
            description: |
              The typical power consumption of the appliance in Watts.
              The value is derived from benchmark data and remains static for the model and configuration.
            readOnly: true
            example: 500.0
          power_peak_spec:
            type: number
            description: |
              The peak power consumption of the appliance in Watts.
              The value is derived from benchmark data and remains static for the model and configuration.
            readOnly: true
            example: 600.0
          power_average:
            type: number
            description: |
              The average of power consumption of the appliance.
              Average over the assessment window.
            readOnly: true
            example: 524.25
          heat_typical_spec:
            type: number
            description: |
              The typical heat production of the appliance in BTU/hr.
              The value is derived from benchmark data and remains static for the model and configuration.
            readOnly: true
            example: 1705.0
          heat_peak_spec:
            type: number
            description: |
              The peak heat production of the appliance in BTU/hr.
              The value is derived from benchmark data and remains static for the model and configuration.
            readOnly: true
            example: 2046.0
          heat_average:
            type: number
            description: |
              The average of heat production of the appliance in BTU/Hr.
              Average over the assessment window.
            readOnly: true
            example: 1787.69
          power_per_used_space:
            type: number
            description: The average of power consumption per TiB of used space.
            readOnly: true
            example: 22.5
          power_per_usable_capacity:
            type: number
            description: The average of power consumption per TiB of usable capacity.
            readOnly: true
            example: 5.4
          assessment_level:
            type: string
            description: |
              The assessment level of an appliance. Valid values include:
              good - The assessment level of appliance is GOOD - all green.
              recommendation - There are some actions
                that can be done to bring appliance to a GOOD level.
              action_required - The lowest level of assessment.
                Some actions are required to improve the assessment level.
            readOnly: true
            example: good
      x-sourced-from: models/Pure1-1.1/sustainability-assessment.yaml
    _install_address:
      type: object
      properties:
        street_address:
          type: string
          description: The 1-line format street address of the array install address.
          readOnly: true
          example: "599 Castro St, Mountain View, CA 94041 United States"
        geolocation:
          type: object
          description: |
            The geolocation that contains the latitude and the longitude of the address.
          allOf:
          - $ref: "#/components/schemas/_geolocation"
        updated:
          type: integer
          description: |
            The epoch timestamp, in milliseconds, that denotes when the address was updated.
          readOnly: true
          example: 1548080949
      x-sourced-from: models/Pure1-1.1/_install_address.yaml
    _time_interval:
      type: object
      properties:
        _interval_start:
          type: integer
          description: The timestamp of the start of the time interval.
          format: int64
          readOnly: true
          example: 1501519889760
        _interval_end:
          type: integer
          description: The timestamp of the end of the time interval.
          format: int64
          readOnly: true
          example: 1502729489760
      x-sourced-from: models/Pure1-1.1/_time_interval.yaml
    Error:
      type: object
      properties:
        errors:
          type: array
          description: The list of errors encountered.
          items:
            $ref: "#/components/schemas/_errorErrors"
      x-sourced-from: models/Pure1-1.0/error.yaml
    ErrorNoContext:
      type: object
      properties:
        message:
          type: string
          example: Something was wrong
      x-sourced-from: models/Pure1-1.0/error-no-context.yaml
    PageInfo:
      type: object
      properties:
        continuation_token:
          type: string
          description: |
            Continuation token that can be provided in the continuation_token
            query param to get the next page of data.
            If you use the continuation token to page through data you
            are guaranteed to get all items exactly once regardless of
            how items are modified. If an item is added or deleted during
            the pagination then it may or may not be returned.
            The continuation token is generated if the limit is less
            than the remaining number of items, and the default sort is used
            (no sort is specified).
          example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
        total_item_count:
          type: integer
          description: Total number of items after applying filter params.
          format: int32
          example: 1
      x-sourced-from: responses/Pure1-1.0/page-info.yaml
    AlertsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Alert"
      x-sourced-from: responses/Pure1-1.1/alerts-response.yaml
    ArrayResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Array"
      x-sourced-from: responses/Pure1-1.1/array-response.yaml
    SupportContractResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/SupportContract"
      x-sourced-from: responses/Pure1-1.1/support-contract-response.yaml
    TagPut:
      type: object
      properties:
        key:
          type: string
          description: Key of the tag.
          example: example_key
        value:
          type: string
          description: Value of the tag.
          example: value123
      x-sourced-from: models/Pure1-1.0/tag-put.yaml
    SustainabilityArrayResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/SustainabilityArray"
      x-sourced-from: responses/Pure1-1.1/sustainability-array-response.yaml
    SustainabilityInsightArrayResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/SustainabilityInsightArray"
      x-sourced-from: responses/Pure1-1.1/sustainability-insight-array-response.yaml
    AuditsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Audit"
      x-sourced-from: responses/Pure1-1.1/audits-response.yaml
    BladeResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Blade"
      x-sourced-from: responses/Pure1-1.1/blade-response.yaml
    BucketResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Bucket"
      x-sourced-from: responses/Pure1-1.1/bucket-response.yaml
    BucketReplicaLinkResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/BucketReplicaLink"
      x-sourced-from: responses/Pure1-1.1/bucket-replica-link-response.yaml
    ControllerResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Controller"
      x-sourced-from: responses/Pure1-1.1/controller-response.yaml
    DirectoryResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Directory"
      x-sourced-from: responses/Pure1-1.1/directory-response.yaml
    DriveResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Drive"
      x-sourced-from: responses/Pure1-1.1/drive-response.yaml
    FileSystemResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/FileSystem"
      x-sourced-from: responses/Pure1-1.1/file-system-response.yaml
    PolicyMembersResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/PolicyMember"
      x-sourced-from: responses/Pure1-1.0/policy-members-response.yaml
    FileSystemReplicaLinkResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/FileSystemReplicaLink"
      x-sourced-from: responses/Pure1-1.1/file-system-replica-link-response.yaml
    FileSystemSnapshotResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/FileSystemSnapshot"
      x-sourced-from: responses/Pure1-1.1/file-system-snapshot-response.yaml
    HardwareResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Hardware"
      x-sourced-from: responses/Pure1-1.1/hardware-response.yaml
    HardwareConnectorResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/HardwareConnector"
      x-sourced-from: responses/Pure1-1.1/hardware-connector-response.yaml
    InvoiceResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Invoice"
      x-sourced-from: responses/Pure1-1.1/invoice-response.yaml
    MetricResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Metric"
      x-sourced-from: responses/Pure1-1.0/metric-response.yaml
    MetricHistoryResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/MetricHistory"
      x-sourced-from: responses/Pure1-1.1/metric-history-response.yaml
    NetworkInterfaceResponse:
      type: object
      properties:
        items:
          type: array
          description: A list of network interface objects.
          items:
            $ref: "#/components/schemas/NetworkInterface"
      x-sourced-from: responses/Pure1-1.1/network-interface-response.yaml
    ObjectStoreAccountResponse:
      type: object
      properties:
        items:
          type: array
          description: A list of object store accounts.
          items:
            $ref: "#/components/schemas/ObjectStoreAccount"
      x-sourced-from: responses/Pure1-1.1/object-store-account-response.yaml
    PodResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Pod"
      x-sourced-from: responses/Pure1-1.1/pod-response.yaml
    PodReplicaLinkResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/PodReplicaLink"
      x-sourced-from: responses/Pure1-1.1/pod-replica-link-response.yaml
    PolicyResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Policy"
      x-sourced-from: responses/Pure1-1.1/policy-response.yaml
    PortResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Port"
      x-sourced-from: responses/Pure1-1.1/port-response.yaml
    SubscriptionResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Subscription"
      x-sourced-from: responses/Pure1-1.0/subscription-response.yaml
    SubscriptionLicenseResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/SubscriptionLicense"
      x-sourced-from: responses/Pure1-1.1/subscription-license-response.yaml
    TargetResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Target"
      x-sourced-from: responses/Pure1-1.1/target-response.yaml
    VolumeResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Volume"
      x-sourced-from: responses/Pure1-1.1/volume-response.yaml
    VolumeSnapshotResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/VolumeSnapshot"
      x-sourced-from: responses/Pure1-1.1/volume-snapshot-response.yaml
    _resource:
      description: |
        An ordinary (as opposed to built-in) resource that can be created, named,
        renamed, or deleted by the user. This might be a virtual resource (e.g.,
        a volume), or correspond to something in the physical environment, like a
        host or a server.
      allOf:
      - $ref: "#/components/schemas/_timeAware"
      - type: object
        properties:
          id:
            type: string
            description: "A non-modifiable, globally unique ID chosen by the system."
            readOnly: true
            example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
          name:
            type: string
            description: "A modifiable, locally unique name chosen by the user."
            example: example_name
      x-sourced-from: models/Pure1-1.0/_resource.yaml
    _arrays:
      type: object
      properties:
        arrays:
          type: array
          description: |
            The list of arrays where this resource exists. Many resources are on a single array, but
            some resources, such as pods, can be shared across multiple arrays.
          readOnly: true
          items:
            $ref: "#/components/schemas/_fixedReferenceFqdn"
      x-readOnly: true
      x-sourced-from: models/Pure1-1.1/_arrays.yaml
    _replicaLink:
      allOf:
      - $ref: "#/components/schemas/_resourceNoName"
      - type: object
        properties:
          lag:
            type: integer
            description: |
              Duration, in milliseconds, which represents how far behind the
              replication `target` is from the `source`.
            format: int64
            readOnly: true
            example: 1560
          paused:
            type: boolean
            description: |
              Returns `true` if the replica link is paused.
            example: false
          recovery_point:
            type: integer
            description: |
              Time when the last piece of data was replicated, measured in
              milliseconds since the UNIX epoch, and the recovery point of the
              resource.
            format: int64
            readOnly: true
            example: 1565034592494
          status:
            type: string
            description: |
              Status of the replica link. Values include `replicating`, `idle`,
              and `unhealthy`.
            example: replicating
      x-sourced-from: models/Pure1-1.0/_replica-link.yaml
    _http:
      type: object
      properties:
        enabled:
          type: boolean
          description: Is the protocol enabled?
          example: false
      x-sourced-from: models/Pure1-1.0/_http.yaml
    _nfs:
      type: object
      properties:
        enabled:
          type: boolean
          description: Is the protocol enabled?
          example: false
        rules:
          type: string
          description: NFS rules.
          example: 10.0.0.1(ro)
      x-sourced-from: models/Pure1-1.0/_nfs.yaml
    _smb:
      type: object
      properties:
        enabled:
          type: boolean
          description: |
            Is the protocol enabled?
      x-sourced-from: models/Pure1-1.0/_smb.yaml
    _tax:
      type: object
      properties:
        percentage:
          maximum: 1
          minimum: 0
          type: number
          description: The tax ratio in percentage.
          format: float
          example: 0.07
        amount:
          type: number
          description: "The total taxes of current invoice item, currency is specified\
            \ in invoice currency."
          format: double
          example: 70.0
        exemption_statement:
          type: string
          description: The tax exemption statement.
      x-sourced-from: models/Pure1-1.1/_tax.yaml
    InvoiceLineComponent:
      type: object
      properties:
        item:
          type: string
          description: The name of invoice component.
          example: 08-0144
        quantity:
          minimum: 0
          type: integer
          description: The quantity of current invoice component.
          format: int64
          example: 1
        description:
          type: string
          example: 24/7 support
      x-sourced-from: models/Pure1-1.1/invoice-line-component.yaml
    _policy_rule:
      type: object
      properties:
        at:
          type: integer
          description: |
            Time of day to take the snapshot, in milliseconds since 00:00 in the
            specified `time_zone`. Only valid if `every` is set as whole days.
          format: int64
          example: 32400000
        every:
          type: integer
          description: "How often to take snapshots, in milliseconds."
          format: int64
          example: 86400000
        keep_for:
          type: integer
          description: "How long to keep snapshots, in milliseconds."
          format: int64
          example: 86400000
        time_zone:
          type: string
          description: The time zone in which the `at` rule is applied.
          example: America/Los_Angeles
      description: A rule that can be added to a policy.
      x-sourced-from: models/Pure1-1.0/_policy_rule.yaml
    _current_metric:
      type: object
      properties:
        data:
          type: number
          description: |
            The data value.
          example: 123.0
        metric:
          type: object
          description: |
            A reference to the metric this data measures.
          allOf:
          - $ref: "#/components/schemas/_fixedReference"
        unit:
          type: string
          description: The unit of the metric.
          example: B
      x-sourced-from: models/Pure1-1.0/_current_metric.yaml
    _marketplace_partner:
      type: object
      properties:
        name:
          type: string
          description: |
            Name or identifier of the marketplace parter who owns the
            reference ID.
          example: pure1
        reference_id:
          type: string
          description: |
            External ID the marketplace partner knows to refer to this license.
      x-sourced-from: models/Pure1-1.0/_marketplace_partner.yaml
    _geolocation:
      type: object
      properties:
        latitude:
          type: number
          description: The latitude of the address.
          readOnly: true
          example: 23.234
        longitude:
          type: number
          description: The longitude of the address.
          readOnly: true
          example: 123.9834
      x-sourced-from: models/Pure1-1.1/_geolocation.yaml
    _errorErrors:
      type: object
      properties:
        context:
          type: string
          example: Error with ...
        message:
          type: string
          example: Something was wrong
      x-sourced-from: models/Pure1-1.0/_error-errors.yaml
    ObjectStoreAccount:
      allOf:
      - $ref: "#/components/schemas/_arraysResource"
      - type: object
        properties:
          created:
            type: integer
            description: "Creation timestamp of the object, in milliseconds since\
              \ Unix epoch."
            format: int64
            readOnly: true
            example: 1502729489760
          object_count:
            type: integer
            description: The number of objects within the account.
            format: int64
            readOnly: true
            example: 15
      x-sourced-from: models/Pure1-1.1/object-store-account.yaml
    _resourceNoName:
      description: |
        An ordinary (as opposed to built-in) resource that can be created or deleted
        by the user. This might be a virtual resource (e.g., a volume), or correspond
        to something in the physical environment, like a host or a server.
      allOf:
      - $ref: "#/components/schemas/_timeAware"
      - type: object
        properties:
          id:
            type: string
            description: "A non-modifiable, globally unique ID chosen by the system."
            readOnly: true
            example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
      x-sourced-from: models/Pure1-1.0/_resource-no-name.yaml
  responses:
    OauthToken200:
      description: OK
      content:
        application/json:
          schema:
            title: oauth_token_response
            type: object
            properties:
              access_token:
                type: string
                description: |
                  The serialized OAuth 2.0 Bearer token used to perform authenticated requests.
                  The access token must be added to the Authorization header of all API calls.
                example: eyJraWQiOiJqTlBzL1Ria2c4U2Vua3F3ZmkvbnI4bWxxQ3NPIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJhdWQiOiI5NDcyMTkwOC1mNzkyLTcxMmUtYTYzOS0wODM5ZmE4MzA5MjIiLCJzdWIiOiJqb2UiLCJyb2xlIjoic3RvcmFnZV9hZG1pbiIsImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3Q6OTAwMCIsImlhdCI6MTU0NDAzNjA1MiwiZXhwIjoxNTQ0MDcyMDUyLCJqdGkiOiJjOTg0MjgyNS1mNGM3LTRiNGUtODdkNy03OWFiZmIxYTUzNDgifQ.pnuYAx0CkmkIG0LDrMAQGRr5Ci4-t5yMto3A7BkmyKnAVHBXG5ZIWwvNkWDLhqbA4YjmG7LZmWHrCVehLy2zy2vRLahFURsd3GTnOaWSyWFIyrwpoO81jQRtOQATtseweuMT_-C8o3oa4MgBNBsuKrhwKQS3oDDpeRPaCRTGev1_xRDxh_K6CWJBTAeOP2pcR4LW6zIJkCLzzkMuyL4aTJWWUjSbl04mcFbyw8r8W1GURrmaDVOvvpT634Hk9-GGh9OMIRlS6OOq7cJKc-RRWn18IK2Gs53V_KYshXTBbnRr990Y_qOX8MaTWOJTqgzsojY02MSVuJ9XDJWoIU3TQytr4K1vM2EvwDZDgl7LuUYUn7vWhbKktFzpeZyyhOjq3eX-ViugYKpIjBcG2f_-fcTPceEWGV82rd6TyVNB5A-v9u2kxCdW198t_kesgVQfuupDeS02cZe0ABLCzEHPiVF17JfiVr6sjkciioxN7Wj_j18ga4U0mdSukauT8yhbgCW1ijTVTFu1VwWebW0s8z3BWMtXdTtZ3BhcZVAdKRF8bOq7nfEbUQGhTn9g7dK-yF050winjtp-VTL2oUtkF5j1v_N8vPNiN9ZdkGJZr7VVZ-qeOJZcjdaRbxL6YB__yT1wkTcKPh8RHz6GUq7Jbyw8VIlcBE2nvJ63d0tH9C4
              issued_token_type:
                type: string
                description: |
                  The type of token that is issued.
                  The Pure Storage REST API supports OAuth 2.0 access tokens.
                example: urn:ietf:params:oauth:token-type:access_token
              token_type:
                type: string
                description: |
                  Indicates how the API client can use the access token issued.
                  The Pure Storage REST API supports the `Bearer` token.
                example: Bearer
              expires_in:
                type: integer
                description: |
                  The duration after which the access token will expire.
                  Measured in seconds. This differs from other duration
                  fields that are expressed in milliseconds.
                format: uint32
                example: 35999
      x-sourced-from: responses/TEx-v1/oauth-token-200.response.yaml
    OauthToken400:
      description: BAD REQUEST
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: invalid_request
              error_description:
                type: string
                example: "Unsupported subject_token_type: urn:ietf:params:oauth:token-"
      x-sourced-from: responses/TEx-v2/oauth-token-400.response.yaml
    OauthToken401:
      description: UNAUTHORIZED
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: invalid_client
              error_description:
                type: string
                example: "Invalid identity: JWT validation failed."
      x-sourced-from: responses/TEx-v1/oauth-token-401.response.yaml
    Error400:
      description: BAD REQUEST
      headers:
        X-Request-ID:
          description: Supplied by client during request or generated by server.
          schema:
            type: object
        X-RateLimit-Remaining-minute:
          description: |
            The number of requests remaining for the organization in that minute.
          schema:
            type: object
        X-RateLimit-Remaining-second:
          description: |
            The number of requests remaining for the organization in that second.
          schema:
            type: object
        X-RateLimit-Limit-minute:
          description: The number of requests available per minute.
          schema:
            type: object
        X-RateLimit-Limit-second:
          description: The number of requests available per second.
          schema:
            type: object
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      x-sourced-from: responses/Pure1-1.0/error-400.response.yaml
    Error403:
      description: FORBIDDEN
      headers:
        X-Request-ID:
          description: Supplied by client during request or generated by server.
          schema:
            type: object
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorNoContext"
      x-sourced-from: responses/Pure1-1.0/error-403.response.yaml
    Error404:
      description: NOT FOUND
      headers:
        X-Request-ID:
          description: Supplied by client during request or generated by server.
          schema:
            type: object
        X-RateLimit-Remaining-minute:
          description: |
            The number of requests remaining for the organization in that minute.
          schema:
            type: object
        X-RateLimit-Remaining-second:
          description: |
            The number of requests remaining for the organization in that second.
          schema:
            type: object
        X-RateLimit-Limit-minute:
          description: The number of requests available per minute.
          schema:
            type: object
        X-RateLimit-Limit-second:
          description: The number of requests available per second.
          schema:
            type: object
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      x-sourced-from: responses/Pure1-1.0/error-404.response.yaml
    Error429:
      description: TOO MANY REQUESTS
      headers:
        X-Request-ID:
          description: Supplied by client during request or generated by server.
          schema:
            type: object
        X-RateLimit-Remaining-minute:
          description: |
            The number of requests remaining for the organization in that minute.
          schema:
            type: object
        X-RateLimit-Remaining-second:
          description: |
            The number of requests remaining for the organization in that second.
          schema:
            type: object
        X-RateLimit-Limit-minute:
          description: The number of requests available per minute.
          schema:
            type: object
        X-RateLimit-Limit-second:
          description: The number of requests available per second.
          schema:
            type: object
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorNoContext"
      x-sourced-from: responses/Pure1-1.0/error-429.response.yaml
    Error500:
      description: INTERNAL SERVER ERROR
      headers:
        X-Request-ID:
          description: Supplied by client during request or generated by server.
          schema:
            type: object
        X-RateLimit-Remaining-minute:
          description: |
            The number of requests remaining for the organization in that minute.
          schema:
            type: object
        X-RateLimit-Remaining-second:
          description: |
            The number of requests remaining for the organization in that second.
          schema:
            type: object
        X-RateLimit-Limit-minute:
          description: The number of requests available per minute.
          schema:
            type: object
        X-RateLimit-Limit-second:
          description: The number of requests available per second.
          schema:
            type: object
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      x-sourced-from: responses/Pure1-1.0/error-500.response.yaml
  parameters:
    XRequestId.TEx-v1:
      name: X-Request-ID
      in: header
      description: |
        Supplied by client during request or generated by server.
      schema:
        type: string
        x-sourced-from: queries/TEx-v1/x-request-id.header.yaml
      x-sourced-from: queries/TEx-v1/x-request-id.header.yaml
    XRequestId:
      name: X-Request-ID
      in: header
      description: |
        Supplied by client during request or generated by server.
      schema:
        type: string
        x-sourced-from: queries/Pure1-1.0/x-request-id.header.yaml
      x-sourced-from: queries/Pure1-1.0/x-request-id.header.yaml
    Authorization:
      name: Authorization
      in: header
      description: |
        Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
      schema:
        type: string
        x-sourced-from: queries/Pure1-1.0/authorization.header.yaml
      x-sourced-from: queries/Pure1-1.0/authorization.header.yaml
    Continuation_token:
      name: continuation_token
      in: query
      description: |
        An opaque token used to iterate over a collection.
        The token to use on the next request is returned in the
        `continuation_token` field of the result.
        Single quotes are required around all strings.
      schema:
        type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/continuation_token.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/continuation_token.query.yaml
    Filter:
      name: filter
      in: query
      description: |
        Exclude resources that don't match the specified criteria.
        Single quotes are required around all strings inside the filters.
      schema:
        type: string
        x-sourced-from: queries/Pure1-1.0/filter.query.yaml
      x-sourced-from: queries/Pure1-1.0/filter.query.yaml
    Ids:
      name: ids
      in: query
      description: |
        A comma-separated list of resource IDs.
        If there is not at least one resource that matches each `id` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/ids.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/ids.query.yaml
    Limit:
      name: limit
      in: query
      description: |
        Limit the size of the response to the specified number of resources.
        A limit of 0 can be used to get the number of resources without getting
        all of the resources. It will be returned in the total_item_count field.
        If a client asks for a page size larger than the maximum number, the request
        is still valid. In that case the server just returns the maximum number of
        items, disregarding the client's page size request. If not specified, defaults
        to 1000.
      schema:
        type: integer
        format: int32
        x-sourced-from: queries/Pure1-1.0/limit.query.yaml
      x-sourced-from: queries/Pure1-1.0/limit.query.yaml
    Names:
      name: names
      in: query
      description: |
        A comma-separated list of resource names.
        If there is not at least one resource that matches each `name` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/names.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/names.query.yaml
    Offset:
      name: offset
      in: query
      description: |
        The offset of the first resource to return from a collection.
      schema:
        minimum: 0
        type: integer
        format: int32
        x-sourced-from: queries/Pure1-1.0/offset.query.yaml
      x-sourced-from: queries/Pure1-1.0/offset.query.yaml
    Sort:
      name: sort
      in: query
      description: |
        Sort the response by the specified fields (in descending order if '-'
        is appended to the field name).
        If you provide a sort you will not get a continuation token in
        the response.
      style: form
      explode: false
      schema:
        type: array
        items:
          pattern: "^[a-z]+(_[a-z]+)*-?"
          type: string
        x-sourced-from: queries/Pure1-1.0/sort.query.yaml
      x-sourced-from: queries/Pure1-1.0/sort.query.yaml
    Fqdns:
      name: fqdns
      in: query
      description: |
        A comma-separated list of resource FQDNs.
        If there is not at least one resource that matches each `fqdn` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.1/fqdns.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.1/fqdns.query.yaml
    Resource_ids:
      name: resource_ids
      in: query
      description: |
        A comma-separated list of resource IDs.
        If there is not at least one resource that matches each `resource_id` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/resource_ids.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/resource_ids.query.yaml
    Resource_fqdns:
      name: resource_fqdns
      in: query
      description: |
        A comma-separated list of resource FQDNs.
        If there is not at least one resource that matches each `resource_fqdn`
        element, an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.1/resource_fqdns.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.1/resource_fqdns.query.yaml
    Resource_names:
      name: resource_names
      in: query
      description: |
        A comma-separated list of resource names.
        If there is not at least one resource that matches each `resource_name`
        element, an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/resource_names.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/resource_names.query.yaml
    Keys:
      name: keys
      in: query
      description: |
        A comma-separated list of tag keys.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/keys.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/keys.query.yaml
    Namespaces:
      name: namespaces
      in: query
      description: |
        A comma-separated list of namespaces.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/namespaces.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/namespaces.query.yaml
    Resource_idsRequired:
      name: resource_ids
      in: query
      description: |
        REQUIRED: either `resource_ids` or `resource_names`.
        A comma-separated list of resource IDs.
        If there is not at least one resource that matches each `resource_id` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/resource_ids-required.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/resource_ids-required.query.yaml
    Resource_namesRequired:
      name: resource_names
      in: query
      description: |
        REQUIRED: either `resource_ids` or `resource_names`.
        A comma-separated list of resource names.
        If there is not at least one resource that matches each `resource_name`
        element, an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/resource_names-required.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/resource_names-required.query.yaml
    Member_ids_plus:
      name: member_ids
      in: query
      description: |
        A list of member IDs. Member IDs separated by a `+` indicate that both
        members must be present in each element. Member IDs separated by a `,`
        indicate that at least one member must be present in each element.
        If there is not at least one resource that matches each `member_id` element,
        an error is returned.
        Single quotes are required around all strings.
        When using Try it Out in Swagger, a list of member IDs separated by a `+`
        must be entered in the same item cell.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/member_ids_plus.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/member_ids_plus.query.yaml
    Member_names_plus:
      name: member_names
      in: query
      description: |
        A list of member names. Member names separated by a `+` indicate that both
        members must be present in each element. Member names separated by a `,`
        indicate that at least one member must be present in each element.
        If there is not at least one resource that matches each `member_name` element,
        an error is returned.
        Single quotes are required around all strings.
        When using Try it Out in Swagger, a list of member names separated by a `+`
        must be entered in the same item cell.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/member_names_plus.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/member_names_plus.query.yaml
    Source_ids_plus:
      name: source_ids
      in: query
      description: |
        A list of source IDs. Source IDs separated by a `+` indicate that both
        sources must be present in each element. Source IDs separated by a `,`
        indicate that at least one source must be present in each element.
        If there is not at least one resource that matches each `source_id` element,
        an error is returned.
        Single quotes are required around all strings.
        When using Try it Out in Swagger, a list of source IDs separated by a `+`
        must be entered in the same item cell.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/source_ids_plus.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/source_ids_plus.query.yaml
    Source_names_plus:
      name: source_names
      in: query
      description: |
        A list of source names. Source names separated by a `+` indicate that both
        sources must be present in each element. Source names separated by a `,`
        indicate that at least one source must be present in each element.
        If there is not at least one resource that matches each `source_name` element,
        an error is returned.
        Single quotes are required around all strings.
        When using Try it Out in Swagger, a list of source names separated by a `+`
        must be entered in the same item cell.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/source_names_plus.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/source_names_plus.query.yaml
    Target_ids_plus:
      name: target_ids
      in: query
      description: |
        A list of target IDs. Target IDs separated by a `+` indicate that both
        targets must be present in each element. Target IDs separated by a `,`
        indicate that at least one target must be present in each element.
        If there is not at least one resource that matches each `target_id` element,
        an error is returned.
        Single quotes are required around all strings.
        When using Try it Out in Swagger, a list of target IDs separated by a `+`
        must be entered in the same item cell.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/target_ids_plus.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/target_ids_plus.query.yaml
    Target_names_plus:
      name: target_names
      in: query
      description: |
        A list of target names. Target names separated by a `+` indicate that both
        targets must be present in each element. Target names separated by a `,`
        indicate that at least one target must be present in each element.
        If there is not at least one resource that matches each `target_name` element,
        an error is returned.
        Single quotes are required around all strings.
        When using Try it Out in Swagger, a list of target names separated by a `+`
        must be entered in the same item cell.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/target_names_plus.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/target_names_plus.query.yaml
    File_system_ids:
      name: file_system_ids
      in: query
      description: |
        Performs the operation on the file system ID specified.
        Enter multiple file system IDs in comma-separated format.
        The `file_system_ids` and `file_system_names` parameters cannot be provided together.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-sourced-from: queries/Pure1-1.0/file_system_ids.query.yaml
      x-sourced-from: queries/Pure1-1.0/file_system_ids.query.yaml
    File_system_names:
      name: file_system_names
      in: query
      description: |
        Performs the operation on the file system name specified.
        Enter multiple file system names in comma-separated format.
        For example, `filesystem1,filesystem2`.
        The `file_system_ids` and `file_system_names` parameters cannot be provided together.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-sourced-from: queries/Pure1-1.0/file_system_names.query.yaml
      x-sourced-from: queries/Pure1-1.0/file_system_names.query.yaml
    Member_ids:
      name: member_ids
      in: query
      description: |
        A comma-separated list of member IDs.
        If there is not at least one resource that matches each `member_id` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/member_ids.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/member_ids.query.yaml
    Member_names:
      name: member_names
      in: query
      description: |
        A comma-separated list of member names.
        If there is not at least one resource that matches each `member_name` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/member_names.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/member_names.query.yaml
    Policy_ids:
      name: policy_ids
      in: query
      description: |
        A comma-separated list of policy IDs.
        If there is not at least one resource that matches each `policy_id` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/policy_ids.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/policy_ids.query.yaml
    Policy_names:
      name: policy_names
      in: query
      description: |
        A comma-separated list of policy names.
        If there is not at least one resource that matches each `policy_name` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/policy_names.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/policy_names.query.yaml
    Source_ids:
      name: source_ids
      in: query
      description: |
        A comma-separated list of ids for the source of the object.
        If there is not at least one resource that matches each `source_id` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/source_ids.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/source_ids.yaml
    Source_names:
      name: source_names
      in: query
      description: |
        A comma-separated list of names for the source of the object.
        If there is not at least one resource that matches each `source_name` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/source_names.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/source_names.yaml
    Partner_purchase_orders:
      name: partner_purchase_orders
      in: query
      description: |
        A comma-separated list of partner purchase order numbers.
        If there is not at least one resource that matches each `partner_purchase_order` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.1/partner_purchase_orders.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.1/partner_purchase_orders.query.yaml
    Subscription_ids:
      name: subscription_ids
      in: query
      description: |
        A comma-separated list of subscription IDs.
        If there is not at least one resource that matches each `subscription.id`
        element, an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/subscription_ids.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/subscription_ids.query.yaml
    Subscription_names:
      name: subscription_names
      in: query
      description: |
        A comma-separated list of subscription names.
        If there is not at least one resource that matches each `subscription.name`
        element, an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/subscription_names.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/subscription_names.query.yaml
    Resource_types:
      name: resource_types
      in: query
      description: |
        The resource types to list the available metrics.
        Valid values are `arrays`, `buckets`, `directories`,
        `file-systems`, `pods`, `subscription-licenses` and
        `volumes`.
        A metric can belong to a combination of resources,
        e.g., write-iops from array to pod. In that case, query by
        ['arrays', 'pods'].
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/resource_types.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/resource_types.query.yaml
    AggregationRequired:
      name: aggregation
      in: query
      description: |
        Aggregation needed on the metric data.
        Valid values are `avg` and `max`.
        Single quotes are required around all strings.
        Latency metrics averages are weighted by the IOPS.
      required: true
      schema:
        type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/aggregation-required.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/aggregation-required.query.yaml
    End_timeRequired:
      name: end_time
      in: query
      description: |
        Timestamp of when the time window ends. Measured in milliseconds since the UNIX epoch.
      required: true
      schema:
        type: integer
        format: int64
        x-sourced-from: queries/Pure1-1.0/end_time-required.query.yaml
      x-sourced-from: queries/Pure1-1.0/end_time-required.query.yaml
    IdsRequired:
      name: ids
      in: query
      description: |
        REQUIRED: either `ids` or `names`.
        A comma-separated list of object IDs.
        If there is not at least one resource that matches each `id` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/ids-required.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/ids-required.query.yaml
    NamesRequired:
      name: names
      in: query
      description: |
        REQUIRED: either `names` or `ids`.
        A comma-separated list of resource names.
        If there is not at least one resource that matches each `name` element,
        an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/names-required.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/names-required.query.yaml
    ResolutionRequired:
      name: resolution
      in: query
      description: |
        The duration of time between individual data points, in milliseconds.
      required: true
      schema:
        type: integer
        format: int64
        x-sourced-from: queries/Pure1-1.0/resolution-required.query.yaml
      x-sourced-from: queries/Pure1-1.0/resolution-required.query.yaml
    Start_timeRequired:
      name: start_time
      in: query
      description: |
        Timestamp of when the time window starts. Measured in milliseconds since the UNIX epoch.
      required: true
      schema:
        type: integer
        format: int64
        x-sourced-from: queries/Pure1-1.0/start_time-required.query.yaml
      x-sourced-from: queries/Pure1-1.0/start_time-required.query.yaml
    Marketplace_partner_reference_ids:
      name: marketplace_partner_reference_ids
      in: query
      description: |
        A comma-separated list of marketplace partner reference IDs.
        If there is not at least one resource that matches each
        `marketplace_partner.reference_id` element, an error is returned.
        Single quotes are required around all strings.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        x-quoted: true
        x-sourced-from: queries/Pure1-1.0/marketplace_partner_reference_ids.query.yaml
      x-quoted: true
      x-sourced-from: queries/Pure1-1.0/marketplace_partner_reference_ids.query.yaml
  requestBodies:
    TagBatchRequired:
      description: |
        A list of tags to be upserted.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TagPut"
      required: true
      x-codegen-request-body-name: tag
      x-sourced-from: queries/Pure1-1.0/tag-batch-required.query.yaml
  securitySchemes:
    AuthorizationHeader:
      type: apiKey
      name: Authorization
      in: header
x-original-swagger-version: "2.0"

