properties:
  access_control_style:
    description: The access control style that is utilized for client actions such
      as setting file and directory ACLs. Possible values include `nfs`, `smb`, `shared`,
      `independent`, and `mode-bits`. If `nfs` is specified, then SMB clients will
      be unable to set permissions on files and directories. If `smb` is specified,
      then NFS clients will be unable to set permissions on files and directories.
      If `shared` is specified, then NFS and SMB clients will both be able to set
      permissions on files and directories. Any client will be able to overwrite the
      permissions set by another client, regardless of protocol. If `independent`
      is specified, then NFS and SMB clients will both be able to set permissions
      on files and directories, and can access files and directories created over
      any protocol. Permissions set by SMB clients will not affect NFS clients and
      vice versa. NFS clients will be restricted to only using mode bits to set permissions.
      If `mode-bits` is specified, then NFS and SMB clients will both be able to set
      permissions on files and directories, but only mode bits may be used to set
      permissions for NFS clients. When SMB clients set an ACL, it will be converted
      to have the same permission granularity as NFS mode bits. Defaults to `shared`.
    type: string
  safeguard_acls:
    description: If set to `true`, prevents NFS clients from erasing a configured
      ACL when setting NFS mode bits. If this is `true`, then attempts to set mode
      bits on a file or directory will fail if they cannot be combined with the existing
      ACL set on a file or directory without erasing the ACL. Attempts to set mode
      bits that would not erase an existing ACL will still succeed and the mode bit
      changes will be merged with the existing ACL. This must be `false` when `access_control_style`
      is set to either `independent` or `mode-bits`. Defaults to `true`.
    type: boolean
type: object
