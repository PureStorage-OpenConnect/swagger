consumes:
- application/json
definitions:
  Api_versionResponse:
    properties:
      version:
        description: A list of supported API versions.
        example:
        - '1.0'
        - '1.1'
        - '1.2'
        - '1.3'
        - '1.4'
        - '1.5'
        - '1.6'
        - '1.7'
        - '1.8'
        - '1.9'
        - '1.10'
        - '1.11'
        - '1.12'
        - '1.13'
        - '1.14'
        - '1.15'
        - '1.16'
        - '1.17'
        - '2.0'
        items:
          type: string
        type: array
    type: object
    x-sourced-from: responses/FA2.0/api_version-response.yaml
  Connection:
    properties:
      host:
        allOf:
        - $ref: '#/definitions/_fixedReferenceNoId'
        description: The host computer that sends and receives I/O requests to and
          from volumes on the FlashArray array.
      host_group:
        allOf:
        - $ref: '#/definitions/_fixedReferenceNoId'
        description: A virtual collection of hosts with common connectivity to volumes.
      lun:
        description: 'The logical unit number (LUN) by which the specified hosts are
          to

          address the specified volume. LUN can be in one of two formats: a simple

          LUN, or a LUN and Sublun with virtual volumes. A LUN and Sublun are

          integers in the range of 1 to 4095.


          The first format is simply the LUN number. The second format is a single

          int64 combining both ((LUN << 32) + Sublun) or (LUN * 4294967296 + Sublun).


          In the FA UI, a combined LUN and Sublun is represented as "LUN:Sublun".

          Example: LUN = 30, Sublun = 2, LUN:Sublun = 30:2

          Combined: (30 * 4294967296 + 2) == 128849018882.

          In REST it will be returned as 128849018882.


          To automatically assign a LUN to a private connection, the system starts

          at LUN ''1'' and counts up to the maximum LUN ''4095'', assigning the first

          available LUN to the connection. For shared connections, the system starts

          at LUN ''254'' and counts down to the minimum LUN ''1'', assigning the first

          available LUN to the connection. If all LUNs in the ''[1...254]'' range
          are

          taken, the system starts at LUN ''255'' and counts up to the maximum LUN

          ''4095'', assigning the first available LUN to the connection. The maximum

          int64 LUN:Sublun value is 17587891081215.

          '
        example: 7
        format: int64
        type: integer
      protocol_endpoint:
        allOf:
        - $ref: '#/definitions/_reference'
        description: A protocol endpoint (also known as a conglomerate volume) which
          acts as a proxy through which virtual volumes are created and then connected
          to VMware ESXi hosts or host groups. The protocol endpoint itself does not
          serve I/Os; instead, its job is to form connections between FlashArray volumes
          and ESXi hosts and host groups.
      volume:
        allOf:
        - $ref: '#/definitions/_fixedReference'
        description: A container that manages the storage space on the array.
    type: object
    x-sourced-from: models/FA2.0/connection.yaml
  ConnectionGetResponse:
    allOf:
    - $ref: '#/definitions/PageInfo'
    - $ref: '#/definitions/ConnectionResponse'
    x-sourced-from: responses/FA2.0/connection-get-response.yaml
  ConnectionPost:
    properties:
      lun:
        description: 'The logical unit number (LUN) by which the specified hosts

          are to address the specified volume. If the LUN is not specified,

          the system automatically assigns a LUN to the connection.

          To automatically assign a LUN to a private connection,

          the system starts at LUN `1` and counts up to the maximum LUN `4095`,

          assigning the first available LUN to the connection.

          For shared connections, the system starts at LUN `254` and

          counts down to the minimum LUN `1`, assigning the first available LUN

          to the connection. If all LUNs in the `[1...254]` range are taken,

          the system starts at LUN `255` and counts up to the maximum LUN `4095`,

          assigning the first available LUN to the connection.

          '
        example: 7
        format: int32
        maximum: 4095
        minimum: 1
        type: integer
      protocol_endpoint:
        allOf:
        - $ref: '#/definitions/_reference'
        description: 'A protocol endpoint (also known as a conglomerate volume) which
          acts as a proxy through which

          virtual volumes are created and then connected to VMware ESXi hosts or host
          groups.

          The protocol endpoint itself does not serve I/Os; instead,

          its job is to form connections between FlashArray volumes and ESXi hosts
          and host groups.

          '
    type: object
    x-sourced-from: models/FA2.0/connection-post.yaml
  ConnectionResponse:
    properties:
      items:
        description: 'Returns a list of all items after filtering.

          The values are displayed for each name where meaningful.

          If `total_only=true`, the `items` list will be empty.

          '
        items:
          $ref: '#/definitions/Connection'
        type: array
    type: object
    x-sourced-from: responses/FA2.0/connection-response.yaml
  Host:
    allOf:
    - $ref: '#/definitions/_resourceNoId'
    - properties:
        chap:
          $ref: '#/definitions/_chap'
        connection_count:
          description: The number of volumes connected to the specified host.
          example: 3
          format: int64
          readOnly: true
          type: integer
        host_group:
          allOf:
          - $ref: '#/definitions/_referenceNoId'
          description: The host group to which the host should be associated.
        iqns:
          description: 'The iSCSI qualified name (IQN) associated with the host.

            '
          items:
            example: iqn.2010-06.com.purestorage:linux.393d930077be2977
            type: string
          type: array
        nqns:
          description: The NVMe Qualified Name (NQN) associated with the host.
          items:
            example: nqn.2010-06.com.purestorage:flasharray.512f7bb185978505
            type: string
          type: array
        personality:
          description: 'Determines how the system tunes the array to ensure that it
            works optimally with the host.

            Set `personality` to the name of the host operating system or virtual
            memory system.

            Valid values are `aix`, `esxi`, `hitachi-vsp`, `hpux`,

            `oracle-vm-server`, `solaris`, and `vms`.

            If your system is not listed as one of the valid host personalities, do
            not set the option.

            By default, the personality is not set.

            '
          type: string
        port_connectivity:
          $ref: '#/definitions/_host_port_connectivity'
        preferred_arrays:
          description: 'For synchronous replication configurations, sets a host''s
            preferred array to specify which

            array exposes active/optimized paths to that host.

            Enter multiple preferred arrays in comma-separated format.

            If a preferred array is set for a host,

            then the other arrays in the same pod will expose active/non-optimized
            paths to that host.

            If the host is in a host group, `preferred_arrays` cannot be set because
            host groups

            have their own preferred arrays.

            On a preferred array of a certain host, all the paths on all the ports

            (for both the primary and secondary controllers) are set up as A/O (active/optimized)
            paths,

            while on a non-preferred array, all the paths are A/N (Active/Non-optimized)
            paths.

            '
          items:
            $ref: '#/definitions/_reference'
          type: array
        space:
          allOf:
          - $ref: '#/definitions/_space'
          description: 'Displays provisioned size and physical storage consumption

            information for the sum of all volumes connected to the specified host.

            '
          readOnly: true
        wwns:
          description: The Fibre Channel World Wide Name (WWN) associated with the
            host.
          items:
            example: 52:4A:93:70:4E:E5:68:00
            type: string
          type: array
      type: object
    x-sourced-from: models/FA2.0/host.yaml
  HostGetResponse:
    allOf:
    - $ref: '#/definitions/PageInfo'
    - $ref: '#/definitions/HostResponse'
    x-sourced-from: responses/FA2.0/host-get-response.yaml
  HostGroup:
    allOf:
    - $ref: '#/definitions/_resourceNoId'
    - properties:
        connection_count:
          description: The number of volumes connected to the host group.
          example: 3
          format: int64
          readOnly: true
          type: integer
        host_count:
          description: The number of hosts in the host group.
          example: 3
          format: int64
          readOnly: true
          type: integer
        is_local:
          description: Returns a value of `true` if the host or host group belongs
            to the current array. Returns a value of `false` if the host or host group
            belongs to a remote array.
          readOnly: true
          type: boolean
        space:
          allOf:
          - $ref: '#/definitions/_space'
          description: 'Displays size and space consumption information.

            '
      type: object
    x-sourced-from: models/FA2.0/host-group.yaml
  HostGroupGetResponse:
    allOf:
    - $ref: '#/definitions/PageInfo'
    - $ref: '#/definitions/HostGroupResponse'
    x-sourced-from: responses/FA2.0/host-group-get-response.yaml
  HostGroupPatch:
    allOf:
    - $ref: '#/definitions/_newName'
    x-sourced-from: models/FA2.0/host-group-patch.yaml
  HostGroupResponse:
    properties:
      items:
        description: 'Returns a list of all items after filtering.

          The values are displayed for each name where meaningful.

          '
        items:
          $ref: '#/definitions/HostGroup'
        type: array
    type: object
    x-sourced-from: responses/FA2.0/host-group-response.yaml
  HostPatch:
    allOf:
    - $ref: '#/definitions/_newName'
    - properties:
        add_iqns:
          description: 'Adds the specified iSCSI Qualified Names (IQNs)

            to those already associated with the specified host.

            '
          items:
            description: IQNs to add.
            example: iqn.2010-06.com.purestorage:linux.393d930077be2977
            type: string
          type: array
        add_nqns:
          description: 'Adds the specified NVMe Qualified Names (NQNs)

            to those already associated with the specified host.

            '
          items:
            description: NQNs to add.
            example: nqn.2010-06.com.purestorage:flasharray.512f7bb185978505
            type: string
          type: array
        add_wwns:
          description: 'Adds the specified Fibre Channel World Wide Names (WWNs)

            to those already associated with the specified host.

            '
          items:
            description: WWNs to add.
            example: 52:4A:93:70:4E:E5:68:00
            type: string
          type: array
        chap:
          $ref: '#/definitions/_chap'
        host_group:
          allOf:
          - $ref: '#/definitions/_referenceNoId'
          description: The host group to which the host should be associated.
        iqns:
          description: 'The iSCSI qualified name (IQN) associated with the host.

            '
          items:
            example: iqn.2010-06.com.purestorage:linux.393d930077be2977
            type: string
          type: array
        nqns:
          description: The NVMe Qualified Name (NQN) associated with the host.
          items:
            example: nqn.2010-06.com.purestorage:flasharray.512f7bb185978505
            type: string
          type: array
        personality:
          description: 'Determines how the system tunes the array to ensure that it
            works optimally with the host.

            Set `personality` to the name of the host operating system or virtual
            memory system.

            Valid values are `aix`, `esxi`, `hitachi-vsp`, `hpux`,

            `oracle-vm-server`, `solaris`, and `vms`.

            If your system is not listed as one of the valid host personalities, do
            not set the option.

            By default, the personality is not set.

            '
          type: string
        preferred_arrays:
          description: 'For synchronous replication configurations, sets a host''s
            preferred array to specify which

            array exposes active/optimized paths to that host.

            Enter multiple preferred arrays in comma-separated format.

            If a preferred array is set for a host,

            then the other arrays in the same pod will expose active/non-optimized
            paths to that host.

            If the host is in a host group, `preferred_arrays` cannot be set because
            host groups

            have their own preferred arrays.

            On a preferred array of a certain host, all the paths on all the ports

            (for both the primary and secondary controllers) are set up as A/O (active/optimized)
            paths,

            while on a non-preferred array, all the paths are A/N (Active/Non-optimized)
            paths.

            '
          items:
            $ref: '#/definitions/_reference'
          type: array
        remove_iqns:
          description: 'Disassociates the specified iSCSI Qualified Names (IQNs) from
            the specified host.

            '
          items:
            description: IQNs to remove.
            example: iqn.2010-06.com.purestorage:linux.393d930077be2977
            type: string
          type: array
        remove_nqns:
          description: 'Disassociates the specified NVMe Qualified Names (NQNs) from
            the specified host.

            '
          items:
            description: NQNs to remove.
            example: nqn.2010-06.com.purestorage:flasharray.512f7bb185978505
            type: string
          type: array
        remove_wwns:
          description: 'Disassociates the specified Fibre Channel World Wide Names
            (WWNs) from the specified host.

            '
          items:
            description: WWNs to remove.
            example: 52:4A:93:70:4E:E5:68:00
            type: string
          type: array
        wwns:
          description: The Fibre Channel World Wide Name (WWN) associated with the
            host.
          items:
            example: 52:4A:93:70:4E:E5:68:00
            type: string
          type: array
      type: object
    x-sourced-from: models/FA2.0/host-patch.yaml
  HostPost:
    properties:
      chap:
        $ref: '#/definitions/_chap'
      iqns:
        description: 'The iSCSI qualified name (IQN) associated with the host.

          '
        items:
          example: iqn.2010-06.com.purestorage:linux.393d930077be2977
          type: string
        type: array
      nqns:
        description: The NVMe Qualified Name (NQN) associated with the host.
        items:
          example: nqn.2010-06.com.purestorage:flasharray.512f7bb185978505
          type: string
        type: array
      personality:
        description: 'Determines how the system tunes the array to ensure that it
          works optimally with the host.

          Set `personality` to the name of the host operating system or virtual memory
          system.

          Valid values are `aix`, `esxi`, `hitachi-vsp`, `hpux`,

          `oracle-vm-server`, `solaris`, and `vms`.

          If your system is not listed as one of the valid host personalities, do
          not set the option.

          By default, the personality is not set.

          '
        type: string
      preferred_arrays:
        description: 'For synchronous replication configurations, sets a host''s preferred
          array to specify which

          array exposes active/optimized paths to that host.

          Enter multiple preferred arrays in comma-separated format.

          If a preferred array is set for a host,

          then the other arrays in the same pod will expose active/non-optimized paths
          to that host.

          If the host is in a host group, `preferred_arrays` cannot be set because
          host groups

          have their own preferred arrays.

          On a preferred array of a certain host, all the paths on all the ports

          (for both the primary and secondary controllers) are set up as A/O (active/optimized)
          paths,

          while on a non-preferred array, all the paths are A/N (Active/Non-optimized)
          paths.

          '
        items:
          $ref: '#/definitions/_reference'
        type: array
      wwns:
        description: The Fibre Channel World Wide Name (WWN) associated with the host.
        items:
          example: 52:4A:93:70:4E:E5:68:00
          type: string
        type: array
    type: object
    x-sourced-from: models/FA2.0/host-post.yaml
  HostResponse:
    properties:
      items:
        description: 'Returns a list of all items after filtering.

          The values are displayed for each name where meaningful.

          If `total_only=true`, the `items` list will be empty.

          '
        items:
          $ref: '#/definitions/Host'
        type: array
    type: object
    x-sourced-from: responses/FA2.0/host-response.yaml
  Member:
    properties:
      group:
        $ref: '#/definitions/_reference'
      member:
        $ref: '#/definitions/_reference'
    type: object
    x-sourced-from: models/FA2.0/member.yaml
  MemberNoIdAll:
    properties:
      group:
        allOf:
        - $ref: '#/definitions/_referenceNoId'
        description: The resource in which the host, volume, or other item in the
          environment is a member.
      member:
        allOf:
        - $ref: '#/definitions/_referenceNoId'
        description: The member of the resource.
    type: object
    x-sourced-from: models/FA2.0/member-no-id-all.yaml
  MemberNoIdAllGetResponse:
    allOf:
    - $ref: '#/definitions/PageInfo'
    - $ref: '#/definitions/MemberNoIdAllResponse'
    x-sourced-from: responses/FA2.0/member-no-id-all-get-response.yaml
  MemberNoIdAllResponse:
    properties:
      items:
        description: 'Returns a list of all items after filtering.

          The values are displayed for each name where meaningful.

          '
        items:
          $ref: '#/definitions/MemberNoIdAll'
        type: array
    type: object
    x-sourced-from: responses/FA2.0/member-no-id-all-response.yaml
  PageInfo:
    properties:
      more_items_remaining:
        description: 'Returns a value of `true` if subsequent items can be retrieved.

          '
        example: false
        type: boolean
      total_item_count:
        description: 'The total number of records after applying all filter query
          parameters.

          The `total_item_count` will be calculated if and only if the corresponding

          query parameter `total_item_count` is set to `true`. If this query parameter

          is not set or set to `false`, a value of `null` will be returned.

          '
        format: int32
        type: integer
    type: object
    x-sourced-from: responses/FA2.0/page-info.yaml
  ResourcePerformance:
    allOf:
    - $ref: '#/definitions/_resource'
    - $ref: '#/definitions/_performance'
    x-sourced-from: models/FA2.0/resource-performance.yaml
  ResourcePerformanceByArray:
    allOf:
    - $ref: '#/definitions/ResourcePerformance'
    - properties:
        array:
          allOf:
          - $ref: '#/definitions/_resource'
          description: 'The array on which the performance metrics were recorded.

            '
    x-sourced-from: models/FA2.0/resource-performance-by-array.yaml
  ResourcePerformanceByArrayGetResponse:
    allOf:
    - $ref: '#/definitions/PageInfo'
    - properties:
        items:
          description: 'Performance data, broken down by array.

            If `total_only=true`, the `items` list will be empty.

            '
          items:
            $ref: '#/definitions/ResourcePerformanceByArray'
          type: array
        total:
          description: 'The aggregate value of all items after filtering.

            Where it makes more sense, the average value is displayed instead.

            The values are displayed for each field where meaningful.

            '
          items:
            $ref: '#/definitions/ResourcePerformanceByArray'
          type: array
      type: object
    x-sourced-from: responses/FA2.0/resource-performance-by-array-get-response.yaml
  ResourcePerformanceGetResponse:
    allOf:
    - $ref: '#/definitions/PageInfo'
    - properties:
        items:
          description: 'Performance data.

            If `total_only=true`, the `items` list will be empty.

            '
          items:
            $ref: '#/definitions/ResourcePerformance'
          type: array
        total:
          description: 'The aggregate value of all items after filtering.

            Where it makes more sense, the average value is displayed instead.

            The values are displayed for each field where meaningful.

            '
          items:
            $ref: '#/definitions/ResourcePerformance'
          type: array
      type: object
    x-sourced-from: responses/FA2.0/resource-performance-get-response.yaml
  ResourcePerformanceNoId:
    allOf:
    - $ref: '#/definitions/_resourceNoId'
    - $ref: '#/definitions/_performance'
    x-sourced-from: models/FA2.0/resource-performance-no-id.yaml
  ResourcePerformanceNoIdByArray:
    allOf:
    - $ref: '#/definitions/ResourcePerformanceNoId'
    - properties:
        array:
          allOf:
          - $ref: '#/definitions/_resource'
          description: 'The array on which the performance metrics were recorded.

            '
    x-sourced-from: models/FA2.0/resource-performance-no-id-by-array.yaml
  ResourcePerformanceNoIdByArrayGetResponse:
    allOf:
    - $ref: '#/definitions/PageInfo'
    - properties:
        items:
          description: 'Performance data, broken down by array.

            If `total_only=true`, the `items` list will be empty.

            '
          items:
            $ref: '#/definitions/ResourcePerformanceNoIdByArray'
          type: array
        total:
          description: 'The aggregate value of all items after filtering.

            Where it makes more sense, the average value is displayed instead.

            The values are displayed for each field where meaningful.

            '
          items:
            $ref: '#/definitions/ResourcePerformanceNoIdByArray'
          type: array
      type: object
    x-sourced-from: responses/FA2.0/resource-performance-no-id-by-array-get-response.yaml
  ResourcePerformanceNoIdGetResponse:
    allOf:
    - $ref: '#/definitions/PageInfo'
    - properties:
        items:
          description: 'Performance data.

            If `total_only=true`, the `items` list will be empty.

            '
          items:
            $ref: '#/definitions/ResourcePerformanceNoId'
          type: array
        total:
          description: 'The aggregate value of all items after filtering.

            Where it makes more sense, the average value is displayed instead.

            The values are displayed for each field where meaningful.

            '
          items:
            $ref: '#/definitions/ResourcePerformanceNoId'
          type: array
      type: object
    x-sourced-from: responses/FA2.0/resource-performance-no-id-get-response.yaml
  ResourceSpace:
    allOf:
    - $ref: '#/definitions/_builtIn'
    - properties:
        space:
          allOf:
          - $ref: '#/definitions/_space'
          description: 'Displays size and space consumption information.

            '
          readOnly: true
        time:
          description: 'The timestamp of when the data was taken.

            Measured in milliseconds since the UNIX epoch.

            '
          format: int64
          readOnly: true
          type: integer
      x-readOnly: true
    x-sourced-from: models/FA2.0/resource-space.yaml
  ResourceSpaceGetResponse:
    allOf:
    - $ref: '#/definitions/PageInfo'
    - properties:
        items:
          description: 'Returns a list of all items after filtering.

            The values are displayed for each name where meaningful.

            If `total_only=true`, the `items` list will be empty.

            '
          items:
            $ref: '#/definitions/ResourceSpace'
          type: array
        total:
          description: 'The aggregate value of all items after filtering.

            Where it makes more sense, the average value is displayed instead.

            The values are displayed for each field where meaningful.

            '
          items:
            $ref: '#/definitions/ResourceSpace'
          type: array
      type: object
    x-sourced-from: responses/FA2.0/resource-space-get-response.yaml
  Username:
    properties:
      username:
        description: The username of the user.
        example: pureuser
        type: string
    type: object
    x-sourced-from: models/FA2.0/username.yaml
  UsernameResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/Username'
        type: array
    type: object
    x-sourced-from: responses/FA2.0/username-response.yaml
  Volume:
    allOf:
    - $ref: '#/definitions/_volumeCommon'
    - properties:
        pod:
          allOf:
          - $ref: '#/definitions/_reference'
          description: A reference to the pod.
        source:
          allOf:
          - $ref: '#/definitions/_fixedReference'
          description: A reference to the originating volume as a result of a volume
            copy.
          readOnly: true
        subtype:
          description: 'The type of volume.

            Valid values are `protocol_endpoint` and `regular`.

            '
          readOnly: true
          type: string
        volume_group:
          allOf:
          - $ref: '#/definitions/_reference'
          description: A reference to the volume group.
    x-sourced-from: models/FA2.0/volume.yaml
  VolumeGetResponse:
    allOf:
    - $ref: '#/definitions/PageInfo'
    - $ref: '#/definitions/VolumeResponse'
    - properties:
        total:
          description: 'The aggregate value of all items after filtering.

            Where it makes more sense, the average value is displayed instead.

            The values are displayed for each field where meaningful.

            '
          items:
            $ref: '#/definitions/Volume'
          type: array
    x-sourced-from: responses/FA2.0/volume-get-response.yaml
  VolumePatch:
    allOf:
    - $ref: '#/definitions/_destroyedPatchPost'
    - $ref: '#/definitions/_newName'
    - properties:
        pod:
          allOf:
          - $ref: '#/definitions/_reference'
          description: Moves the volume into the specified pod.
        provisioned:
          description: 'Updates the virtual size of the volume. Measured in bytes.

            '
          format: int64
          maximum: 4503599627370496
          type: integer
        qos:
          allOf:
          - $ref: '#/definitions/_qos'
          description: 'Sets QoS limits.

            '
        volume_group:
          allOf:
          - $ref: '#/definitions/_reference'
          description: Adds the volume to the specified volume group.
      type: object
    x-sourced-from: models/FA2.0/volume-patch.yaml
  VolumePerformance:
    allOf:
    - $ref: '#/definitions/_resource'
    - $ref: '#/definitions/_performance'
    x-sourced-from: models/FA2.0/volume-performance.yaml
  VolumePost:
    allOf:
    - $ref: '#/definitions/_destroyedPatchPost'
    - properties:
        provisioned:
          description: 'Sets the virtual size of the volume. Measured in bytes.

            '
          format: int64
          maximum: 4503599627370496
          type: integer
        qos:
          allOf:
          - $ref: '#/definitions/_qos'
          description: 'Sets QoS limits.

            '
        source:
          allOf:
          - $ref: '#/definitions/_reference'
          description: The source volume of a volume copy.
        subtype:
          description: 'The type of volume.

            Valid values are `protocol_endpoint` and `regular`.

            '
          type: string
      type: object
    x-sourced-from: models/FA2.0/volume-post.yaml
  VolumeResponse:
    properties:
      items:
        description: 'Returns a list of all items after filtering.

          The values are displayed for each name where meaningful.

          If `total_only=true`, the `items` list will be empty.

          '
        items:
          $ref: '#/definitions/Volume'
        type: array
    type: object
    x-sourced-from: responses/FA2.0/volume-response.yaml
  VolumeSnapshot:
    allOf:
    - $ref: '#/definitions/_resource'
    - $ref: '#/definitions/_snapshot'
    - description: A point-in-time image of the contents of the volume.
      properties:
        serial:
          description: 'A serial number generated by the system when the snapshot
            is created.

            The serial number is unique across all arrays.

            '
          readOnly: true
          type: string
        space:
          allOf:
          - $ref: '#/definitions/_space'
          description: 'Displays size and space consumption information.

            '
        volume_group:
          allOf:
          - $ref: '#/definitions/_fixedReference'
          description: 'The volume group to which the volume that is the source of
            this volume snapshot belongs.

            '
          readOnly: true
      type: object
    x-sourced-from: models/FA2.0/volume-snapshot.yaml
  VolumeSnapshotGetResponse:
    allOf:
    - $ref: '#/definitions/PageInfo'
    - $ref: '#/definitions/VolumeSnapshotResponse'
    - properties:
        total:
          description: 'The aggregate value of all items after filtering.

            Where it makes more sense, the average value is displayed instead.

            The values are displayed for each field where meaningful.

            '
          items:
            $ref: '#/definitions/VolumeSnapshot'
          type: array
    x-sourced-from: responses/FA2.0/volume-snapshot-get-response.yaml
  VolumeSnapshotPatch:
    allOf:
    - $ref: '#/definitions/_destroyedPatchPost'
    - $ref: '#/definitions/_newName'
    x-sourced-from: models/FA2.0/volume-snapshot-patch.yaml
  VolumeSnapshotPost:
    allOf:
    - $ref: '#/definitions/_destroyedPatchPost'
    - properties:
        suffix:
          description: 'The suffix that is appended to the `source_name` value to
            generate the

            full volume snapshot name in the form `VOL.SUFFIX`.

            If the suffix is not specified, the system constructs the snapshot name

            in the form `VOL.NNN`, where `VOL` is the volume name, and `NNN` is a

            monotonically increasing number.

            '
          type: string
    x-sourced-from: models/FA2.0/volume-snapshot-post.yaml
  VolumeSnapshotResponse:
    properties:
      items:
        description: 'Returns a list of all items after filtering.

          The values are displayed for each name where meaningful.

          If `total_only=true`, the `items` list will be empty.

          '
        items:
          $ref: '#/definitions/VolumeSnapshot'
        type: array
    type: object
    x-sourced-from: responses/FA2.0/volume-snapshot-response.yaml
  VolumeSnapshotTransfer:
    allOf:
    - $ref: '#/definitions/_resource'
    - $ref: '#/definitions/_transfer'
    - description: 'Transfer statistics for snapshot replication.

        '
    x-sourced-from: models/FA2.0/volume-snapshot-transfer.yaml
  VolumeSnapshotTransferGetResponse:
    allOf:
    - $ref: '#/definitions/PageInfo'
    - $ref: '#/definitions/VolumeSnapshotTransferResponse'
    - properties:
        total:
          description: 'The aggregate value of all items after filtering.

            Where it makes more sense, the average value is displayed instead.

            The values are displayed for each field where meaningful.

            '
          items:
            $ref: '#/definitions/VolumeSnapshotTransfer'
          type: array
    x-sourced-from: responses/FA2.0/volume-snapshot-transfer-get-response.yaml
  VolumeSnapshotTransferResponse:
    properties:
      items:
        description: 'Returns a list of all items after filtering.

          The values are displayed for each name where meaningful.

          If `total_only=true`, the `items` list will be empty.

          '
        items:
          $ref: '#/definitions/VolumeSnapshotTransfer'
        type: array
    type: object
    x-sourced-from: responses/FA2.0/volume-snapshot-transfer-response.yaml
  _builtIn:
    description: 'A built-in resource. Many are singletons predefined by Purity (e.g.,
      support

      settings). Some correspond to a piece of software, like an app, or hardware,

      like a controller. Others are created by the system in response to some event

      (e.g., alerts, audit records).


      Typically, a user can''t create, delete or rename a built-in resource. A few

      can be created or deleted, but not renamed because the names are meaningful

      to Purity (e.g., VIFs).

      '
    properties:
      id:
        description: 'A globally unique, system-generated ID.

          The ID cannot be modified and cannot refer to another resource.

          '
        readOnly: true
        type: string
      name:
        description: 'A locally unique, system-generated name. The name cannot be
          modified.

          '
        readOnly: true
        type: string
    type: object
    x-sourced-from: models/FA2.0/_built-in.yaml
  _chap:
    description: Challenge-Handshake Authentication Protocol (CHAP).
    properties:
      host_password:
        description: 'The host password for CHAP authentication.

          The password must be between 12 and 255 characters (inclusive)

          and cannot be the same as the target password.

          '
        type: string
      host_user:
        description: The host username for CHAP authentication.
        type: string
      target_password:
        description: 'The target password for CHAP authentication.

          The password must be between 12 and 255 characters (inclusive)

          and cannot be the same as the host password.

          '
        type: string
      target_user:
        description: The target username for CHAP authentication.
        type: string
    type: object
    x-sourced-from: models/FA2.0/_chap.yaml
  _destroyedPatchPost:
    properties:
      destroyed:
        description: 'If set to `true`, destroys a resource. Once set to `true`,

          the `time_remaining` value will display the amount of time left

          until the destroyed resource is permanently eradicated.

          Before the `time_remaining` period has elapsed, the destroyed resource

          can be recovered by setting `destroyed=false`.

          Once the `time_remaining` period has elapsed,

          the resource is permanently eradicated and can no longer be recovered.

          '
        type: boolean
    type: object
    x-sourced-from: models/FA2.0/_destroyed-patch-post.yaml
  _fixedReference:
    properties:
      id:
        description: 'A globally unique, system-generated ID.

          The ID cannot be modified.

          '
        readOnly: true
        type: string
      name:
        description: 'The resource name,

          such as volume name, pod name, snapshot name, and so on.

          '
        readOnly: true
        type: string
    type: object
    x-readOnly: true
    x-sourced-from: models/FA2.0/_fixed-reference.yaml
  _fixedReferenceNoId:
    properties:
      name:
        description: 'The resource name,

          such as volume name, pod name, snapshot name, and so on.

          '
        readOnly: true
        type: string
    type: object
    x-readOnly: true
    x-sourced-from: models/FA2.0/_fixed-reference-no-id.yaml
  _host_port_connectivity:
    description: 'The connectivity status between the host and the ports on each controller.

      '
    properties:
      details:
        description: 'The host connection status.

          Values include `Redundant`, `N/A`,

          `Redundant-Failover`, `Uneven`, `Unused Port`,

          `Single Controller`, `Single Controller-Failover`, and `None`.

          '
        example: Redundant
        readOnly: true
        type: string
      status:
        description: 'The host connection health status.

          Values include `healthy`, `unhealthy`, and `critical`.

          '
        example: healthy
        readOnly: true
        type: string
    type: object
    x-readOnly: true
    x-sourced-from: models/FA2.0/_host_port_connectivity.yaml
  _newName:
    properties:
      name:
        description: The new name for the resource.
        type: string
    type: object
    x-sourced-from: models/FA2.0/_new-name.yaml
  _performance:
    properties:
      bytes_per_mirrored_write:
        description: 'The average I/O size per mirrored write, measured in bytes.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      bytes_per_op:
        description: 'The average I/O size for both read and write (all) operations.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      bytes_per_read:
        description: The average I/O size per read, measured in bytes.
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      bytes_per_write:
        description: The average I/O size per write, measured in bytes.
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      mirrored_write_bytes_per_sec:
        description: 'The number of mirrored bytes written per second.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      mirrored_writes_per_sec:
        description: 'The number of mirrored writes per second.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      qos_rate_limit_usec_per_mirrored_write_op:
        description: 'The average time it takes the array to process a mirrored I/O
          write request,

          measured in microseconds.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      qos_rate_limit_usec_per_read_op:
        description: 'The average time spent waiting due to QoS rate limiting for
          a read request,

          measured in microseconds.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      qos_rate_limit_usec_per_write_op:
        description: 'The average time that a write I/O request spends waiting

          as a result of the volume reaching its QoS bandwidth limit,

          measured in microseconds.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      queue_usec_per_mirrored_write_op:
        description: 'The average time that a mirrored write I/O request spends in
          the array waiting to be served,

          measured in microseconds.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      queue_usec_per_read_op:
        description: 'The average time that a read I/O request spends in the array
          waiting to be served,

          measured in microseconds.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      queue_usec_per_write_op:
        description: 'The average time that a write I/O request spends in the array
          waiting to be served,

          measured in microseconds.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      read_bytes_per_sec:
        description: The number of bytes read per second.
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      reads_per_sec:
        description: The number of read requests processed per second.
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      san_usec_per_mirrored_write_op:
        description: 'The average time required to transfer data

          from the initiator to the array for a mirrored write request,

          measured in microseconds.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      san_usec_per_read_op:
        description: 'The average time required to transfer data from the array to
          the initiator for a read request,

          measured in microseconds.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      san_usec_per_write_op:
        description: 'The average time required to transfer data

          from the initiator to the array for a write request,

          measured in microseconds.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      service_usec_per_mirrored_write_op:
        description: 'The average time required for the array to service a mirrored
          write request,

          measured in microseconds.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      service_usec_per_read_op:
        description: 'The average time required for the array to service a read request,

          measured in microseconds.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      service_usec_per_write_op:
        description: 'The average time required for the array to service a write request,

          measured in microseconds.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      time:
        description: 'The time when the sample performance data was taken,

          measured in milliseconds since the UNIX epoch.

          '
        format: int64
        readOnly: true
        type: integer
      usec_per_mirrored_write_op:
        description: 'The average time it takes the array to process a mirrored I/O
          write request,

          measured in microseconds.

          Beginning in Purity 6.3.14 and 6.4.10 and later,

          including later major versions (6.5.x, 6.6.x and beyond),

          queue time is included.

          The average time does not include SAN time or QoS rate limit time.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      usec_per_read_op:
        description: 'The average time it takes the array to process an I/O read request,

          measured in microseconds.

          Beginning in Purity 6.3.14 and 6.4.10 and later,

          including later major versions (6.5.x, 6.6.x and beyond),

          queue time is included.

          The average time does not include SAN time or QoS rate limit time.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      usec_per_write_op:
        description: 'The average time it takes the array to process an I/O write
          request,

          measured in microseconds.

          Beginning in Purity 6.3.14 and 6.4.10 and later,

          including later major versions (6.5.x, 6.6.x and beyond),

          queue time is included.

          The average time does not include SAN time or QoS rate limit time.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      write_bytes_per_sec:
        description: The number of bytes written per second.
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      writes_per_sec:
        description: The number of write requests processed per second.
        format: int64
        minimum: 0
        readOnly: true
        type: integer
    type: object
    x-readOnly: true
    x-sourced-from: models/FA2.0/_performance.yaml
  _qos:
    properties:
      bandwidth_limit:
        description: 'The maximum QoS bandwidth limit for the volume.

          Whenever throughput exceeds the bandwidth limit, throttling occurs.

          Measured in bytes per second. Maximum limit is 512 GB/s.

          '
        format: int64
        maximum: 549755813888
        minimum: 1048576
        type: integer
      iops_limit:
        description: 'The QoS IOPs limit for the volume.

          '
        format: int64
        maximum: 100000000
        minimum: 100
        type: integer
    type: object
    x-sourced-from: models/FA2.0/_qos.yaml
  _reference:
    properties:
      id:
        description: 'A globally unique, system-generated ID.

          The ID cannot be modified.

          '
        type: string
      name:
        description: 'The resource name,

          such as volume name, pod name, snapshot name, and so on.

          '
        type: string
    type: object
    x-sourced-from: models/FA2.0/_reference.yaml
  _referenceNoId:
    properties:
      name:
        description: 'The resource name, such as volume name, pod name, snapshot name,
          and so on.

          '
        type: string
    type: object
    x-sourced-from: models/FA2.0/_reference-no-id.yaml
  _resource:
    description: 'An ordinary (as opposed to built-in) resource that can be created,
      named,

      renamed or deleted by the user. This might be a virtual resource (e.g., a

      volume), or correspond to something in the environment, like a host or a

      server.

      '
    properties:
      id:
        description: 'A globally unique, system-generated ID.

          The ID cannot be modified and cannot refer to another resource.

          '
        readOnly: true
        type: string
      name:
        description: 'A user-specified name.

          The name must be locally unique and can be changed.

          '
        type: string
    type: object
    x-sourced-from: models/FA2.0/_resource.yaml
  _resourceNoId:
    description: 'An ordinary (as opposed to built-in) resource that can be created,
      named,

      renamed or deleted by the user. This might be a virtual resource (e.g., a

      volume), or correspond to something in the environment, like a host or a

      server.

      '
    properties:
      name:
        description: 'A user-specified name.

          The name must be locally unique and can be changed.

          '
        type: string
    type: object
    x-sourced-from: models/FA2.0/_resource-no-id.yaml
  _snapshot:
    properties:
      created:
        description: 'The snapshot creation time. Measured in milliseconds since the
          UNIX epoch.

          '
        format: int64
        readOnly: true
        type: integer
      destroyed:
        description: 'Returns a value of `true` if the snapshot has been destroyed
          and is pending eradication.

          The `time_remaining` value displays the amount of time left

          until the destroyed volume snapshot is permanently eradicated.

          Before the `time_remaining` period has elapsed, the destroyed volume snapshot
          can be recovered

          by setting `destroyed=false`.

          Once the `time_remaining` period has elapsed,

          the volume snapshot is permanently eradicated and can no longer be recovered.

          '
        type: boolean
      pod:
        allOf:
        - $ref: '#/definitions/_fixedReference'
        description: 'A reference to the pod.

          '
      provisioned:
        description: 'The provisioned space of the snapshot. Measured in bytes. The
          minimum size is 1048576 (1MB),

          the maximum size is 4503599627370496 (4PB)

          '
        format: int64
        readOnly: true
        type: integer
      source:
        allOf:
        - $ref: '#/definitions/_fixedReference'
        description: 'The volume from which this snapshot was taken.

          For a replicated snapshot being viewed on the target side, the

          `source` is the replica volume.

          '
        readOnly: true
      suffix:
        description: 'The suffix that is appended to the `source_name` value to generate
          the full

          volume snapshot name in the form `VOL.SUFFIX`.

          If the suffix is not specified, the system constructs the snapshot name
          in the form `VOL.NNN`,

          where `VOL` is the volume name, and `NNN` is a monotonically increasing
          number.

          '
        type: string
      time_remaining:
        description: 'The amount of time left until the destroyed snapshot is permanently
          eradicated.

          Measured in milliseconds.

          Before the `time_remaining` period has elapsed, the destroyed snapshot can
          be recovered

          by setting `destroyed=false`.

          '
        format: int64
        readOnly: true
        type: integer
    type: object
    x-sourced-from: models/FA2.0/_snapshot.yaml
  _space:
    properties:
      data_reduction:
        description: 'The ratio of mapped sectors within a volume versus

          the amount of physical space the data occupies after data compression and
          deduplication.

          The data reduction ratio does not include thin provisioning savings.

          For example, a data reduction ratio of 5&#58;1 means that

          for every 5 MB the host writes to the array, 1 MB is stored on the array''s
          flash modules.

          '
        format: float
        readOnly: true
        type: number
      shared:
        description: 'The physical space occupied by deduplicated data, meaning that
          the space is shared with other

          volumes and snapshots as a result of data deduplication.

          Measured in bytes.

          On Evergreen//One arrays, this is the effective space contributed by data
          that is not unique

          to a specific volume, managed directory, or snapshot, measured in bytes.

          '
        example: 111863360624
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      snapshots:
        description: 'The physical space occupied by data unique to one or more snapshots.

          Measured in bytes.

          On Evergreen//One arrays, this is the effective space contributed by data
          unique to one or

          more snapshots, measured in bytes.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      system:
        description: 'The physical space occupied by internal array metadata. Measured
          in bytes.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      thin_provisioning:
        description: 'The percentage of volume sectors that do not contain host-written
          data

          because the hosts have not written data to them or the sectors have been
          explicitly trimmed.

          '
        format: float
        maximum: 1.0
        minimum: 0.0
        readOnly: true
        type: number
      total_physical:
        description: 'The total physical space occupied by system, shared space, volume,
          and snapshot data.

          Measured in bytes.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      total_provisioned:
        description: 'For a single volume, the provisioned size of the volume.

          For all other resources, the total provisioned size of all volumes

          that are connected to or are inside the resource.

          Represents storage capacity reported to hosts.

          Measured in bytes.

          '
        example: 19937690345472
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      total_reduction:
        description: 'The ratio of provisioned sectors within a volume versus

          the amount of physical space the data occupies

          after reduction via data compression and deduplication

          and with thin provisioning savings.

          Total reduction is data reduction with thin provisioning savings.

          For example, a total reduction ratio of 10&#58;1 means that

          for every 10 MB of provisioned space,

          1 MB is stored on the array''s flash modules.


          '
        format: float
        readOnly: true
        type: number
      unique:
        description: 'The unique physical space occupied by customer data.

          Unique physical space does not include shared space, snapshots, and internal
          array metadata.

          Measured in bytes.

          On Evergreen//One arrays, this is the effective space contributed by unique
          customer data,

          measured in bytes.

          Unique data does not include shared space, snapshots, and internal array
          metadata.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
      virtual:
        description: 'The amount of logically written data that a volume or a snapshot
          references.

          Measured in bytes.

          '
        format: int64
        minimum: 0
        readOnly: true
        type: integer
    type: object
    x-sourced-from: models/FA2.0/_space.yaml
  _transfer:
    properties:
      completed:
        description: 'The timestamp of when the snapshot replication process completed.

          Measured in milliseconds since since the UNIX epoch.

          '
        format: int64
        readOnly: true
        type: integer
      data_transferred:
        description: 'The number of bytes transferred from the source array to the
          target as part of

          the replication process.

          The data transferred amount is calculated as the size difference between
          the

          current and previous snapshots after data reduction.

          Measured in bytes.

          '
        format: int64
        readOnly: true
        type: integer
      physical_bytes_written:
        description: 'The amount of data persisted on the target due to replication.
          Measured in bytes.

          '
        format: int64
        readOnly: true
        type: integer
      progress:
        description: 'The percentage progress of the snapshot transfer from the source
          array to the target.

          Displayed in decimal format.

          '
        example: 0.66
        format: float
        max: 1.0
        min: 0.0
        readOnly: true
        type: number
      started:
        description: 'The timestamp of when the snapshot replication process started.

          Measured in milliseconds since the UNIX epoch.

          '
        format: int64
        readOnly: true
        type: integer
    type: object
    x-sourced-from: models/FA2.0/_transfer.yaml
  _volumeCommon:
    allOf:
    - $ref: '#/definitions/_resource'
    - description: 'A disk-like random access virtual storage device that a FlashArray

        system exports to hosts via a logical unit number (LUN). To a host,

        a volume contains a number of 512-byte sectors in which data can be

        written and from which it can be read.

        '
      properties:
        connection_count:
          description: 'The total number of hosts and host groups connected to the
            volume.

            '
          format: int64
          readOnly: true
          type: integer
        created:
          description: The volume creation time. Measured in milliseconds since the
            UNIX epoch.
          format: int64
          readOnly: true
          type: integer
        destroyed:
          description: 'Returns a value of `true` if the volume has been destroyed
            and is pending eradication.

            The `time_remaining` value displays the amount of time left

            until the destroyed volume is permanently eradicated.

            Before the `time_remaining` period has elapsed, the destroyed volume can
            be recovered

            by setting `destroyed=false`.

            Once the `time_remaining` period has elapsed,

            the volume is permanently eradicated and can no longer be recovered.

            '
          type: boolean
        host_encryption_key_status:
          description: 'The host encryption key status for this volume.

            Possible values include `none`, `detected`, and `fetched`.

            '
          example: detected
          readOnly: true
          type: string
        provisioned:
          description: 'The virtual size of the volume. Measured in bytes

            and must be a multiple of 512. The maximum size is

            4503599627370496 (4PB)

            '
          format: int64
          type: integer
        qos:
          allOf:
          - $ref: '#/definitions/_qos'
          description: 'Displays QoS limit information.

            '
        serial:
          description: 'A globally unique serial number generated by the system when
            the volume is created.

            '
          readOnly: true
          type: string
        space:
          allOf:
          - $ref: '#/definitions/_space'
          description: 'Displays size and space consumption information.

            '
        time_remaining:
          description: 'The amount of time left until the destroyed volume is permanently
            eradicated.

            Measured in milliseconds.

            Before the `time_remaining` period has elapsed, the destroyed volume can
            be recovered

            by setting `destroyed=false`.

            '
          format: int64
          readOnly: true
          type: integer
      type: object
    x-sourced-from: models/FA2.0/_volume-common.yaml
host: '[array]'
info:
  description: "## Pure Swagger UI for FlashArray\nA light weight tool to explore\
    \ the API for FlashArray, community supported. \nFor  help with this tool, use\
    \ [Pure1 Community](https://community.purestorage.com/) or the [code-purestorage\
    \ Slack](https://community.purestorage.com/discussion/9561/join-the-new-pure-code-slack-team-for-api-and-extensibility-discussions)\n\
    \n## Authenticate using API Token\nTo get an API Key, you can do POST /auth/apitoken\
    \ with your user/pass using the 1.x API, then use your API key with POST /login.\
    \  The array returns \na header  with the name \"x-auth-token\".  This swagger\
    \ UI tool, translates that into a cookie so the webbrowser will send on subsequent\
    \ calls.  This Swagger UI tool then\ntranslates that cookie back into a header\
    \ when making the API request to the array.\n\n## Authenticate using OAuth\n###\
    \ Manually generate an id_token \n\n### \n\nIntro to how OAuth2 works with the\
    \ 2.0 version: [Intro](https://support.purestorage.com/FlashArray/PurityFA/Purity_FA_REST_API/Reference/REST_API_2.0_Authentication_Guide)"
  title: FlashArray REST API
  version: '2.0'
  x-logo:
    altText: Pure Storage logo
    backgroundColor: '#ffffff'
    url:
      $ref: ../redoc/PS-LogoBase64-FA.txt
parameters:
  Authorization:
    description: 'Access token (in JWT format) required to use any API

      endpoint (except `/oauth2`, `/login`, and `/logout`)

      '
    in: header
    name: Authorization
    type: string
    x-sourced-from: queries/FA2.0/authorization.header.yaml
  Destroyed:
    description: 'If set to `true`, lists only destroyed objects

      that are in the eradication pending state.

      If set to `false`, lists only objects that are not destroyed.

      For destroyed objects, the time remaining is displayed in milliseconds.

      '
    in: query
    name: destroyed
    readOnly: true
    type: boolean
    x-sourced-from: queries/FA2.0/destroyed.query.yaml
  Filter:
    description: 'Narrows down the results to only the response objects

      that satisfy the filter criteria.

      '
    in: query
    name: filter
    type: string
    x-sourced-from: queries/FA2.0/filter.query.yaml
  Group_names:
    collectionFormat: csv
    description: 'Performs the operation on the unique group name specified.

      Examples of groups include host groups, pods, protection groups, and volume
      groups.

      Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`.


      '
    in: query
    items:
      type: string
    name: group_names
    type: array
    x-sourced-from: queries/FA2.0/group_names.query.yaml
  History_end_time:
    description: 'Displays historical performance data for the specified time window,

      where `start_time` is the beginning of the time window,

      and `end_time` is the end of the time window.

      The `start_time` and `end_time` parameters

      are specified in milliseconds since the UNIX epoch.

      If `start_time` is not specified,

      the start time will default to one resolution before the end time,

      meaning that the most recent sample of performance data will be displayed.

      If `end_time`is not specified, the end time will default to the current time.

      Include the `resolution` parameter to display the performance data at the specified
      resolution.

      If not specified, `resolution` defaults to the lowest valid resolution.


      '
    format: int64
    in: query
    name: end_time
    type: integer
    x-sourced-from: queries/FA2.0/history_end_time.query.yaml
  History_resolution:
    description: 'The number of milliseconds between samples of historical data.

      For array-wide performance metrics (`/arrays/performance` endpoint),

      valid values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),

      `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and `86400000`
      (24 hours).

      For performance metrics on storage objects (`<object name>/performance` endpoint),

      such as volumes,

      valid values are `30000` (30 seconds), `300000` (5 minutes), `1800000` (30 minutes),

      `7200000` (2 hours), `28800000` (8 hours), and `86400000` (24 hours).

      For space metrics, (`<object name>/space` endpoint),

      valid values are `300000` (5 minutes), `1800000` (30 minutes), `7200000` (2
      hours),

      `28800000` (8 hours), and `86400000` (24 hours).

      Include the `start_time` parameter to display the performance data

      starting at the specified start time.

      If `start_time` is not specified,

      the start time will default to one resolution before the end time,

      meaning that the most recent sample of performance data will be displayed.

      Include the `end_time` parameter to display the performance data until the specified
      end time.

      If `end_time`is not specified, the end time will default to the current time.

      If the `resolution` parameter is not specified

      but either the `start_time` or `end_time` parameter is,

      then `resolution` will default to the lowest valid resolution.

      '
    format: int64
    in: query
    minimum: 0
    name: resolution
    type: integer
    x-example: 30000
    x-sourced-from: queries/FA2.0/history_resolution.query.yaml
  History_start_time:
    description: 'Displays historical performance data for the specified time window,

      where `start_time` is the beginning of the time window,

      and `end_time` is the end of the time window.

      The `start_time` and `end_time` parameters

      are specified in milliseconds since the UNIX epoch.

      If `start_time` is not specified,

      the start time will default to one resolution before the end time,

      meaning that the most recent sample of performance data will be displayed.

      If `end_time`is not specified, the end time will default to the current time.

      Include the `resolution` parameter to display the performance data at the specified
      resolution.

      If not specified, `resolution` defaults to the lowest valid resolution.


      '
    format: int64
    in: query
    name: start_time
    type: integer
    x-sourced-from: queries/FA2.0/history_start_time.query.yaml
  Host_group_names:
    collectionFormat: csv
    description: 'Performs the operation on the host group specified.

      Enter multiple names in comma-separated format.

      A request cannot include a mix of multiple objects with multiple names.

      For example, a request cannot include a mix of multiple host group names and
      volume names;

      instead, at least one of the objects (e.g., `host_group_names`) must be set
      to only one name

      (e.g., `hgroup01`).

      '
    in: query
    items:
      type: string
    name: host_group_names
    type: array
    x-sourced-from: queries/FA2.0/host_group_names.query.yaml
  Host_names:
    collectionFormat: csv
    description: 'Performs the operation on the hosts specified.

      Enter multiple names in comma-separated format.

      For example, `host01,host02`.

      A request cannot include a mix of multiple objects with multiple names.

      For example, a request cannot include a mix of multiple host names and volume
      names;

      instead, at least one of the objects (e.g., `host_names`) must be set to only
      one name

      (e.g., `host01`).

      '
    in: query
    items:
      type: string
    name: host_names
    type: array
    x-sourced-from: queries/FA2.0/host_names.query.yaml
  Ids:
    collectionFormat: csv
    description: 'Performs the operation on the unique resource IDs specified.

      Enter multiple resource IDs in comma-separated format.

      The `ids` or `names` parameter is required, but they cannot be set together.

      '
    in: query
    items:
      type: string
    name: ids
    type: array
    x-sourced-from: queries/FA2.0/ids.query.yaml
  Limit:
    description: 'Limits the size of the response to the specified number of objects
      on each page.

      To return the total number of resources, set `limit=0`.

      The total number of resources is returned as a `total_item_count` value.

      If the page size requested is larger than the system maximum limit,

      the server returns the maximum limit, disregarding the requested page size.

      '
    format: int32
    in: query
    minimum: 0
    name: limit
    type: integer
    x-example: 10
    x-sourced-from: queries/FA2.0/limit.query.yaml
  Member_names:
    collectionFormat: csv
    description: 'Performs the operation on the unique member name specified.

      Examples of members include volumes, hosts, host groups, and directories.

      Enter multiple names in comma-separated format. For example, `vol01,vol02`.

      '
    in: query
    items:
      type: string
    name: member_names
    type: array
    x-sourced-from: queries/FA2.0/member_names.query.yaml
  Names:
    collectionFormat: csv
    description: 'Performs the operation on the unique name specified.

      Enter multiple names in comma-separated format.

      For example, `name01,name02`.

      '
    in: query
    items:
      type: string
    name: names
    type: array
    x-sourced-from: queries/FA2.0/names.query.yaml
  OauthGrantType:
    default: urn:ietf:params:oauth:grant-type:token-exchange
    description: 'The method by which the access token will be obtained.

      The Pure Storage REST API supports the OAuth 2.0 "token exchange" grant type,

      which indicates that a token exchange is being performed.

      Set `grant_type` to `urn:ietf:params:oauth:grant-type:token-exchange`.

      '
    in: formData
    name: grant_type
    required: true
    type: string
    x-sourced-from: queries/TEx-v1/oauth-grant-type.query.yaml
  OauthSubjectToken:
    description: 'An encoded security ID Token representing the identity of the party
      on behalf of

      whom the request is being made. The token must be issued by a trusted

      identity provider which must be either a registered application in Pure1

      or an enabled API client on the array. The token must be a JSON Web Token

      and must contain the following claims:


      > | JWT claim | Location | API Client Field | Description | Required By |


      > |-|-|-|-|-|


      > | kid | Header | key_id | Key ID of the API client that issues the identity
      token. | FlashArray

      and FlashBlade only. |


      > | aud | Payload | id | Client ID of the API client that issues the identity
      token. | FlashArray

      and FlashBlade only. |


      > | sub | Payload | | Login name of the array user for whom the token should
      be issued.

      This must be a valid user in the system. | FlashArray and FlashBlade only. |


      > | iss | Payload | issuer | Application ID for the Pure1 or API client''s trusted
      identity

      issuer on the array. | All products. |


      > | iat | Payload | | Timestamp of when the identity token was issued.

      Measured in milliseconds since the UNIX epoch. | All products. |


      > | exp | Payload | | Timestamp of when the identity token will expire.

      Measured in milliseconds since the UNIX epoch. | All products. |



      Each token must also be signed with the private key that is paired with the

      API client''s public key.


      '
    in: formData
    name: subject_token
    required: true
    type: string
    x-sourced-from: queries/TEx-v1/oauth-subject-token.query.yaml
  OauthSubjectTokenType:
    default: urn:ietf:params:oauth:token-type:jwt
    description: 'An identifier that indicates the type of security token specifed
      in the `subject_token` parameter.

      The Pure Storage REST API supports the JSON Web Token (JWT)

      as the means for requesting the access token.

      Set `subject_token_type` to `urn:ietf:params:oauth:token-type:jwt`.

      '
    in: formData
    name: subject_token_type
    required: true
    type: string
    x-sourced-from: queries/TEx-v1/oauth-subject-token-type.query.yaml
  Offset:
    description: 'The starting position based on the results of the query

      in relation to the full set of response objects returned.

      '
    format: int32
    in: query
    minimum: 0
    name: offset
    type: integer
    x-sourced-from: queries/FA2.0/offset.query.yaml
  OnSingle:
    description: 'Performs the operation on the target name specified.

      For example, `targetName01`.

      '
    in: query
    name: 'on'
    type: string
    x-sourced-from: queries/FA2.0/on-single.query.yaml
  Overwrite:
    description: 'If set to `true`,

      overwrites an existing object during an object copy operation.

      If set to `false` or not set at all and the target name is an existing object,

      the copy operation fails.

      Required if the `source` body parameter is set

      and the source overwrites an existing object during the copy operation.

      '
    in: query
    name: overwrite
    type: boolean
    x-sourced-from: queries/FA2.0/overwrite.query.yaml
  Protocol_endpoint_names:
    collectionFormat: csv
    description: 'Performs the operation on the protocol endpoints specified.

      Enter multiple names in comma-separated format.

      For example, `pe01,pe02`.

      A request cannot include a mix of multiple objects with multiple names.

      For example, a request cannot include a mix of multiple protocol endpoint names
      and host names;

      instead, at least one of the objects (e.g., `protocol_endpoint_names`) must
      be set to one name

      (e.g., `pe01`).

      '
    in: query
    items:
      type: string
    name: protocol_endpoint_names
    type: array
    x-sourced-from: queries/FA2.0/protocol_endpoint_names.query.yaml
  Sort:
    collectionFormat: csv
    description: 'Returns the response objects in the order specified.

      Set `sort` to the name in the response by which to sort.

      Sorting can be performed on any of the names in the response,

      and the objects can be sorted in ascending or descending order.

      By default, the response objects are sorted in ascending order.

      To sort in descending order, append the minus sign (`-`) to the name.

      A single request can be sorted on multiple objects.

      For example, you can sort all volumes from largest to smallest volume size,

      and then sort volumes of the same size in ascending order by volume name.

      To sort on multiple names, list the names as comma-separated values.

      '
    in: query
    items:
      pattern: ^[a-z]+(_[a-z]+)*-?
      type: string
    name: sort
    type: array
    x-sourced-from: queries/FA2.0/sort.query.yaml
  Source_ids:
    collectionFormat: csv
    description: 'Performs the operation on the source ID specified.

      Enter multiple source IDs in comma-separated format.

      '
    in: query
    items:
      type: string
    name: source_ids
    type: array
    x-sourced-from: queries/FA2.0/source_ids.query.yaml
  Source_names:
    collectionFormat: csv
    description: 'Performs the operation on the source name specified.

      Enter multiple source names in comma-separated format. For example, `name01,name02`.

      '
    in: query
    items:
      type: string
    name: source_names
    type: array
    x-sourced-from: queries/FA2.0/source_names.query.yaml
  Total_item_count:
    description: 'If set to `true`, the `total_item_count` matching the

      specified query parameters is calculated and returned in

      the response. If set to `false`, the `total_item_count`

      is `null` in the response. This may speed up queries

      where the `total_item_count` is large. If not specified,

      defaults to `false`.

      '
    in: query
    name: total_item_count
    type: boolean
    x-sourced-from: queries/FA2.0/total_item_count.query.yaml
  Total_only:
    description: 'If set to `true`, returns the aggregate value of all items after
      filtering.

      Where it makes more sense, the average value is displayed instead.

      The values are displayed for each name where meaningful.

      If `total_only=true`, the `items` list will be empty.

      '
    in: query
    name: total_only
    type: boolean
    x-sourced-from: queries/FA2.0/total_only.query.yaml
  Truncate:
    description: 'If set to `true`, reduces the size of a volume

      during a volume resize operation.

      When a volume is truncated, Purity automatically takes an undo snapshot,

      providing a 24-hour window during which the previous contents

      can be retrieved. After truncating a volume,

      its provisioned size can be subsequently increased,

      but the data in truncated sectors cannot be retrieved.

      If set to `false` or not set at all and the volume is being reduced in size,

      the volume copy operation fails.

      Required if the `provisioned` parameter is set to a volume size

      that is smaller than the original size.

      '
    in: query
    name: truncate
    type: boolean
    x-sourced-from: queries/FA2.0/truncate.query.yaml
  Volume_names:
    collectionFormat: csv
    description: 'Performs the operation on the volume specified.

      Enter multiple names in comma-separated format.

      For example, `vol01,vol02`.

      A request cannot include a mix of multiple objects with multiple names.

      For example, a request cannot include a mix of multiple volume names and host
      names;

      instead, at least one of the objects (e.g., `volume_names`) must be set to only
      one name

      (e.g., `vol01`).

      '
    in: query
    items:
      type: string
    name: volume_names
    type: array
    x-sourced-from: queries/FA2.0/volume_names.query.yaml
  XRequestId:
    description: 'Supplied by client during request or generated by server.

      '
    in: header
    name: X-Request-ID
    type: string
    x-sourced-from: queries/FA2.0/x-request-id.header.yaml
  XRequestId.TEx-v1:
    description: 'Supplied by client during request or generated by server.

      '
    in: header
    name: X-Request-ID
    type: string
    x-sourced-from: queries/TEx-v1/x-request-id.header.yaml
paths:
  /api/2.0/connections:
    delete:
      description: 'Break the connection between a volume and its associated host

        or host group.

        The `volume_names` and `host_names` or `host_group_names` query parameters
        are required.

        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Host_group_names'
      - $ref: '#/parameters/Host_names'
      - $ref: '#/parameters/Volume_names'
      responses:
        200:
          description: OK
      summary: Break a connection between a volume and its host or host group
      tags:
      - Connections
    get:
      description: 'Return a list of connections between a volume and its hosts and
        host groups,

        and the LUNs used by the associated hosts to address these volumes.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Filter'
      - $ref: '#/parameters/Host_group_names'
      - $ref: '#/parameters/Host_names'
      - $ref: '#/parameters/Limit'
      - $ref: '#/parameters/Offset'
      - $ref: '#/parameters/Protocol_endpoint_names'
      - $ref: '#/parameters/Sort'
      - $ref: '#/parameters/Total_item_count'
      - $ref: '#/parameters/Volume_names'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ConnectionGetResponse'
      summary: List volume connections
      tags:
      - Connections
    post:
      description: 'Create a connection between a volume and a host or host group.

        The `volume_names` and `host_names` or `host_group_names` query parameters
        are required.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Host_group_names'
      - $ref: '#/parameters/Host_names'
      - $ref: '#/parameters/Volume_names'
      - in: body
        name: connection
        schema:
          $ref: '#/definitions/ConnectionPost'
        x-codegen-request-body-name: connection
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ConnectionResponse'
      summary: Create a connection between a volume and host or host group
      tags:
      - Connections
    x-sourced-from: paths/FA2.0/connections.path.yaml
  /api/2.0/host-groups:
    delete:
      description: 'Delete a host group.

        The `names` query parameter is required.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Names'
      responses:
        200:
          description: OK
      summary: Delete a host group
      tags:
      - Host Groups
    get:
      description: 'Return a list of host groups.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Filter'
      - $ref: '#/parameters/Limit'
      - $ref: '#/parameters/Names'
      - $ref: '#/parameters/Offset'
      - $ref: '#/parameters/Sort'
      - $ref: '#/parameters/Total_item_count'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/HostGroupGetResponse'
      summary: List host groups
      tags:
      - Host Groups
    patch:
      description: 'Manage a host group.

        The `names` query parameter is required.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Names'
      - in: body
        name: host-group
        required: true
        schema:
          $ref: '#/definitions/HostGroupPatch'
        x-codegen-request-body-name: host-group
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/HostGroupResponse'
      summary: Manage a host group
      tags:
      - Host Groups
    post:
      description: 'Create a host group.

        The `names` query parameter is required.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Names'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/HostGroupResponse'
      summary: Create a host group
      tags:
      - Host Groups
    x-sourced-from: paths/FA2.0/host-groups.path.yaml
  /api/2.0/host-groups/hosts:
    get:
      description: 'Returns a list of host groups that are associated with hosts.



        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Filter'
      - $ref: '#/parameters/Group_names'
      - $ref: '#/parameters/Limit'
      - $ref: '#/parameters/Member_names'
      - $ref: '#/parameters/Offset'
      - $ref: '#/parameters/Sort'
      - $ref: '#/parameters/Total_item_count'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MemberNoIdAllGetResponse'
      summary: List host groups associated with hosts
      tags:
      - Host Groups
    x-sourced-from: paths/FA2.0/host-groups-hosts-members.path.yaml
  /api/2.0/host-groups/performance:
    get:
      description: 'Return real-time and historical performance data,

        real-time latency data, and

        average I/O sizes across all volumes,

        displayed both by host group

        and as a total across all host groups.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Filter'
      - $ref: '#/parameters/Limit'
      - $ref: '#/parameters/Names'
      - $ref: '#/parameters/Offset'
      - $ref: '#/parameters/Sort'
      - $ref: '#/parameters/Total_item_count'
      - $ref: '#/parameters/Total_only'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResourcePerformanceNoIdGetResponse'
      summary: List host group performance data
      tags:
      - Host Groups
    x-sourced-from: paths/FA2.0/host-groups-performance.path.yaml
  /api/2.0/host-groups/performance/by-array:
    get:
      description: 'Return real-time and historical performance data, real-time latency
        data,

        and average I/O size data.

        The data returned is for each volume that is connected to a host group on
        the current array and

        for each volume that is connected to a host group on any remote arrays

        that are visible to the current array.

        The data is displayed as a total across all host groups on each array and

        by individual host group.

        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Filter'
      - $ref: '#/parameters/Limit'
      - $ref: '#/parameters/Names'
      - $ref: '#/parameters/Offset'
      - $ref: '#/parameters/Sort'
      - $ref: '#/parameters/Total_item_count'
      - $ref: '#/parameters/Total_only'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResourcePerformanceNoIdByArrayGetResponse'
      summary: List host group performance data by array
      tags:
      - Host Groups
    x-sourced-from: paths/FA2.0/host-groups-performance-by-array.path.yaml
  /api/2.0/hosts:
    delete:
      description: 'Deletes an existing host. All volumes that are connected to the
        host,

        either through private or shared connections,

        must be disconnected from the host before the host can be deleted.

        The `names` query parameter is required.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Names'
      responses:
        200:
          description: OK
      summary: Delete a host
      tags:
      - Hosts
    get:
      description: 'Returns a list of hosts.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Filter'
      - $ref: '#/parameters/Limit'
      - $ref: '#/parameters/Names'
      - $ref: '#/parameters/Offset'
      - $ref: '#/parameters/Sort'
      - $ref: '#/parameters/Total_item_count'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/HostGetResponse'
      summary: List hosts
      tags:
      - Hosts
    patch:
      description: 'Manages an existing host, including its storage network addresses,
        CHAP, host personality, and

        preferred arrays, or associate a host to a host group.

        The `names` query parameter is required.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Names'
      - in: body
        name: host
        required: true
        schema:
          $ref: '#/definitions/HostPatch'
        x-codegen-request-body-name: host
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/HostResponse'
      summary: Manage a host
      tags:
      - Hosts
    post:
      description: 'Creates a host.

        The `names` query parameter is required.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Names'
      - in: body
        name: host
        required: true
        schema:
          $ref: '#/definitions/HostPost'
        x-codegen-request-body-name: host
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/HostResponse'
      summary: Create a host
      tags:
      - Hosts
    x-sourced-from: paths/FA2.0/hosts.path.yaml
  /api/2.0/hosts/host-groups:
    get:
      description: 'Returns a list of hosts that are associated with host groups.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Filter'
      - $ref: '#/parameters/Group_names'
      - $ref: '#/parameters/Limit'
      - $ref: '#/parameters/Member_names'
      - $ref: '#/parameters/Offset'
      - $ref: '#/parameters/Sort'
      - $ref: '#/parameters/Total_item_count'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MemberNoIdAllGetResponse'
      summary: List hosts associated with host groups
      tags:
      - Hosts
    x-sourced-from: paths/FA2.0/hosts-host-groups-members.path.yaml
  /api/2.0/hosts/performance:
    get:
      description: 'Return real-time and historical performance data,

        real-time latency data, and

        average I/O sizes across all volumes,

        displayed both by host

        and as a total across all hosts.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Filter'
      - $ref: '#/parameters/Limit'
      - $ref: '#/parameters/Names'
      - $ref: '#/parameters/Offset'
      - $ref: '#/parameters/Sort'
      - $ref: '#/parameters/Total_item_count'
      - $ref: '#/parameters/Total_only'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResourcePerformanceNoIdGetResponse'
      summary: List host performance data
      tags:
      - Hosts
    x-sourced-from: paths/FA2.0/hosts-performance.path.yaml
  /api/2.0/hosts/performance/by-array:
    get:
      description: 'Return real-time and historical performance data, real-time latency
        data,

        and average I/O size data.

        The data returned is for each volume that is connected to a host on the current
        array and

        for each volume that is connected to a host on any remote arrays

        that are visible to the current array.

        The data is displayed as a total across all hosts on each array and by individual
        host.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Filter'
      - $ref: '#/parameters/Limit'
      - $ref: '#/parameters/Names'
      - $ref: '#/parameters/Offset'
      - $ref: '#/parameters/Sort'
      - $ref: '#/parameters/Total_item_count'
      - $ref: '#/parameters/Total_only'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResourcePerformanceNoIdByArrayGetResponse'
      summary: List host performance data by array
      tags:
      - Hosts
    x-sourced-from: paths/FA2.0/hosts-performance-by-array.path.yaml
  /api/2.0/login:
    post:
      description: 'Exchange an API token for a session token.

        '
      parameters:
      - $ref: '#/parameters/XRequestId'
      - description: 'API token for a user.

          '
        in: header
        name: api-token
        type: string
        x-example: 0f2e2884-9486-c6c2-438c-f50418f2aac3
      responses:
        200:
          description: OK
          headers:
            x-auth-token:
              description: Session token for a user.
              example: 3be3d489-55c6-4643-90ac-a476dbc98812
              type: string
          schema:
            $ref: '#/definitions/UsernameResponse'
      summary: POST login (placeholder)
      tags:
      - Authorization
    x-sourced-from: paths/FA2.0/login.path.yaml
  /api/2.0/logout:
    post:
      description: 'Invalidate a session token.

        '
      parameters:
      - $ref: '#/parameters/XRequestId'
      - description: Session token for a user.
        in: header
        name: x-auth-token
        type: string
        x-example: 3be3d489-55c6-4643-90ac-a476dbc98812
      responses:
        200:
          description: OK
      summary: POST logout (placeholder)
      tags:
      - Authorization
    x-sourced-from: paths/FA2.0/logout.path.yaml
  /api/2.0/volume-snapshots:
    delete:
      description: 'Eradicate a volume snapshot that has been destroyed and is pending
        eradication.

        Eradicated volumes snapshots cannot be recovered.

        Volume snapshots are destroyed through the `PATCH` method.

        The `ids` or `names` parameter is required, but they cannot be set together.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Ids'
      - $ref: '#/parameters/Names'
      responses:
        200:
          description: OK
      summary: Eradicate a volume snapshot
      tags:
      - Volume Snapshots
    get:
      description: 'Return a list of volume snapshots, including those pending eradication.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Destroyed'
      - $ref: '#/parameters/Filter'
      - $ref: '#/parameters/Ids'
      - $ref: '#/parameters/Limit'
      - $ref: '#/parameters/Names'
      - $ref: '#/parameters/Offset'
      - $ref: '#/parameters/Sort'
      - $ref: '#/parameters/Source_ids'
      - $ref: '#/parameters/Source_names'
      - $ref: '#/parameters/Total_item_count'
      - $ref: '#/parameters/Total_only'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VolumeSnapshotGetResponse'
      summary: List volume snapshots
      tags:
      - Volume Snapshots
    patch:
      description: 'Rename, destroy, or recover a volume snapshot.

        To rename the suffix of a volume snapshot, set `name` to the new suffix name.

        To recover a volume snapshot that has been destroyed and is pending eradication,

        set `destroyed=true`.

        The `ids` or `names` parameter is required, but they cannot be set together.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Ids'
      - $ref: '#/parameters/Names'
      - in: body
        name: volume-snapshot
        required: true
        schema:
          $ref: '#/definitions/VolumeSnapshotPatch'
        x-codegen-request-body-name: volume-snapshot
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VolumeSnapshotResponse'
      summary: Manage a volume snapshot
      tags:
      - Volume Snapshots
    post:
      description: 'Create a point-in-time snapshot of the contents of a volume.

        The `source_ids` or `source_names` parameter is required, but they cannot
        be set together.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/OnSingle'
      - $ref: '#/parameters/Source_ids'
      - $ref: '#/parameters/Source_names'
      - in: body
        name: volume-snapshot
        required: true
        schema:
          $ref: '#/definitions/VolumeSnapshotPost'
        x-codegen-request-body-name: volume-snapshot
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VolumeSnapshotResponse'
      summary: Generate a volume snapshot
      tags:
      - Volume Snapshots
    x-sourced-from: paths/FA2.0/volume-snapshots.path.yaml
  /api/2.0/volume-snapshots/transfer:
    get:
      description: 'Returns a list of volume snapshots and their transfer statistics.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Destroyed'
      - $ref: '#/parameters/Filter'
      - $ref: '#/parameters/Ids'
      - $ref: '#/parameters/Limit'
      - $ref: '#/parameters/Offset'
      - $ref: '#/parameters/Sort'
      - $ref: '#/parameters/Source_ids'
      - $ref: '#/parameters/Source_names'
      - $ref: '#/parameters/Total_item_count'
      - $ref: '#/parameters/Total_only'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VolumeSnapshotTransferGetResponse'
      summary: List volume snapshots with transfer statistics
      tags:
      - Volume Snapshots
    parameters:
    - $ref: '#/parameters/Names'
    x-sourced-from: paths/FA2.0/volume-snapshots-transfer.path.yaml
  /api/2.0/volumes:
    delete:
      description: 'Eradicate a volume that has been destroyed and is pending eradication.

        Eradicated volumes cannot be recovered.

        Volumes are destroyed through the `PATCH` method.

        The `ids` or `names` parameter is required, but they cannot be set together.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Ids'
      - $ref: '#/parameters/Names'
      responses:
        200:
          description: OK
      summary: Eradicate a volume
      tags:
      - Volumes
    get:
      description: 'Return a list of volumes, including those pending eradication.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Destroyed'
      - $ref: '#/parameters/Filter'
      - $ref: '#/parameters/Ids'
      - $ref: '#/parameters/Limit'
      - $ref: '#/parameters/Names'
      - $ref: '#/parameters/Offset'
      - $ref: '#/parameters/Sort'
      - $ref: '#/parameters/Total_item_count'
      - $ref: '#/parameters/Total_only'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VolumeGetResponse'
      summary: List volumes
      tags:
      - Volumes
    patch:
      description: 'Renames or destroys a volume.

        To rename a volume, set `name` to the new name.

        To move a volume, set the `pod` or `volume group` parameters.

        To destroy a volume, set `destroyed=true`.

        To recover a volume that has been destroyed and is pending eradication, set

        `destroyed=false`.

        Sets the bandwidth and IOPs limits of a volume group.

        The `ids` or `names` parameter is required, but they cannot be set together.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Ids'
      - $ref: '#/parameters/Names'
      - $ref: '#/parameters/Truncate'
      - in: body
        name: volume
        required: true
        schema:
          $ref: '#/definitions/VolumePatch'
        x-codegen-request-body-name: volume
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VolumeResponse'
      summary: Manage a volume
      tags:
      - Volumes
    post:
      description: 'Create one or more virtual storage volumes of the specified size.

        If `provisioned` is not specified, the size of the new volume defaults to
        1 MB in size.

        The `names` query parameter is required.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Names'
      - $ref: '#/parameters/Overwrite'
      - in: body
        name: volume
        required: true
        schema:
          $ref: '#/definitions/VolumePost'
        x-codegen-request-body-name: volume
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VolumeResponse'
      summary: Create a volume
      tags:
      - Volumes
    x-sourced-from: paths/FA2.0/volumes.path.yaml
  /api/2.0/volumes/performance:
    get:
      description: 'Returns real-time and historical performance data,

        real-time latency data, and

        average I/O sizes for each volume and

        and as a total of all volumes across the entire array.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Destroyed'
      - $ref: '#/parameters/Filter'
      - $ref: '#/parameters/History_end_time'
      - $ref: '#/parameters/History_resolution'
      - $ref: '#/parameters/History_start_time'
      - $ref: '#/parameters/Ids'
      - $ref: '#/parameters/Limit'
      - $ref: '#/parameters/Names'
      - $ref: '#/parameters/Offset'
      - $ref: '#/parameters/Sort'
      - $ref: '#/parameters/Total_item_count'
      - $ref: '#/parameters/Total_only'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResourcePerformanceGetResponse'
      summary: List volume performance data
      tags:
      - Volumes
    x-sourced-from: paths/FA2.0/volumes-performance.path.yaml
  /api/2.0/volumes/performance/by-array:
    get:
      description: 'Returns real-time and historical performance data, real-time latency
        data,

        and average I/O size data.

        The data returned is for each volume on the current array and for each volume

        on any remote arrays that are visible to the current array.

        The data is grouped by individual volumes

        and as a total across all volumes on each array.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Destroyed'
      - $ref: '#/parameters/Filter'
      - $ref: '#/parameters/History_end_time'
      - $ref: '#/parameters/History_resolution'
      - $ref: '#/parameters/History_start_time'
      - $ref: '#/parameters/Ids'
      - $ref: '#/parameters/Limit'
      - $ref: '#/parameters/Names'
      - $ref: '#/parameters/Offset'
      - $ref: '#/parameters/Sort'
      - $ref: '#/parameters/Total_item_count'
      - $ref: '#/parameters/Total_only'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResourcePerformanceByArrayGetResponse'
      summary: List volume performance data by array
      tags:
      - Volumes
    x-sourced-from: paths/FA2.0/volumes-performance-by-array.path.yaml
  /api/2.0/volumes/space:
    get:
      description: 'Return provisioned size and physical storage consumption data

        for each volume.


        '
      parameters:
      - $ref: '#/parameters/Authorization'
      - $ref: '#/parameters/XRequestId'
      - $ref: '#/parameters/Destroyed'
      - $ref: '#/parameters/Filter'
      - $ref: '#/parameters/History_end_time'
      - $ref: '#/parameters/History_resolution'
      - $ref: '#/parameters/History_start_time'
      - $ref: '#/parameters/Ids'
      - $ref: '#/parameters/Limit'
      - $ref: '#/parameters/Offset'
      - $ref: '#/parameters/Sort'
      - $ref: '#/parameters/Total_item_count'
      - $ref: '#/parameters/Total_only'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResourceSpaceGetResponse'
      summary: List volume space information
      tags:
      - Volumes
    parameters:
    - $ref: '#/parameters/Names'
    x-sourced-from: paths/FA2.0/volumes-space.path.yaml
  /api/api_version:
    get:
      description: 'Returns a list of available API versions. No authentication is
        required to access this endpoint.

        '
      parameters:
      - $ref: '#/parameters/XRequestId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Api_versionResponse'
      security: []
      summary: List available API versions
      tags:
      - Authorization
    x-sourced-from: paths/FA2.0/api_version.path.yaml
  /oauth2/1.0/token:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 'Exchanges an ID Token for an OAuth 2.0 access token.

        '
      parameters:
      - $ref: '#/parameters/OauthGrantType'
      - $ref: '#/parameters/OauthSubjectToken'
      - $ref: '#/parameters/OauthSubjectTokenType'
      - $ref: '#/parameters/XRequestId.TEx-v1'
      responses:
        200:
          $ref: '#/responses/OauthToken200'
        400:
          $ref: '#/responses/OauthToken400'
        401:
          $ref: '#/responses/OauthToken401'
      security: []
      summary: Get access token
      tags:
      - Authorization
    x-sourced-from: paths/TEx-v2/oauth-token.path.yaml
  /oauth2_pub_priv_key_pair:
    get:
      description: "Returns a public and private key pair, This is not part of the\
        \ FlashArray API, \nit's a helper endpoint making it easier to generate an\
        \ oauth2 token_id in this Swagger UI. \nThey keys are generated in the Docker\
        \ container running on this machine.\n\nRecommend to NOT use this API but\
        \ to use OpenSSL instead for production use cases:\n  You can generate a public\
        \ and private RSA key pair like this:\n\n    openssl genrsa -des3 -out private.pem\
        \ 2048\n    \n    That generates a 2048-bit RSA key pair, encrypts them with\
        \ a password you provide and writes them to a file. \n    You need to next\
        \ extract the public key file. You will use this, for instance, on your web\
        \ server to encrypt \n    content so that it can only be read with the private\
        \ key.\n    \n    Export the RSA Public Key to a File\n    This is a command\
        \ that is\n    \n    openssl rsa -in private.pem -outform PEM -pubout -out\
        \ public.pem"
      responses:
        200:
          description: Token Generated
          schema:
            properties:
              private_key:
                description: Private key in PEM format.
                type: string
              public_key:
                description: Public key in PEM format.
                type: string
            type: object
      tags:
      - Auth Helpers
  /oauth2_token_from_private_key:
    post:
      consumes:
      - text/plain
      description: "Authenticates to Flasharray, This returns a token_id (think session\
        \ id), from an existing API Client, \nThis is not part of the FlashArray API,\
        \ it's a helper endpoint making it easy to generate an \noauth2 token_id in\
        \ this Swagger UI.  The private key is being passed into the Docker container\
        \ in\norder to sign the JWT token.  Take a look at the Docker container output\
        \ to see more details \nof what is happening.\n\nCopy the output value, Authorization\
        \ header, and then click on the green Authorize button at the \ntop of the\
        \ page.  Paste in the value into "
      parameters:
      - description: Issuer value displayed in the FlashArray API Registration page
          or pureapiclient list ) by default it's the same name as API Client
        in: header
        name: issuer_name
        type: string
      - description: Client Id value displayed in the FlashArray API Registration
          page or pureapiclient list
        in: header
        name: client_id
        type: string
      - description: Key Id value displayed in the FlashArray API Registration page
          or pureapiclient list
        in: header
        name: key_id
        type: string
      - description: The name of a valid user on the FlashArray that will be authenticated
          to.
        in: header
        name: username
        type: string
      - description: Private key in PEM format that was used to create the Public
          key for this API Client specified as the issuer in this call.
        in: body
        name: private_key
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        200:
          description: Token Generated
          schema:
            example:
              username: pureuser
            properties:
              Authorization:
                description: An OAuth bearer token to be used in the Authorization
                  header for authorization to API endpoints.
                type: string
              description:
                desciption: How to use token
                type: string
            type: object
      tags:
      - Auth Helpers
produces:
- application/json
responses:
  OauthToken200:
    description: OK
    schema:
      properties:
        access_token:
          description: 'The serialized OAuth 2.0 Bearer token used to perform authenticated
            requests.

            The access token must be added to the Authorization header of all API
            calls.

            '
          example: eyJraWQiOiJqTlBzL1Ria2c4U2Vua3F3ZmkvbnI4bWxxQ3NPIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJhdWQiOiI5NDcyMTkwOC1mNzkyLTcxMmUtYTYzOS0wODM5ZmE4MzA5MjIiLCJzdWIiOiJqb2UiLCJyb2xlIjoic3RvcmFnZV9hZG1pbiIsImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3Q6OTAwMCIsImlhdCI6MTU0NDAzNjA1MiwiZXhwIjoxNTQ0MDcyMDUyLCJqdGkiOiJjOTg0MjgyNS1mNGM3LTRiNGUtODdkNy03OWFiZmIxYTUzNDgifQ.pnuYAx0CkmkIG0LDrMAQGRr5Ci4-t5yMto3A7BkmyKnAVHBXG5ZIWwvNkWDLhqbA4YjmG7LZmWHrCVehLy2zy2vRLahFURsd3GTnOaWSyWFIyrwpoO81jQRtOQATtseweuMT_-C8o3oa4MgBNBsuKrhwKQS3oDDpeRPaCRTGev1_xRDxh_K6CWJBTAeOP2pcR4LW6zIJkCLzzkMuyL4aTJWWUjSbl04mcFbyw8r8W1GURrmaDVOvvpT634Hk9-GGh9OMIRlS6OOq7cJKc-RRWn18IK2Gs53V_KYshXTBbnRr990Y_qOX8MaTWOJTqgzsojY02MSVuJ9XDJWoIU3TQytr4K1vM2EvwDZDgl7LuUYUn7vWhbKktFzpeZyyhOjq3eX-ViugYKpIjBcG2f_-fcTPceEWGV82rd6TyVNB5A-v9u2kxCdW198t_kesgVQfuupDeS02cZe0ABLCzEHPiVF17JfiVr6sjkciioxN7Wj_j18ga4U0mdSukauT8yhbgCW1ijTVTFu1VwWebW0s8z3BWMtXdTtZ3BhcZVAdKRF8bOq7nfEbUQGhTn9g7dK-yF050winjtp-VTL2oUtkF5j1v_N8vPNiN9ZdkGJZr7VVZ-qeOJZcjdaRbxL6YB__yT1wkTcKPh8RHz6GUq7Jbyw8VIlcBE2nvJ63d0tH9C4
          type: string
        expires_in:
          description: 'The duration after which the access token will expire.

            Measured in seconds. This differs from other duration

            fields that are expressed in milliseconds.

            '
          example: 35999
          format: uint32
          type: integer
        issued_token_type:
          description: 'The type of token that is issued.

            The Pure Storage REST API supports OAuth 2.0 access tokens.

            '
          example: urn:ietf:params:oauth:token-type:access_token
          type: string
        token_type:
          description: 'Indicates how the API client can use the access token issued.

            The Pure Storage REST API supports the `Bearer` token.

            '
          example: Bearer
          type: string
      title: oauth_token_response
      type: object
    x-sourced-from: responses/TEx-v1/oauth-token-200.response.yaml
  OauthToken400:
    description: BAD REQUEST
    schema:
      properties:
        error:
          example: invalid_request
          type: string
        error_description:
          example: 'Unsupported subject_token_type: urn:ietf:params:oauth:token-'
          type: string
      type: object
    x-sourced-from: responses/TEx-v2/oauth-token-400.response.yaml
  OauthToken401:
    description: UNAUTHORIZED
    schema:
      properties:
        error:
          example: invalid_client
          type: string
        error_description:
          example: 'Invalid identity: JWT validation failed.'
          type: string
      type: object
    x-sourced-from: responses/TEx-v1/oauth-token-401.response.yaml
schemes:
- https
security:
- OAuth2-Bearer-Token: []
- X-Auth-Token: []
securityDefinitions:
  OAuth2-Bearer-Token:
    in: header
    name: Authorization
    type: apiKey
  X-Auth-Token:
    in: header
    name: x-auth-token
    type: apiKey
swagger: '2.0'
tags:
- description: A set of endpoints not in the Purity API, but to make OAuth using this
    tool simple and easy to understand.
  name: Auth Helpers
- description: 'Pure Storage uses the OAuth 2.0 Token Exchange authorization grant
    and JSON Web Tokens (JWTs)

    to authenticate to the Pure Storage REST API.

    Before you can exchange the ID Token for an access token, create and enable the
    API client

    to generate the `key_id`, `id`, and `issuer` values.

    These values will be used as JWT claims for the `subject_token` parameter.

    '
  name: Authorization
- description: 'A connection gives hosts access to volumes on the array.

    The system supports private (host-volume) connections

    and public (host group-volume) connections.

    A private connection connects one volume to one host.

    Private connections are typically used for boot volumes

    and for stand-alone (non-clustered) host applications.

    A shared connection connects a designated set of hosts (via a host group)

    to a designated set of volumes, providing the hosts with a consistent "view" of
    the volumes.

    All associated hosts use the same LUN to address a given associated volume.

    All hosts and volumes associated with a host group are

    automatically connected to each other by virtue of their associations with the
    group.

    Shared connections are useful for cluster applications in which several related
    hosts require

    consistent (same LUN) connectivity to a set of storage volumes.

    '
  name: Connections
- description: 'Host groups implement consistent connections between a set of hosts
    and one or more volumes.

    Connections are consistent in the sense that all hosts associated with a host
    group

    address a volume connected to the group by the same LUN. Host groups are typically

    used to provide a common view of storage volumes to the hosts in a clustered application.

    '
  name: Host Groups
- description: 'Hosts organize the storage network addresses

    (iSCSI Qualified Names, NVMe qualified names, or Fibre Channel world wide names)

    of client computers to identify the host''s intiators.

    Hosts also control communications between clients and volumes.

    After a volume has been created,

    establish a host-volume connection so that the host

    can read data from and write data to the volume.

    '
  name: Hosts
- description: 'A volume represents a container that manages the storage space on
    the array.

    After a volume has been created, establish a host-volume connection so that the
    host

    can read data from and write data to the volume.

    Furthermore, protect the volume data through asynchronous replication to a remote
    array,

    synchronous replication between remote arrays, and replication to external storage
    systems.

    '
  name: Volumes
- description: 'Volume snapshots are immutable, point-in-time images of the contents
    of one or more volumes.

    There are two types of volume snapshots&#58;

    volume snapshots and protection group volume snapshots.

    A volume snapshot is a snapshot that captures the contents of a single volume.

    A protection group volume snapshot is a volume snapshot that is created from a
    group of

    volumes that are part of the same protection group. All of the volume snapshots
    created from a

    protection group snapshot are point-in-time consistent with each other.

    '
  name: Volume Snapshots
